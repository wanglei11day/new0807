/**
 * Koffeeware Creator Five - HTML 5 PhotoSuite
 * (c) Koffeeware 2013-2016
 * http://www.koffeeware.com
 * Unlicensed use of this software is prohibited and will be prosecuted
 * Build date: Mon Nov 28 2016 15:36:54 GMT+0100 (CET)
 */
console.time = function () { };
console.timeEnd = function () { };
console.info = function () { };
var hello = function (a) {
    return hello.use(a)
};
hello.utils = {
    extend: function (c) {
        for (var b = Array.prototype.slice.call(arguments, 1), f = 0; f < b.length; f++) {
            var d = b[f];
            if (c instanceof Object && d instanceof Object && c !== d) {
                for (var a in d) {
                    c[a] = hello.utils.extend(c[a], d[a])
                }
            } else {
                c = d
            }
        }
        return c
    }
}, hello.utils.extend(hello, {
    settings: {
        redirect_uri: window.location.href.split("#")[0],
        response_type: "token",
        display: "popup",
        state: "",
        oauth_proxy: "https://auth-server.herokuapp.com/proxy",
        timeout: 20000,
        default_service: null,
        force: !0
    },
    service: function (a) {
        return "undefined" != typeof a ? this.utils.store("sync_service", a) : this.utils.store("sync_service")
    },
    services: {},
    use: function (b) {
        var a = this.utils.objectCreate(this);
        return a.settings = this.utils.objectCreate(this.settings), b && (a.settings.default_service = b), a.utils.Event.call(a), a
    },
    init: function (b, a) {
        var d = this.utils;
        if (!b) {
            return this.services
        }
        for (var c in b) {
            b.hasOwnProperty(c) && "object" != typeof b[c] && (b[c] = {
                id: b[c]
            })
        }
        d.extend(this.services, b);
        for (c in this.services) {
            this.services.hasOwnProperty(c) && (this.services[c].scope = this.services[c].scope || {})
        }
        return a && (d.extend(this.settings, a), "redirect_uri" in a && (this.settings.redirect_uri = d.url(a.redirect_uri).href)), this
    },
    login: function () {
        var x = this.use(),
            C = x.utils,
            j = C.args({
                network: "s",
                options: "o",
                callback: "f"
            }, arguments);
        x.args = j;
        var h, v = j.options = C.merge(x.settings, j.options || {});
        if (j.network = x.settings.default_service = j.network || x.settings.default_service, x.on("complete", j.callback), "string" != typeof j.network || !(j.network in x.services)) {
            return x.emitAfter("error complete", {
                error: {
                    code: "invalid_network",
                    message: "The provided network was not recognized"
                }
            }), x
        }
        var A = x.services[j.network],
            b = !1,
            D = C.globalEvent(function (c) {
                var a;
                a = c ? JSON.parse(c) : {
                    error: {
                        code: "cancelled",
                        message: "The authentication was not completed"
                    }
                }, b = !0, a.error ? x.emit("complete error failed auth.failed", {
                    error: a.error
                }) : (C.store(a.network, a), x.emit("complete success login auth.login auth", {
                    network: a.network,
                    authResponse: a
                }))
            }),
            q = C.url(v.redirect_uri).href,
            z = A.oauth.response_type || v.response_type;
        "code" !== z || A.oauth.grant || (z = "token"), j.qs = {
            client_id: A.id,
            response_type: z,
            redirect_uri: q,
            display: v.display,
            scope: "basic",
            state: {
                client_id: A.id,
                network: j.network,
                display: v.display,
                callback: D,
                state: v.state,
                redirect_uri: q
            }
        };
        var B = C.store(j.network),
            w = (v.scope || "").toString();
        if (w = (w ? w + "," : "") + j.qs.scope, B && "scope" in B && B.scope instanceof String && (w += "," + B.scope), j.qs.state.scope = C.unique(w.split(/[,\s]+/)).join(","), j.qs.scope = w.replace(/[^,\s]+/gi, function (a) {
            if (a in A.scope) {
                return A.scope[a]
            }
            for (var d in x.services) {
                var c = x.services[d].scope;
                if (c && a in c) {
                    return ""
                }
            }
            return a
        }).replace(/[,\s]+/gi, ","), j.qs.scope = C.unique(j.qs.scope.split(/,+/)).join(A.scope_delim || ","), v.force === !1 && B && "access_token" in B && B.access_token && "expires" in B && B.expires > (new Date).getTime() / 1000) {
            var y = C.diff(B.scope || [], j.qs.state.scope || []);
            if (0 === y.length) {
                return x.emitAfter("complete success login", {
                    unchanged: !0,
                    network: j.network,
                    authResponse: B
                }), x
            }
        }
        if ("login" in A && "function" == typeof A.login && A.login(j), ("token" !== z || parseInt(A.oauth.version, 10) < 2 || "none" === v.display && A.oauth.grant && B && B.refresh_token) && (j.qs.state.oauth = A.oauth, j.qs.state.oauth_proxy = v.oauth_proxy), j.qs.state = JSON.stringify(j.qs.state), 1 === parseInt(A.oauth.version, 10) ? h = C.qs(v.oauth_proxy, j.qs) : "none" === v.display && A.oauth.grant && B && B.refresh_token ? (j.qs.refresh_token = B.refresh_token, h = C.qs(v.oauth_proxy, j.qs)) : h = C.qs(A.oauth.auth, j.qs), x.emit("notice", "Authorization URL " + h), "none" === v.display) {
            C.iframe(h)
        } else {
            if ("popup" === v.display) {
                var g = C.popup(h, q, v.window_width || 500, v.window_height || 550),
                    k = setInterval(function () {
                        if ((!g || g.closed) && (clearInterval(k), !b)) {
                            var a = {
                                code: "cancelled",
                                message: "Login has been cancelled"
                            };
                            g || (a = {
                                code: "blocked",
                                message: "Popup was blocked"
                            }), x.emit("complete failed error", {
                                error: a,
                                network: j.network
                            })
                        }
                    }, 100)
            } else {
                window.location = h
            }
        }
        return x
    },
    logout: function () {
        var g = this.use(),
            d = g.utils,
            j = d.args({
                name: "s",
                options: "o",
                callback: "f"
            }, arguments);
        if (j.options = j.options || {}, g.on("complete", j.callback), j.name = j.name || g.settings.default_service, !j.name || j.name in g.services) {
            if (j.name && d.store(j.name)) {
                var h = function (a) {
                    g.utils.store(j.name, ""), g.emitAfter("complete logout success auth.logout auth", hello.utils.merge({
                        network: j.name
                    }, a || {}))
                },
                    c = {};
                if (j.options.force) {
                    var b = g.services[j.name].logout;
                    if (b) {
                        if ("function" == typeof b && (b = b(h)), "string" == typeof b) {
                            d.iframe(b), c.force = null, c.message = "Logout success on providers site was indeterminate"
                        } else {
                            if (void 0 === b) {
                                return g
                            }
                        }
                    }
                }
                h(c)
            } else {
                if (j.name) {
                    g.emitAfter("complete error", {
                        error: {
                            code: "invalid_session",
                            message: "There was no session to remove"
                        }
                    })
                } else {
                    for (var f in g.services) {
                        g.services.hasOwnProperty(f) && g.logout(f)
                    }
                    g.service(!1)
                }
            }
        } else {
            g.emitAfter("complete error", {
                error: {
                    code: "invalid_network",
                    message: "The network was unrecognized"
                }
            })
        }
        return g
    },
    getAuthResponse: function (a) {
        return a = a || this.settings.default_service, a && a in this.services ? this.utils.store(a) || null : (this.emit("complete error", {
            error: {
                code: "invalid_network",
                message: "The network was unrecognized"
            }
        }), null)
    },
    events: {}
}), hello.utils.extend(hello.utils, {
    qs: function (c, b) {
        if (b) {
            var f;
            for (var d in b) {
                if (c.indexOf(d) > -1) {
                    var a = "[\\?\\&]" + d + "=[^\\&]*";
                    f = new RegExp(a), c = c.replace(f, "")
                }
            }
        }
        return c + (this.isEmpty(b) ? "" : (c.indexOf("?") > -1 ? "&" : "?") + this.param(b))
    },
    param: function (g) {
        var d, j, h = {};
        if ("string" == typeof g) {
            if (j = g.replace(/^[\#\?]/, "").match(/([^=\/\&]+)=([^\&]+)/g)) {
                for (var c = 0; c < j.length; c++) {
                    d = j[c].match(/([^=]+)=(.*)/), h[d[1]] = decodeURIComponent(d[2])
                }
            }
            return h
        }
        var b = g;
        h = [];
        for (var f in b) {
            b.hasOwnProperty(f) && b.hasOwnProperty(f) && h.push([f, "?" === b[f] ? "?" : encodeURIComponent(b[f])].join("="))
        }
        return h.join("&")
    },
    store: function (f) {
        function d() {
            var a = {};
            try {
                a = JSON.parse(f.getItem("hello")) || {}
            } catch (e) { }
            return a
        }

        function h(a) {
            f.setItem("hello", JSON.stringify(a))
        }
        var g = [f, window.sessionStorage],
            c = 0;
        for (f = g[c++]; f;) {
            try {
                f.setItem(c, c), f.removeItem(c);
                break
            } catch (b) {
                f = g[c++]
            }
        }
        return f || (f = {
            getItem: function (i) {
                i += "=";
                for (var a = document.cookie.split(";"), k = 0; k < a.length; k++) {
                    var j = a[k].replace(/(^\s+|\s+$)/, "");
                    if (j && 0 === j.indexOf(i)) {
                        return j.substr(i.length)
                    }
                }
                return null
            },
            setItem: function (i, a) {
                document.cookie = i + "=" + a
            }
        }),
            function (l, m) {
                var k = d();
                if (l && void 0 === m) {
                    return k[l] || null
                }
                if (l && null === m) {
                    try {
                        delete k[l]
                    } catch (j) {
                        k[l] = null
                    }
                } else {
                    if (!l) {
                        return k
                    }
                    k[l] = m
                }
                return h(k), k || null
            }
    }(window.localStorage),
    append: function (g, d, j) {
        var h = "string" == typeof g ? document.createElement(g) : g;
        if ("object" == typeof d) {
            if ("tagName" in d) {
                j = d
            } else {
                for (var c in d) {
                    if (d.hasOwnProperty(c)) {
                        if ("object" == typeof d[c]) {
                            for (var b in d[c]) {
                                d[c].hasOwnProperty(b) && (h[c][b] = d[c][b])
                            }
                        } else {
                            "html" === c ? h.innerHTML = d[c] : /^on/.test(c) ? h[c] = d[c] : h.setAttribute(c, d[c])
                        }
                    }
                }
            }
        }
        return "body" === j ? ! function f() {
            document.body ? document.body.appendChild(h) : setTimeout(f, 16)
        }() : "object" == typeof j ? j.appendChild(h) : "string" == typeof j && document.getElementsByTagName(j)[0].appendChild(h), h
    },
    iframe: function (a) {
        this.append("iframe", {
            src: a,
            style: {
                position: "absolute",
                left: "-1000px",
                bottom: 0,
                height: "1px",
                width: "1px"
            }
        }, "body")
    },
    merge: function () {
        var a = Array.prototype.slice.call(arguments);
        return a.unshift({}), this.extend.apply(null, a)
    },
    args: function (f, d) {
        var h = {},
            g = 0,
            c = null,
            b = null;
        for (b in f) {
            if (f.hasOwnProperty(b)) {
                break
            }
        }
        if (1 === d.length && "object" == typeof d[0] && "o!" != f[b]) {
            for (b in d[0]) {
                if (f.hasOwnProperty(b) && b in f) {
                    return d[0]
                }
            }
        }
        for (b in f) {
            if (f.hasOwnProperty(b)) {
                if (c = typeof d[g], "function" == typeof f[b] && f[b].test(d[g]) || "string" == typeof f[b] && (f[b].indexOf("s") > -1 && "string" === c || f[b].indexOf("o") > -1 && "object" === c || f[b].indexOf("i") > -1 && "number" === c || f[b].indexOf("a") > -1 && "object" === c || f[b].indexOf("f") > -1 && "function" === c)) {
                    h[b] = d[g++]
                } else {
                    if ("string" == typeof f[b] && f[b].indexOf("!") > -1) {
                        return !1
                    }
                }
            }
        }
        return h
    },
    url: function (b) {
        if (b) {
            if (window.URL && URL instanceof Function && 0 !== URL.length) {
                return new URL(b, window.location)
            }
            var a = document.createElement("a");
            return a.href = b, a
        }
        return window.location
    },
    diff: function (b, a) {
        for (var d = [], c = 0; c < a.length; c++) {
            -1 === this.indexOf(b, a[c]) && d.push(a[c])
        }
        return d
    },
    indexOf: function (b, a) {
        if (b.indexOf) {
            return b.indexOf(a)
        }
        for (var c = 0; c < b.length; c++) {
            if (b[c] === a) {
                return c
            }
        }
        return -1
    },
    unique: function (b) {
        if ("object" != typeof b) {
            return []
        }
        for (var a = [], c = 0; c < b.length; c++) {
            b[c] && 0 !== b[c].length && -1 === this.indexOf(a, b[c]) && a.push(b[c])
        }
        return a
    },
    isEmpty: function (b) {
        if (!b) {
            return !0
        }
        if (b && b.length > 0) {
            return !1
        }
        if (b && 0 === b.length) {
            return !0
        }
        for (var a in b) {
            if (b.hasOwnProperty(a)) {
                return !1
            }
        }
        return !0
    },
    objectCreate: function () {
        function a() { }
        return Object.create ? Object.create : function (b) {
            if (1 != arguments.length) {
                throw new Error("Object.create implementation only accepts one parameter.")
            }
            return a.prototype = b, new a
        }
    }(),
    Event: function () {
        var a = /[\s\,]+/;
        return this.parent = {
            events: this.events,
            findEvents: this.findEvents,
            parent: this.parent,
            utils: this.utils
        }, this.events = {}, this.on = function (c, e) {
            if (e && "function" == typeof e) {
                for (var d = c.split(a), b = 0; b < d.length; b++) {
                    this.events[d[b]] = [e].concat(this.events[d[b]] || [])
                }
            }
            return this
        }, this.off = function (c, b) {
            return this.findEvents(c, function (d, f) {
                b && this.events[d][f] !== b || (this.events[d][f] = null)
            }), this
        }, this.emit = function (c) {
            var b = Array.prototype.slice.call(arguments, 1);
            b.push(c);
            for (var f = function (g, e) {
                b[b.length - 1] = "*" === g ? c : g, this.events[g][e].apply(this, b)
            }, d = this; d && d.findEvents;) {
                d.findEvents(c + ",*", f), d = d.parent
            }
            return this
        }, this.emitAfter = function () {
            var c = this,
                b = arguments;
            return setTimeout(function () {
                c.emit.apply(c, b)
            }, 0), this
        }, this.findEvents = function (d, f) {
            var e = d.split(a);
            for (var c in this.events) {
                if (this.events.hasOwnProperty(c) && hello.utils.indexOf(e, c) > -1) {
                    for (var b = 0; b < this.events[c].length; b++) {
                        this.events[c][b] && f.call(this, c, b)
                    }
                }
            }
        }, this
    },
    globalEvent: function (b, a) {
        return a = a || "_hellojs_" + parseInt(1000000000000 * Math.random(), 10).toString(36), window[a] = function () {
            try {
                bool = b.apply(this, arguments)
            } catch (c) {
                console.error(c)
            }
            if (bool) {
                try {
                    delete window[a]
                } catch (c) { }
            }
        }, a
    },
    popup: function (m, w, g, d) {
        var j = document.documentElement,
            q = void 0 !== window.screenLeft ? window.screenLeft : screen.left,
            b = void 0 !== window.screenTop ? window.screenTop : screen.top,
            x = window.innerWidth || j.clientWidth || screen.width,
            h = window.innerHeight || j.clientHeight || screen.height,
            p = (x - g) / 2 + q,
            v = (h - d) / 2 + b,
            k = function (o) {
                var f = window.open(o, "_blank", "resizeable=true,height=" + d + ",width=" + g + ",left=" + p + ",top=" + v);
                if (f && f.addEventListener) {
                    var c = hello.utils.url(w),
                        l = c.origin || c.protocol + "//" + c.hostname;
                    f.addEventListener("loadstart", function (i) {
                        var a = i.url;
                        if (0 === a.indexOf(l)) {
                            var s = hello.utils.url(a),
                                r = {
                                    location: {
                                        assign: function (t) {
                                            f.addEventListener("exit", function () {
                                                setTimeout(function () {
                                                    k(t)
                                                }, 1000)
                                            })
                                        },
                                        search: s.search,
                                        hash: s.hash,
                                        href: s.href
                                    },
                                    close: function () {
                                        f.close && f.close()
                                    }
                                };
                            hello.utils.responseHandler(r, window), r.close()
                        }
                    })
                }
                return f && f.focus && f.focus(), f
            };
        return -1 !== navigator.userAgent.indexOf("Safari") && -1 === navigator.userAgent.indexOf("Chrome") && (m = w + "#oauth_redirect=" + encodeURIComponent(encodeURIComponent(m))), k(m)
    },
    responseHandler: function (p, y) {
        function h(l, c, o) {
            if (w.store(l.network, l), !("display" in l && "page" === l.display)) {
                if (o) {
                    var a = l.callback;
                    try {
                        delete l.callback
                    } catch (f) { }
                    if (w.store(l.network, l), a in o) {
                        var d = JSON.stringify(l);
                        try {
                            o[a](d)
                        } catch (f) { }
                    }
                }
                g()
            }
        }

        function g() {
            try {
                p.close()
            } catch (a) { }
            p.addEventListener && p.addEventListener("load", function () {
                p.close()
            })
        }
        var k, w = this,
            b = p.location,
            z = function (a) {
                b.assign ? b.assign(a) : p.location = a
            };
        if (k = w.param(b.search), k && (k.code && k.state || k.oauth_token && k.proxy_url)) {
            var j = JSON.parse(k.state);
            k.redirect_uri = j.redirect_uri || b.href.replace(/[\?\#].*$/, "");
            var v = (j.oauth_proxy || k.proxy_url) + "?" + w.param(k);
            return void z(v)
        }
        if (k = w.merge(w.param(b.search || ""), w.param(b.hash || "")), k && "state" in k) {
            try {
                var x = JSON.parse(k.state);
                w.extend(k, x)
            } catch (m) {
                console.error("Could not decode state parameter")
            }
            if ("access_token" in k && k.access_token && k.network) {
                k.expires_in && 0 !== parseInt(k.expires_in, 10) || (k.expires_in = 0), k.expires_in = parseInt(k.expires_in, 10), k.expires = (new Date).getTime() / 1000 + (k.expires_in || 31536000), h(k, p, y)
            } else {
                if ("error" in k && k.error && k.network) {
                    k.error = {
                        code: k.error,
                        message: k.error_message || k.error_description
                    }, h(k, p, y)
                } else {
                    if (k.callback && k.callback in y) {
                        var q = "result" in k && k.result ? JSON.parse(k.result) : !1;
                        y[k.callback](q), g()
                    }
                }
            }
        } else {
            if ("oauth_redirect" in k) {
                return void z(decodeURIComponent(k.oauth_redirect))
            }
        }
    }
}), hello.utils.Event.call(hello), hello.subscribe = hello.on, hello.trigger = hello.emit, hello.unsubscribe = hello.off, hello.utils.responseHandler(window, window.opener || window.parent),
    function (b) {
        var a = {},
            d = {};
        b.on("auth.login, auth.logout", function (e) {
            e && "object" == typeof e && e.network && (a[e.network] = b.utils.store(e.network) || {})
        }),
            function c() {
                var h = (new Date).getTime() / 1000,
                    o = function (f) {
                        b.emit("auth." + f, {
                            network: e,
                            authResponse: q
                        })
                    };
                for (var e in b.services) {
                    if (b.services.hasOwnProperty(e)) {
                        if (!b.services[e].id) {
                            continue
                        }
                        var q = b.utils.store(e) || {},
                            g = b.services[e],
                            m = a[e] || {};
                        if (q && "callback" in q) {
                            var p = q.callback;
                            try {
                                delete q.callback
                            } catch (j) { }
                            b.utils.store(e, q);
                            try {
                                window[p](q)
                            } catch (j) { }
                        }
                        if (q && "expires" in q && q.expires < h) {
                            var k = g.refresh || q.refresh_token;
                            !k || e in d && !(d[e] < h) ? k || e in d || (o("expired"), d[e] = !0) : (b.emit("notice", e + " has expired trying to resignin"), b.login(e, {
                                display: "none",
                                force: !1
                            }), d[e] = h + 600);
                            continue
                        }
                        if (m.access_token === q.access_token && m.expires === q.expires) {
                            continue
                        } !q.access_token && m.access_token ? o("logout") : q.access_token && !m.access_token ? o("login") : q.expires !== m.expires && o("update"), a[e] = q, e in d && delete d[e]
                    }
                }
                setTimeout(c, 1000)
            }()
    }(hello), hello.api = function () {
        function j(l) {
            var c;
            f.data = h.clone(m);
            var a = g[{
                "delete": "del"
            }[f.method] || f.method] || {};
            if ("get" === f.method) {
                var i = l.split(/[\?#]/)[1];
                i && (h.extend(f.data, h.param(i)), l = l.replace(/\?.*?(#|$)/, "$1"))
            } (c = l.match(/#(.+)/, "")) ? (l = l.split("#")[0], f.path = c[1]) : l in a ? (f.path = l, l = a[l]) : "default" in a && (l = a["default"]), f.options = h.clone(f.data);
            var o = function (y) {
                y = y.replace(/\@\{([a-z\_\-]+)(\|.+?)?\}/gi, function (A, z, s) {
                    var r = s ? s.replace(/^\|/, "") : "";
                    return z in f.data ? (r = f.data[z], delete f.data[z]) : "undefined" == typeof s && d.emitAfter("error", {
                        error: {
                            code: "missing_attribute_" + z,
                            message: "The attribute " + z + " is missing from the request"
                        }
                    }), r
                }), y.match(/^https?:\/\//) || (y = g.base + y), f.url = y;
                var t = {},
                    w = function (z, e) {
                        z && ("function" == typeof z ? z(t) : h.extend(t, z));
                        var A = h.qs(y, t || {});
                        d.emit("notice", "Request " + A), q(f.proxy, A, f.method, f.data, g.querystring, e)
                    };
                if (!h.isEmpty(f.data) && !("FileList" in window) && h.hasBinary(f.data)) {
                    return h.post(w, f.data, "form" in g ? g.form(f) : null, k), d
                }
                if ("delete" === f.method) {
                    var u = k;
                    k = function (s, r) {
                        u(!s || h.isEmpty(s) ? {
                            success: !0
                        } : s, r)
                    }
                }
                if ("withCredentials" in new XMLHttpRequest && (!("xhr" in g) || g.xhr && g.xhr(f, t))) {
                    var x = h.xhr(f.method, w, f.headers, f.data, k);
                    x.onprogress = function (r) {
                        d.emit("progress", r)
                    }, x.upload && (x.upload.onprogress = function (r) {
                        d.emit("uploadprogress", r)
                    })
                } else {
                    if (f.callbackID = h.globalEvent(), "jsonp" in g && g.jsonp(f, t), "api" in g && g.api(y, f, p && p.access_token ? {
                        access_token: p.access_token
                    } : {}, k)) {
                        return
                    }
                    "post" === f.method ? (t.redirect_uri = d.settings.redirect_uri, t.state = JSON.stringify({
                        callback: f.callbackID
                    }), h.post(w, f.data, "form" in g ? g.form(f) : null, k, f.callbackID, d.settings.timeout)) : (h.extend(t, f.data), t.callback = f.callbackID, h.jsonp(w, k, f.callbackID, d.settings.timeout))
                }
            };
            "function" == typeof l ? l(f, o) : o(l)
        }

        function q(x, l, z, i, u, o) {
            var y = p ? p.access_token : null;
            if (!g.oauth || 1 !== parseInt(g.oauth.version, 10)) {
                var w = {
                    access_token: y || ""
                };
                u && u(w), y = "", l = h.qs(l, w)
            }
            x && (l = h.qs(d.settings.oauth_proxy, {
                path: l,
                access_token: y || "",
                then: "get" === z.toLowerCase() ? "redirect" : "proxy",
                method: z,
                suppress_response_codes: !0
            })), o(l)
        }
        var f = this.utils.args({
            path: "s!",
            method: "s",
            data: "o",
            timeout: "i",
            callback: "f"
        }, arguments),
            d = this.use(),
            h = d.utils;
        d.args = f, f.method = (f.method || "get").toLowerCase(), f.headers = f.headers || {};
        var m = f.data = f.data || {};
        d.on("complete", f.callback), f.path = f.path.replace(/^\/+/, "");
        var b = (f.path.split(/[\/\:]/, 2) || [])[0].toLowerCase();
        if (b in d.services) {
            f.network = b;
            var v = new RegExp("^" + b + ":?/?");
            f.path = f.path.replace(v, "")
        }
        f.network = d.settings.default_service = f.network || d.settings.default_service;
        var g = d.services[f.network];
        if (!g) {
            return d.emitAfter("complete error", {
                error: {
                    code: "invalid_network",
                    message: "Could not match the service requested: " + f.network
                }
            }), d
        }
        f.proxy = g.oauth && 1 === parseInt(g.oauth.version, 10), f.timeout && (d.settings.timeout = f.timeout), d.emit("notice", "API request " + f.method.toUpperCase() + " '" + f.path + "' (request)", f);
        var k = function (o, l) {
            if (g.wrap && (f.path in g.wrap || "default" in g.wrap)) {
                var e = f.path in g.wrap ? f.path : "default",
                    w = (new Date).getTime(),
                    u = g.wrap[e](o, l, f);
                u && (o = u), d.emit("notice", "Processing took" + ((new Date).getTime() - w))
            }
            d.emit("notice", "API: " + f.method.toUpperCase() + " '" + f.path + "' (response)", o);
            var x = null;
            o && "paging" in o && o.paging.next && ("?" === o.paging.next[0] ? o.paging.next = f.path + o.paging.next : o.paging.next += "#" + f.path, x = function () {
                j(o.paging.next)
            }), d.emit("complete " + (!o || "error" in o ? "error" : "success"), o, x)
        };
        if (f.method in g && f.path in g[f.method] && g[f.method][f.path] === !1) {
            return d.emitAfter("complete error", {
                error: {
                    code: "invalid_path",
                    message: "The provided path is not available on the selected network"
                }
            })
        }
        var p = d.getAuthResponse(f.network);
        return j(f.path), d
    }, hello.utils.extend(hello.utils, {
        isArray: function (a) {
            return "[object Array]" === Object.prototype.toString.call(a)
        },
        domInstance: function (b, a) {
            var c = "HTML" + (b || "").replace(/^[a-z]/, function (d) {
                return d.toUpperCase()
            }) + "Element";
            return a ? window[c] ? a instanceof window[c] : window.Element ? a instanceof window.Element && (!b || a.tagName && a.tagName.toLowerCase() === b) : !(a instanceof Object || a instanceof Array || a instanceof String || a instanceof Number) && a.tagName && a.tagName.toLowerCase() === b : !1
        },
        clone: function (b) {
            if (null === b || "object" != typeof b || b instanceof Date || "nodeName" in b || this.isBinary(b)) {
                return b
            }
            var a;
            if (this.isArray(b)) {
                a = [];
                for (var d = 0; d < b.length; d++) {
                    a.push(this.clone(b[d]))
                }
                return a
            }
            a = {};
            for (var c in b) {
                a[c] = this.clone(b[c])
            }
            return a
        },
        xhr: function (p, y, h, g, k) {
            function w(c) {
                for (var a, f = {}, d = /([a-z\-]+):\s?(.*);?/gi; a = d.exec(c);) {
                    f[a[1]] = a[2]
                }
                return f
            }
            var b = this;
            if ("function" != typeof y) {
                var z = y;
                y = function (c, a) {
                    a(b.qs(z, c))
                }
            }
            var j = new XMLHttpRequest,
                v = !1;
            "blob" === p && (v = p, p = "GET"), p = p.toUpperCase(), j.onload = function () {
                var a = j.response;
                try {
                    a = JSON.parse(j.responseText)
                } catch (d) {
                    401 === j.status && (a = {
                        error: {
                            code: "access_denied",
                            message: j.statusText
                        }
                    })
                }
                var c = w(j.getAllResponseHeaders());
                c.statusCode = j.status, k(a || ("DELETE" !== p ? {
                    error: {
                        message: "Could not get resource"
                    }
                } : {}), c)
            }, j.onerror = function () {
                var c = j.responseText;
                try {
                    c = JSON.parse(j.responseText)
                } catch (a) { }
                k(c || {
                    error: {
                        code: "access_denied",
                        message: "Could not get resource"
                    }
                })
            };
            var x, m = {};
            if ("GET" === p || "DELETE" === p) {
                b.isEmpty(g) || b.extend(m, g), g = null
            } else {
                if (!(!g || "string" == typeof g || g instanceof FormData || g instanceof File || g instanceof Blob)) {
                    var q = new FormData;
                    for (x in g) {
                        g.hasOwnProperty(x) && (g[x] instanceof HTMLInputElement ? "files" in g[x] && g[x].files.length > 0 && q.append(x, g[x].files[0]) : g[x] instanceof Blob ? q.append(x, g[x], g.name) : q.append(x, g[x]))
                    }
                    g = q
                }
            }
            return y(m, function (c) {
                if (j.open(p, c, !0), v && ("responseType" in j ? j.responseType = v : j.overrideMimeType("text/plain; charset=x-user-defined")), h) {
                    for (var a in h) {
                        j.setRequestHeader(a, h[a])
                    }
                }
                j.send(g)
            }), j
        },
        jsonp: function (p, y, h, g) {
            var k, w, b = this,
                z = 0,
                j = document.getElementsByTagName("head")[0],
                v = {
                    error: {
                        message: "server_error",
                        code: "server_error"
                    }
                },
                x = function () {
                    z++ || window.setTimeout(function () {
                        y(v), j.removeChild(w)
                    }, 0)
                },
                m = b.globalEvent(function (a) {
                    return v = a, !0
                }, h);
            if ("function" != typeof p) {
                var q = p;
                q = q.replace(new RegExp("=\\?(&|$)"), "=" + m + "$1"), p = function (c, a) {
                    a(b.qs(q, c))
                }
            }
            p(function (c) {
                for (var a in c) {
                    c.hasOwnProperty(a) && "?" === c[a] && (c[a] = m)
                }
            }, function (a) {
                w = b.append("script", {
                    id: m,
                    name: m,
                    src: a,
                    async: !0,
                    onload: x,
                    onerror: x,
                    onreadystatechange: function () {
                        /loaded|complete/i.test(this.readyState) && x()
                    }
                }), window.navigator.userAgent.toLowerCase().indexOf("opera") > -1 && (k = b.append("script", {
                    text: "document.getElementById('" + m + "').onerror();"
                }), w.async = !1), g && window.setTimeout(function () {
                    v = {
                        error: {
                            message: "timeout",
                            code: "timeout"
                        }
                    }, x()
                }, g), j.appendChild(w), k && j.appendChild(k)
            })
        },
        post: function (L, z, E, D, H, P) {
            var B = this,
                A = document;
            if ("function" != typeof L) {
                var G = L;
                L = function (b, a) {
                    a(B.qs(G, b))
                }
            }
            var N, x = null,
                K = [],
                M = 0,
                C = null,
                F = 0,
                I = function (a) {
                    F++ || D(a)
                };
            B.globalEvent(I, H);
            var J;
            try {
                J = A.createElement('<iframe name="' + H + '">')
            } catch (q) {
                J = A.createElement("iframe")
            }
            if (J.name = H, J.id = H, J.style.display = "none", E && E.callbackonload && (J.onload = function () {
                I({
                    response: "posted",
                    message: "Content was posted"
                })
            }), P && setTimeout(function () {
                I({
                    error: {
                        code: "timeout",
                        message: "The post operation timed out"
                    }
                })
            }, P), A.body.appendChild(J), B.domInstance("form", z)) {
                for (x = z.form, M = 0; M < x.elements.length; M++) {
                    x.elements[M] !== z && x.elements[M].setAttribute("disabled", !0)
                }
                z = x
            }
            if (B.domInstance("form", z)) {
                for (x = z, M = 0; M < x.elements.length; M++) {
                    x.elements[M].disabled || "file" !== x.elements[M].type || (x.encoding = x.enctype = "multipart/form-data", x.elements[M].setAttribute("name", "file"))
                }
            } else {
                for (C in z) {
                    z.hasOwnProperty(C) && B.domInstance("input", z[C]) && "file" === z[C].type && (x = z[C].form, x.encoding = x.enctype = "multipart/form-data")
                }
                x || (x = A.createElement("form"), A.body.appendChild(x), N = x);
                var k;
                for (C in z) {
                    if (z.hasOwnProperty(C)) {
                        var j = B.domInstance("input", z[C]) || B.domInstance("textArea", z[C]) || B.domInstance("select", z[C]);
                        if (j && z[C].form === x) {
                            j && z[C].name !== C && (z[C].setAttribute("name", C), z[C].name = C)
                        } else {
                            var O = x.elements[C];
                            if (k) {
                                for (O instanceof NodeList || (O = [O]), M = 0; M < O.length; M++) {
                                    O[M].parentNode.removeChild(O[M])
                                }
                            }
                            k = A.createElement("input"), k.setAttribute("type", "hidden"), k.setAttribute("name", C), k.value = j ? z[C].value : B.domInstance(null, z[C]) ? z[C].innerHTML || z[C].innerText : z[C], x.appendChild(k)
                        }
                    }
                }
                for (M = 0; M < x.elements.length; M++) {
                    k = x.elements[M], k.name in z || k.getAttribute("disabled") === !0 || (k.setAttribute("disabled", !0), K.push(k))
                }
            }
            x.setAttribute("method", "POST"), x.setAttribute("target", H), x.target = H, L({}, function (a) {
                x.setAttribute("action", a), setTimeout(function () {
                    x.submit(), setTimeout(function () {
                        try {
                            N && N.parentNode.removeChild(N)
                        } catch (c) {
                            try {
                                console.error("HelloJS: could not remove iframe")
                            } catch (b) { }
                        }
                        for (var d = 0; d < K.length; d++) {
                            K[d] && (K[d].setAttribute("disabled", !1), K[d].disabled = !1)
                        }
                    }, 0)
                }, 100)
            })
        },
        hasBinary: function (b) {
            for (var a in b) {
                if (b.hasOwnProperty(a) && this.isBinary(b[a])) {
                    return !0
                }
            }
            return !1
        },
        isBinary: function (a) {
            return a instanceof Object && (this.domInstance("input", a) && "file" === a.type || "FileList" in window && a instanceof window.FileList || "File" in window && a instanceof window.File || "Blob" in window && a instanceof window.Blob)
        },
        toBlob: function (f) {
            var d = /^data\:([^;,]+(\;charset=[^;,]+)?)(\;base64)?,/i,
                h = f.match(d);
            if (!h) {
                return f
            }
            for (var g = atob(f.replace(d, "")), c = [], b = 0; b < g.length; b++) {
                c.push(g.charCodeAt(b))
            }
            return new Blob([new Uint8Array(c)], {
                type: h[1]
            })
        }
    }),
    function (b) {
        var a = b.api,
            c = b.utils;
        c.extend(c, {
            dataToJSON: function (g) {
                var f = this,
                    j = window,
                    h = g.data;
                if (f.domInstance("form", h) ? h = f.nodeListToJSON(h.elements) : "NodeList" in j && h instanceof NodeList ? h = f.nodeListToJSON(h) : f.domInstance("input", h) && (h = f.nodeListToJSON([h])), ("File" in j && h instanceof j.File || "Blob" in j && h instanceof j.Blob || "FileList" in j && h instanceof j.FileList) && (h = {
                    file: h
                }), !("FormData" in j && h instanceof j.FormData)) {
                    for (var d in h) {
                        if (h.hasOwnProperty(d)) {
                            if ("FileList" in j && h[d] instanceof j.FileList) {
                                1 === h[d].length && (h[d] = h[d][0])
                            } else {
                                if (f.domInstance("input", h[d]) && "file" === h[d].type) {
                                    continue
                                }
                                f.domInstance("input", h[d]) || f.domInstance("select", h[d]) || f.domInstance("textArea", h[d]) ? h[d] = h[d].value : f.domInstance(null, h[d]) && (h[d] = h[d].innerHTML || h[d].innerText)
                            }
                        }
                    }
                }
                return g.data = h, h
            },
            nodeListToJSON: function (f) {
                for (var d = {}, h = 0; h < f.length; h++) {
                    var g = f[h];
                    !g.disabled && g.name && (d[g.name] = "file" === g.type ? g : g.value || g.innerHTML)
                }
                return d
            }
        }), b.api = function () {
            var d = c.args({
                path: "s!",
                method: "s",
                data: "o",
                timeout: "i",
                callback: "f"
            }, arguments);
            return d.data && c.dataToJSON(d), a.call(this, d)
        }
    }(hello),
    function () {
        function b(c) {
            return function () {
                var f = c.apply(this, arguments),
                    e = a(function (h, g) {
                        f.on("success", h).on("error", g).on("*", function () {
                            var i = Array.prototype.slice.call(arguments);
                            i.unshift(i.pop()), d.emit.apply(d, i)
                        })
                    }),
                    d = hello.utils.Event.call(e.proxy);
                return d
            }
        }
        Function.prototype.bind || (Function.prototype.bind = function (g) {
            function f() { }
            if ("function" != typeof this) {
                throw new TypeError("Function.prototype.bind - what is trying to be bound is not callable")
            }
            var j = [].slice,
                h = j.call(arguments, 1),
                d = this,
                c = function () {
                    return d.apply(this instanceof f ? this : g || window, h.concat(j.call(arguments)))
                };
            return f.prototype = this.prototype, c.prototype = new f, c
        });
        var a = function () {
            var j = 0,
                m = 1,
                f = 2,
                d = function (e) {
                    return this instanceof d ? (this.id = "Thenable/1.0.6", this.state = j, this.fulfillValue = void 0, this.rejectReason = void 0, this.onFulfilled = [], this.onRejected = [], this.proxy = {
                        then: this.then.bind(this)
                    }, void ("function" == typeof e && e.call(this, this.fulfill.bind(this), this.reject.bind(this)))) : new d(e)
                };
            d.prototype = {
                fulfill: function (i) {
                    return h(this, m, "fulfillValue", i)
                },
                reject: function (i) {
                    return h(this, f, "rejectReason", i)
                },
                then: function (q, o) {
                    var r = this,
                        l = new d;
                    return r.onFulfilled.push(p(q, l, "fulfill")), r.onRejected.push(p(o, l, "reject")), k(r), l.proxy
                }
            };
            var h = function (l, r, q, e) {
                return l.state === j && (l.state = r, l[q] = e, k(l)), l
            },
                k = function (i) {
                    i.state === m ? c(i, "onFulfilled", i.fulfillValue) : i.state === f && c(i, "onRejected", i.rejectReason)
                },
                c = function (r, q, u) {
                    if (0 !== r[q].length) {
                        var s = r[q];
                        r[q] = [];
                        var l = function () {
                            for (var i = 0; i < s.length; i++) {
                                s[i](u)
                            }
                        };
                        "object" == typeof process && "function" == typeof process.nextTick ? process.nextTick(l) : "function" == typeof setImmediate ? setImmediate(l) : setTimeout(l, 0)
                    }
                },
                p = function (l, i, o) {
                    return function (r) {
                        if ("function" != typeof l) {
                            i[o].call(i, r)
                        } else {
                            var q;
                            try {
                                q = l(r)
                            } catch (e) {
                                return void i.reject(e)
                            }
                            g(i, q)
                        }
                    }
                },
                g = function (r, q) {
                    if (r === q || r.proxy === q) {
                        return void r.reject(new TypeError("cannot resolve promise with itself"))
                    }
                    var u;
                    if ("object" == typeof q && null !== q || "function" == typeof q) {
                        try {
                            u = q.then
                        } catch (s) {
                            return void r.reject(s)
                        }
                    }
                    if ("function" != typeof u) {
                        r.fulfill(q)
                    } else {
                        var l = !1;
                        try {
                            u.call(q, function (e) {
                                l || (l = !0, e === q ? r.reject(new TypeError("circular thenable chain")) : g(r, e))
                            }, function (e) {
                                l || (l = !0, r.reject(e))
                            })
                        } catch (s) {
                            l || r.reject(s)
                        }
                    }
                };
            return d
        }();
        hello.login = b(hello.login), hello.api = b(hello.api), hello.logout = b(hello.logout)
    }(hello),
    function (b) {
        function a(f) {
            f && "error" in f && (f.error = {
                code: "server_error",
                message: f.error.message || f.error
            })
        }

        function d(e) {
            if (!("object" != typeof e || "Blob" in window && e instanceof Blob || "ArrayBuffer" in window && e instanceof ArrayBuffer || "error" in e)) {
                var f = e.root + e.path.replace(/\&/g, "%26");
                e.thumb_exists && (e.thumbnail = b.settings.oauth_proxy + "?path=" + encodeURIComponent("https://api-content.dropbox.com/1/thumbnails/" + f + "?format=jpeg&size=m") + "&access_token=" + b.getAuthResponse("dropbox").access_token), e.type = e.is_dir ? "folder" : e.mime_type, e.name = e.path.replace(/.*\//g, ""), e.is_dir ? e.files = "metadata/" + f : (e.downloadLink = b.settings.oauth_proxy + "?path=" + encodeURIComponent("https://api-content.dropbox.com/1/files/" + f) + "&access_token=" + b.getAuthResponse("dropbox").access_token, e.file = "https://api-content.dropbox.com/1/files/" + f), e.id || (e.id = e.path.replace(/^\//, ""))
            }
        }

        function c(f) {
            return function (e, g) {
                delete e.data.limit, g(f)
            }
        }
        b.init({
            dropbox: {
                login: function (f) {
                    f.options.window_width = 1000, f.options.window_height = 1000
                },
                oauth: {
                    version: "1.0",
                    auth: "https://www.dropbox.com/1/oauth/authorize",
                    request: "https://api.dropbox.com/1/oauth/request_token",
                    token: "https://api.dropbox.com/1/oauth/access_token"
                },
                base: "https://api.dropbox.com/1/",
                root: "sandbox",
                get: {
                    me: "account/info",
                    "me/files": c("metadata/@{root|sandbox}/@{parent}"),
                    "me/folder": c("metadata/@{root|sandbox}/@{id}"),
                    "me/folders": c("metadata/@{root|sandbox}/"),
                    "default": function (g, f) {
                        g.path.match("https://api-content.dropbox.com/1/files/") && (g.method = "blob"), f(g.path)
                    }
                },
                post: {
                    "me/files": function (f, h) {
                        var g = f.data.parent,
                            e = f.data.name;
                        f.data = {
                            file: f.data.file
                        }, "string" == typeof f.data.file && (f.data.file = b.utils.toBlob(f.data.file)), h("https://api-content.dropbox.com/1/files_put/@{root|sandbox}/" + g + "/" + e)
                    },
                    "me/folders": function (e, g) {
                        var f = e.data.name;
                        e.data = {}, g("fileops/create_folder?root=@{root|sandbox}&" + b.utils.param({
                            path: f
                        }))
                    }
                },
                del: {
                    "me/files": "fileops/delete?root=@{root|sandbox}&path=@{id}",
                    "me/folder": "fileops/delete?root=@{root|sandbox}&path=@{id}"
                },
                wrap: {
                    me: function (f) {
                        return a(f), f.uid ? (f.name = f.display_name, f.first_name = f.name.split(" ")[0], f.last_name = f.name.split(" ")[1], f.id = f.uid, delete f.uid, delete f.display_name, f) : f
                    },
                    "default": function (f) {
                        if (a(f), f.is_dir && f.contents) {
                            f.data = f.contents, delete f.contents;
                            for (var g = 0; g < f.data.length; g++) {
                                f.data[g].root = f.root, d(f.data[g])
                            }
                        }
                        return d(f), f.is_deleted && (f.success = !0), f
                    }
                },
                xhr: function (g) {
                    if (g.data && g.data.file) {
                        var f = g.data.file;
                        f && (g.data = f.files ? f.files[0] : f)
                    }
                    return "delete" === g.method && (g.method = "post"), !0
                }
            }
        })
    }(hello),
    function (c) {
        function b(g) {
            return g.id && (g.thumbnail = g.picture = "http://graph.facebook.com/" + g.id + "/picture"), g
        }

        function f(g) {
            if ("data" in g) {
                for (var h = 0; h < g.data.length; h++) {
                    b(g.data[h])
                }
            }
            return g
        }

        function d(g) {
            if ("data" in g) {
                for (var i = c.getAuthResponse("facebook").access_token, h = 0; h < g.data.length; h++) {
                    var e = g.data[h];
                    e.picture && (e.thumbnail = e.picture), e.cover_photo && (e.thumbnail = a + e.cover_photo + "/picture?access_token=" + i), "album" === e.type && (e.files = e.photos = a + e.id + "/photos"), e.can_upload && (e.upload_location = a + e.id + "/photos")
                }
            }
            return g
        }
        var a = "https://graph.facebook.com/";
        c.init({
            facebook: {
                name: "Facebook",
                login: function (g) {
                    g.options.window_width = 580, g.options.window_height = 400
                },
                oauth: {
                    version: 2,
                    auth: "https://www.facebook.com/dialog/oauth/",
                    grant: "https://graph.facebook.com/oauth/access_token"
                },
                refresh: !0,
                logout: function (g) {
                    var j = c.utils.globalEvent(g),
                        h = encodeURIComponent(c.settings.redirect_uri + "?" + c.utils.param({
                            callback: j,
                            result: JSON.stringify({
                                force: !0
                            }),
                            state: "{}"
                        })),
                        e = (c.utils.store("facebook") || {}).access_token;
                    return c.utils.iframe("https://www.facebook.com/logout.php?next=" + h + "&access_token=" + e), e ? void 0 : !1
                },
                scope: {
                    basic: "public_profile",
                    email: "email",
                    birthday: "user_birthday",
                    events: "user_events",
                    photos: "user_photos,user_videos",
                    videos: "user_photos,user_videos",
                    friends: "user_friends",
                    files: "user_photos,user_videos",
                    publish_files: "user_photos,user_videos,publish_actions",
                    publish: "publish_actions",
                    offline_access: "offline_access"
                },
                base: "https://graph.facebook.com/",
                get: {
                    me: "me",
                    "me/friends": "me/friends",
                    "me/following": "me/friends",
                    "me/followers": "me/friends",
                    "me/share": "me/feed",
                    "me/files": "me/albums",
                    "me/albums": "me/albums",
                    "me/album": "@{id}/photos",
                    "me/photos": "me/photos",
                    "me/photo": "@{id}"
                },
                post: {
                    "me/share": "me/feed",
                    "me/albums": "me/albums",
                    "me/album": "@{id}/photos"
                },
                del: {
                    "me/photo": "@{id}"
                },
                wrap: {
                    me: b,
                    "me/friends": f,
                    "me/following": f,
                    "me/followers": f,
                    "me/albums": d,
                    "me/files": d,
                    "default": d
                },
                xhr: function (e, g) {
                    return ("get" === e.method || "post" === e.method) && (g.suppress_response_codes = !0), "post" === e.method && e.data && "string" == typeof e.data.file && (e.data.file = c.utils.toBlob(e.data.file)), !0
                },
                jsonp: function (e, h) {
                    var g = e.method.toLowerCase();
                    "get" === g || c.utils.hasBinary(e.data) ? "delete" === e.method && (h.method = "delete", e.method = "post") : (e.data.method = g, e.method = "get")
                },
                form: function () {
                    return {
                        callbackonload: !0
                    }
                }
            }
        })
    }(hello),
    function (j) {
        function q(l, s, r) {
            var e = (r ? "" : "flickr:") + "?method=" + l + "&api_key=" + j.init().flickr.id + "&format=json";
            for (var c in s) {
                s.hasOwnProperty(c) && (e += "&" + c + "=" + s[c])
            }
            return e
        }

        function f(c) {
            var a = j.getAuthResponse("flickr");
            a && a.user_nsid ? c(a.user_nsid) : j.api(q("flickr.test.login"), function (i) {
                c(g(i, "user").id)
            })
        }

        function d(a, c) {
            return c || (c = {}),
                function (l, e) {
                    f(function (i) {
                        c.user_id = i, e(q(a, c, !0))
                    })
                }
        }

        function h(c, a) {
            var i = "https://www.flickr.com/images/buddyicon.gif";
            return c.nsid && c.iconserver && c.iconfarm && (i = "https://farm" + c.iconfarm + ".staticflickr.com/" + c.iconserver + "/buddyicons/" + c.nsid + (a ? "_" + a : "") + ".jpg"), i
        }

        function m(l, c, s, r, a) {
            return a = a ? "_" + a : "", "https://farm" + c + ".staticflickr.com/" + s + "/" + l + "_" + r + a + ".jpg"
        }

        function b(a) {
            a && a.stat && "ok" != a.stat.toLowerCase() && (a.error = {
                code: "invalid_request",
                message: a.message
            })
        }

        function v(c) {
            if (c.photoset || c.photos) {
                var a = "photoset" in c ? "photoset" : "photos";
                c = g(c, a), p(c), c.data = c.photo, delete c.photo;
                for (var l = 0; l < c.data.length; l++) {
                    var i = c.data[l];
                    i.name = i.title, i.picture = m(i.id, i.farm, i.server, i.secret, ""), i.source = m(i.id, i.farm, i.server, i.secret, "b"), i.thumbnail = m(i.id, i.farm, i.server, i.secret, "m")
                }
            }
            return c
        }

        function g(c, a) {
            return a in c ? c = c[a] : "error" in c || (c.error = {
                code: "invalid_request",
                message: c.message || "Failed to get data from Flickr"
            }), c
        }

        function k(c) {
            if (b(c), c.contacts) {
                c = g(c, "contacts"), p(c), c.data = c.contact, delete c.contact;
                for (var a = 0; a < c.data.length; a++) {
                    var i = c.data[a];
                    i.id = i.nsid, i.name = i.realname || i.username, i.thumbnail = h(i, "m")
                }
            }
            return c
        }

        function p(a) {
            a.page && a.pages && a.page !== a.pages && (a.paging = {
                next: "?page=" + ++a.page
            })
        }
        j.init({
            flickr: {
                name: "Flickr",
                oauth: {
                    version: "1.0a",
                    auth: "https://www.flickr.com/services/oauth/authorize?perms=read",
                    request: "https://www.flickr.com/services/oauth/request_token",
                    token: "https://www.flickr.com/services/oauth/access_token"
                },
                base: "https://api.flickr.com/services/rest",
                get: {
                    me: d("flickr.people.getInfo"),
                    "me/friends": d("flickr.contacts.getList", {
                        per_page: "@{limit|50}"
                    }),
                    "me/following": d("flickr.contacts.getList", {
                        per_page: "@{limit|50}"
                    }),
                    "me/followers": d("flickr.contacts.getList", {
                        per_page: "@{limit|50}"
                    }),
                    "me/albums": d("flickr.photosets.getList", {
                        per_page: "@{limit|50}"
                    }),
                    "me/photos": d("flickr.people.getPhotos", {
                        per_page: "@{limit|50}"
                    })
                },
                wrap: {
                    me: function (c) {
                        if (b(c), c = g(c, "person"), c.id) {
                            if (c.realname) {
                                c.name = c.realname._content;
                                var a = c.name.split(" ");
                                c.first_name = a[0], c.last_name = a[1]
                            }
                            c.thumbnail = h(c, "l"), c.picture = h(c, "l")
                        }
                        return c
                    },
                    "me/friends": k,
                    "me/followers": k,
                    "me/following": k,
                    "me/albums": function (a) {
                        if (b(a), a = g(a, "photosets"), p(a), a.photoset) {
                            a.data = a.photoset, delete a.photoset;
                            for (var i = 0; i < a.data.length; i++) {
                                var c = a.data[i];
                                c.name = c.title._content, c.photos = "https://api.flickr.com/services/rest" + q("flickr.photosets.getPhotos", {
                                    photoset_id: c.id
                                }, !0)
                            }
                        }
                        return a
                    },
                    "me/photos": function (a) {
                        return b(a), v(a)
                    },
                    "default": function (a) {
                        return b(a), v(a)
                    }
                },
                xhr: !1,
                jsonp: function (c, a) {
                    "get" == c.method.toLowerCase() && (delete a.callback, a.jsoncallback = c.callbackID)
                }
            }
        })
    }(hello),
    function (b) {
        function a(d) {
            d.meta && 400 === d.meta.code && (d.error = {
                code: "access_denied",
                message: d.meta.errorDetail
            })
        }

        function c(d) {
            d && d.id && (d.thumbnail = d.photo.prefix + "100x100" + d.photo.suffix, d.name = d.firstName + " " + d.lastName, d.first_name = d.firstName, d.last_name = d.lastName, d.contact && d.contact.email && (d.email = d.contact.email))
        }
        b.init({
            foursquare: {
                name: "FourSquare",
                oauth: {
                    version: 2,
                    auth: "https://foursquare.com/oauth2/authenticate",
                    grant: "https://foursquare.com/oauth2/access_token"
                },
                refresh: !0,
                querystring: function (f) {
                    var d = f.access_token;
                    delete f.access_token, f.oauth_token = d, f.v = 20121125
                },
                base: "https://api.foursquare.com/v2/",
                get: {
                    me: "users/self",
                    "me/friends": "users/self/friends",
                    "me/followers": "users/self/friends",
                    "me/following": "users/self/friends"
                },
                wrap: {
                    me: function (d) {
                        return a(d), d && d.response && (d = d.response.user, c(d)), d
                    },
                    "default": function (d) {
                        if (a(d), d && "response" in d && "friends" in d.response && "items" in d.response.friends) {
                            d.data = d.response.friends.items, delete d.response;
                            for (var f = 0; f < d.data.length; f++) {
                                c(d.data[f])
                            }
                        }
                        return d
                    }
                }
            }
        })
    }(hello),
    function (b) {
        function a(g, f) {
            var h = f ? f.statusCode : g && "meta" in g && "status" in g.meta && g.meta.status;
            (401 === h || 403 === h) && (g.error = {
                code: "access_denied",
                message: g.message || (g.data ? g.data.message : "Could not get response")
            }, delete g.message)
        }

        function d(f) {
            f.id && (f.thumbnail = f.picture = f.avatar_url, f.name = f.login)
        }

        function c(g, f) {
            if (g.data && g.data.length && f && f.Link) {
                var h = f.Link.match(/<(.*?)>;\s*rel=\"next\"/);
                h && (g.paging = {
                    next: h[1]
                })
            }
        }
        b.init({
            github: {
                name: "GitHub",
                oauth: {
                    version: 2,
                    auth: "https://github.com/login/oauth/authorize",
                    grant: "https://github.com/login/oauth/access_token",
                    response_type: "code"
                },
                scope: {
                    basic: "",
                    email: "user:email"
                },
                base: "https://api.github.com/",
                get: {
                    me: "user",
                    "me/friends": "user/following?per_page=@{limit|100}",
                    "me/following": "user/following?per_page=@{limit|100}",
                    "me/followers": "user/followers?per_page=@{limit|100}"
                },
                wrap: {
                    me: function (f, g) {
                        return a(f, g), d(f), f
                    },
                    "default": function (j, g, f) {
                        if (a(j, g), "[object Array]" === Object.prototype.toString.call(j)) {
                            j = {
                                data: j
                            }, c(j, g, f);
                            for (var h = 0; h < j.data.length; h++) {
                                d(j.data[h])
                            }
                        }
                        return j
                    }
                },
                xhr: function (f) {
                    return "get" !== f.method && f.data && (f.headers = f.headers || {}, f.headers["Content-Type"] = "application/json", "object" == typeof f.data && (f.data = JSON.stringify(f.data))), !0
                }
            }
        })
    }(hello),
    function (K, x) {
        function D(a) {
            return parseInt(a, 10)
        }

        function C(a) {
            a.error || (a.name || (a.name = a.title || a.message), a.picture || (a.picture = a.thumbnailLink), a.thumbnail || (a.thumbnail = a.thumbnailLink), "application/vnd.google-apps.folder" === a.mimeType && (a.type = "folder", a.files = "https://www.googleapis.com/drive/v2/files?q=%22" + a.id + "%22+in+parents"))
        }

        function G(d) {
            z(d);
            var c = function (m) {
                var l, r = m.media$group.media$content.length ? m.media$group.media$content[0] : {},
                    p = 0,
                    h = {
                        id: m.id.$t,
                        name: m.title.$t,
                        description: m.summary.$t,
                        updated_time: m.updated.$t,
                        created_time: m.published.$t,
                        picture: r ? r.url : null,
                        thumbnail: r ? r.url : null,
                        width: r.width,
                        height: r.height
                    };
                if ("link" in m) {
                    for (p = 0; p < m.link.length; p++) {
                        var g = m.link[p];
                        if (g.rel.match(/\#feed$/)) {
                            h.upload_location = h.files = h.photos = g.href;
                            break
                        }
                    }
                }
                if ("category" in m && m.category.length) {
                    for (l = m.category, p = 0; p < l.length; p++) {
                        l[p].scheme && l[p].scheme.match(/\#kind$/) && (h.type = l[p].term.replace(/^.*?\#/, ""))
                    }
                }
                if ("media$thumbnail" in m.media$group && m.media$group.media$thumbnail.length) {
                    for (l = m.media$group.media$thumbnail, h.thumbnail = m.media$group.media$thumbnail[0].url, h.images = [], p = 0; p < l.length; p++) {
                        h.images.push({
                            source: l[p].url,
                            width: l[p].width,
                            height: l[p].height
                        })
                    }
                    l = m.media$group.media$content.length ? m.media$group.media$content[0] : null, l && h.images.push({
                        source: l.url,
                        width: l.width,
                        height: l.height
                    })
                }
                return h
            },
                f = [];
            if ("feed" in d && "entry" in d.feed) {
                for (a = 0; a < d.feed.entry.length; a++) {
                    f.push(c(d.feed.entry[a]))
                }
                d.data = f, delete d.feed
            } else {
                if ("entry" in d) {
                    return c(d.entry)
                }
                if ("items" in d) {
                    for (var a = 0; a < d.items.length; a++) {
                        C(d.items[a])
                    }
                    d.data = d.items, delete d.items
                } else {
                    C(d)
                }
            }
            return d
        }

        function N(a) {
            a.name = a.displayName || a.name, a.picture = a.picture || (a.image ? a.image.url : null), a.thumbnail = a.picture
        }

        function A(e) {
            z(e);
            if ("feed" in e && "entry" in e.feed) {
                for (var g = K.getAuthResponse("google").access_token, f = 0; f < e.feed.entry.length; f++) {
                    var d = e.feed.entry[f];
                    if (d.id = d.id.$t, d.name = d.title.$t, delete d.title, d.gd$email && (d.email = d.gd$email && d.gd$email.length > 0 ? d.gd$email[0].address : null, d.emails = d.gd$email, delete d.gd$email), d.updated && (d.updated = d.updated.$t), d.link) {
                        var c = d.link.length > 0 ? d.link[0].href + "?access_token=" + g : null;
                        c && (d.picture = c, d.thumbnail = c), delete d.link
                    }
                    d.category && delete d.category
                }
                e.data = e.feed.entry, delete e.feed
            }
            return e
        }

        function z(d) {
            if ("feed" in d && d.feed.openSearch$itemsPerPage) {
                var c = D(d.feed.openSearch$itemsPerPage.$t),
                    f = D(d.feed.openSearch$startIndex.$t),
                    a = D(d.feed.openSearch$totalResults.$t);
                a > f + c && (d.paging = {
                    next: "?start=" + (f + c)
                })
            } else {
                "nextPageToken" in d && (d.paging = {
                    next: "?pageToken=" + d.nextPageToken
                })
            }
        }

        function F() {
            function p(c) {
                var a = new FileReader;
                a.onload = function (e) {
                    g(btoa(e.target.result), c.type + d + "Content-Transfer-Encoding: base64")
                }, a.readAsBinaryString(c)
            }

            function g(c, a) {
                f.push(d + "Content-Type: " + a + d + d + c), u-- , h()
            }
            var f = [],
                m = (10000000000 * Math.random()).toString(32),
                u = 0,
                d = "\r\n",
                v = d + "--" + m,
                h = function () { },
                t = /^data\:([^;,]+(\;charset=[^;,]+)?)(\;base64)?,/i;
            this.append = function (w, e) {
                "string" != typeof w && "length" in Object(w) || (w = [w]);
                for (var r = 0; r < w.length; r++) {
                    u++;
                    var a = w[r];
                    if (a instanceof x.File || a instanceof x.Blob) {
                        p(a)
                    } else {
                        if ("string" == typeof a && a.match(t)) {
                            var c = a.match(t);
                            g(a.replace(t, ""), c[1] + d + "Content-Transfer-Encoding: base64")
                        } else {
                            g(a, e)
                        }
                    }
                }
            }, this.onready = function (a) {
                (h = function () {
                    0 === u && (f.unshift(""), f.push("--"), a(f.join(v), m), f = [])
                })()
            }
        }

        function M(h, m, l, d, c) {
            var g = "https://content.googleapis.com";
            E || (I = String(parseInt(100000000 * Math.random(), 10)), E = B.append("iframe", {
                src: g + "/static/proxy.html?jsh=m%3B%2F_%2Fscs%2Fapps-static%2F_%2Fjs%2Fk%3Doz.gapi.en.mMZgig4ibk0.O%2Fm%3D__features__%2Fam%3DEQ%2Frt%3Dj%2Fd%3D1%2Frs%3DAItRSTNZBJcXGialq7mfSUkqsE3kvYwkpQ#parent=" + x.location.origin + "&rpctoken=" + I,
                style: {
                    position: "absolute",
                    left: "-1000px",
                    bottom: 0,
                    height: "1px",
                    width: "1px"
                }
            }, "body"), J(x, "message", function (i) {
                if (i.origin === g) {
                    var a;
                    try {
                        a = JSON.parse(i.data)
                    } catch (r) {
                        return
                    }
                    if (a && a.s && a.s === "ready:" + I) {
                        H = !0, k = 0;
                        for (var p = 0; p < j.length; p++) {
                            j[p]()
                        }
                    }
                }
            }));
            var f = function () {
                var p = x.navigator,
                    e = ++k,
                    r = B.param(m.match(/\?.+/)[0]),
                    i = r.access_token;
                delete r.access_token;
                var o = JSON.stringify({
                    s: "makeHttpRequests",
                    f: "..",
                    c: e,
                    a: [
                        [{
                            key: "gapiRequest",
                            params: {
                                url: m.replace(/(^https?\:\/\/[^\/]+|\?.+$)/, ""),
                                httpMethod: h.toUpperCase(),
                                body: d,
                                headers: {
                                    Authorization: ":Bearer " + i,
                                    "Content-Type": l["content-type"],
                                    "X-Origin": x.location.origin,
                                    "X-ClientDetails": "appVersion=" + p.appVersion + "&platform=" + p.platform + "&userAgent=" + p.userAgent
                                },
                                urlParams: r,
                                clientName: "google-api-javascript-client",
                                clientVersion: "1.1.0-beta"
                            }
                        }]
                    ],
                    t: I,
                    l: !1,
                    g: !0,
                    r: ".."
                });
                J(x, "message", function a(s) {
                    if (s.origin === g) {
                        try {
                            var u = JSON.parse(s.data);
                            u.t === I && u.a[0] === e && (L(x, "message", a), c(JSON.parse(JSON.parse(u.a[1]).gapiRequest.data.body)))
                        } catch (t) {
                            c({
                                error: {
                                    code: "request_error",
                                    message: "Failed to post to Google"
                                }
                            })
                        }
                    }
                }), E.contentWindow.postMessage(o, "*")
            };
            H ? f() : j.push(f)
        }

        function q(a, d) {
            var c = {};
            a.data && a.data instanceof x.HTMLInputElement && (a.data = {
                file: a.data
            }), !a.data.name && Object(Object(a.data.file).files).length && "post" === a.method && (a.data.name = a.data.file.files[0].name), "post" === a.method ? a.data = {
                title: a.data.name,
                parents: [{
                    id: a.data.parent || "root"
                }],
                file: a.data.file
            } : (c = a.data, a.data = {}, c.parent && (a.data.parents = [{
                id: a.data.parent || "root"
            }]), c.file && (a.data.file = c.file), c.name && (a.data.title = c.name)), d("upload/drive/v2/files" + (c.id ? "/" + c.id : "") + "?uploadType=multipart")
        }
        var J, L, B = K.utils;
        document.removeEventListener ? (J = function (c, a, d) {
            c.addEventListener(a, d)
        }, L = function (c, a, d) {
            c.removeEventListener(a, d)
        }) : document.detachEvent && (L = function (c, a, d) {
            c.detachEvent("on" + a, d)
        }, J = function (c, a, d) {
            c.attachEvent("on" + a, d)
        });
        var E, H, I, k, j = [],
            b = "https://www.google.com/m8/feeds/contacts/default/full?alt=json&max-results=@{limit|1000}&start-index=@{start|1}";
        K.init({
            google: {
                name: "Google Plus",
                login: function (a) {
                    "none" === a.qs.display && (a.qs.display = ""), "code" === a.qs.response_type && (a.qs.access_type = "offline")
                },
                oauth: {
                    version: 2,
                    auth: "https://accounts.google.com/o/oauth2/auth",
                    grant: "https://accounts.google.com/o/oauth2/token"
                },
                scope: {
                    basic: "https://www.googleapis.com/auth/plus.me profile",
                    email: "email",
                    birthday: "",
                    events: "",
                    photos: "https://picasaweb.google.com/data/",
                    videos: "http://gdata.youtube.com",
                    friends: "https://www.google.com/m8/feeds, https://www.googleapis.com/auth/plus.login",
                    files: "https://www.googleapis.com/auth/drive.readonly",
                    publish: "",
                    publish_files: "https://www.googleapis.com/auth/drive",
                    create_event: "",
                    offline_access: ""
                },
                scope_delim: " ",
                base: "https://www.googleapis.com/",
                get: {
                    me: "plus/v1/people/me",
                    "me/friends": "plus/v1/people/me/people/visible?maxResults=@{limit|100}",
                    "me/following": b,
                    "me/followers": b,
                    "me/contacts": b,
                    "me/share": "plus/v1/people/me/activities/public?maxResults=@{limit|100}",
                    "me/feed": "plus/v1/people/me/activities/public?maxResults=@{limit|100}",
                    "me/albums": "https://picasaweb.google.com/data/feed/api/user/default?alt=json&max-results=@{limit|100}&start-index=@{start|1}",
                    "me/album": function (c, a) {
                        var d = c.data.id;
                        delete c.data.id, a(d.replace("/entry/", "/feed/"))
                    },
                    "me/photos": "https://picasaweb.google.com/data/feed/api/user/default?alt=json&kind=photo&max-results=@{limit|100}&start-index=@{start|1}",
                    "me/files": "drive/v2/files?q=%22@{parent|root}%22+in+parents+and+trashed=false&maxResults=@{limit|100}",
                    "me/folders": "drive/v2/files?q=%22@{id|root}%22+in+parents+and+mimeType+=+%22application/vnd.google-apps.folder%22+and+trashed=false&maxResults=@{limit|100}",
                    "me/folder": "drive/v2/files?q=%22@{id|root}%22+in+parents+and+trashed=false&maxResults=@{limit|100}"
                },
                post: {
                    "me/files": q,
                    "me/folders": function (c, a) {
                        c.data = {
                            title: c.data.name,
                            parents: [{
                                id: c.data.parent || "root"
                            }],
                            mimeType: "application/vnd.google-apps.folder"
                        }, a("drive/v2/files")
                    }
                },
                put: {
                    "me/files": q
                },
                del: {
                    "me/files": "drive/v2/files/@{id}",
                    "me/folder": "drive/v2/files/@{id}"
                },
                wrap: {
                    me: function (a) {
                        return a.id && (a.last_name = a.family_name || (a.name ? a.name.familyName : null), a.first_name = a.given_name || (a.name ? a.name.givenName : null), a.emails && a.emails.length && (a.email = a.emails[0].value), N(a)), a
                    },
                    "me/friends": function (c) {
                        if (c.items) {
                            z(c), c.data = c.items, delete c.items;
                            for (var a = 0; a < c.data.length; a++) {
                                N(c.data[a])
                            }
                        }
                        return c
                    },
                    "me/contacts": A,
                    "me/followers": A,
                    "me/following": A,
                    "me/share": function (a) {
                        return z(a), a.data = a.items, delete a.items, a
                    },
                    "me/feed": function (a) {
                        return z(a), a.data = a.items, delete a.items, a
                    },
                    "me/albums": G,
                    "me/photos": G,
                    "default": G
                },
                xhr: function (a) {
                    if ("post" === a.method || "put" === a.method) {
                        if (a.data && B.hasBinary(a.data) || a.data.file) {
                            return a.cors_support = a.cors_support || !0, !1
                        }
                        a.data = JSON.stringify(a.data), a.headers = {
                            "content-type": "application/json"
                        }
                    }
                    return !0
                },
                api: function (g, f, l, h) {
                    if ("get" !== f.method) {
                        "file" in f.data && B.domInstance("input", f.data.file) && !("files" in f.data.file) && h({
                            error: {
                                code: "request_invalid",
                                message: "Sorry, can't upload your files to Google Drive in this browser"
                            }
                        });
                        var d;
                        if ("file" in f.data && (d = f.data.file, delete f.data.file, "object" == typeof d && "files" in d && (d = d.files), !d || !d.length)) {
                            return void h({
                                error: {
                                    code: "request_invalid",
                                    message: "There were no files attached with this request to upload"
                                }
                            })
                        }
                        var c = new F;
                        return c.append(JSON.stringify(f.data), "application/json"), d && c.append(d), c.onready(function (m, e) {
                            f.cors_support ? B.xhr(f.method, B.qs(g, l), {
                                "content-type": 'multipart/related; boundary="' + e + '"'
                            }, m, h) : M(f.method, B.qs(g, l), {
                                "content-type": 'multipart/related; boundary="' + e + '"'
                            }, m, h)
                        }), !0
                    }
                }
            }
        })
    }(hello, window),
    function (c) {
        function b(g) {
            g && "meta" in g && "error_type" in g.meta && (g.error = {
                code: g.meta.error_type,
                message: g.meta.error_message
            })
        }

        function f(h) {
            if (a(h), h && "data" in h) {
                for (var g = 0; g < h.data.length; g++) {
                    d(h.data[g])
                }
            }
            return h
        }

        function d(g) {
            g.id && (g.thumbnail = g.profile_picture, g.name = g.full_name || g.username)
        }

        function a(g) {
            "pagination" in g && (g.paging = {
                next: g.pagination.next_url
            }, delete g.pagination)
        }
        c.init({
            instagram: {
                name: "Instagram",
                login: function (g) {
                    g.qs.display = ""
                },
                oauth: {
                    version: 2,
                    auth: "https://instagram.com/oauth/authorize/",
                    grant: "https://api.instagram.com/oauth/access_token"
                },
                refresh: !0,
                scope: {
                    basic: "basic",
                    friends: "relationships",
                    photos: ""
                },
                scope_delim: " ",
                base: "https://api.instagram.com/v1/",
                get: {
                    me: "users/self",
                    "me/feed": "users/self/feed?count=@{limit|100}",
                    "me/photos": "users/self/media/recent?min_id=0&count=@{limit|100}",
                    "me/friends": "users/self/follows?count=@{limit|100}",
                    "me/following": "users/self/follows?count=@{limit|100}",
                    "me/followers": "users/self/followed-by?count=@{limit|100}"
                },
                wrap: {
                    me: function (g) {
                        return b(g), "data" in g && (g.id = g.data.id, g.thumbnail = g.data.profile_picture, g.name = g.data.full_name || g.data.username), g
                    },
                    "me/friends": f,
                    "me/following": f,
                    "me/followers": f,
                    "me/photos": function (g) {
                        if (b(g), a(g), "data" in g) {
                            for (var i = 0; i < g.data.length; i++) {
                                var h = g.data[i];
                                "image" === h.type ? (h.thumbnail = h.images.thumbnail.url, h.picture = h.images.standard_resolution.url, h.name = h.caption ? h.caption.text : null) : (g.data.splice(i, 1), i--)
                            }
                        }
                        return g
                    },
                    "default": function (g) {
                        return a(g), g
                    }
                },
                xhr: !1
            }
        })
    }(hello),
    function (c) {
        function b(g) {
            g && "errorCode" in g && (g.error = {
                code: g.status,
                message: g.message
            })
        }

        function f(g) {
            g.error || (g.first_name = g.firstName, g.last_name = g.lastName, g.name = g.formattedName || g.first_name + " " + g.last_name, g.thumbnail = g.pictureUrl)
        }

        function d(g) {
            if (b(g), a(g), g.values) {
                g.data = g.values;
                for (var h = 0; h < g.data.length; h++) {
                    f(g.data[h])
                }
                delete g.values
            }
            return g
        }

        function a(g) {
            "_count" in g && "_start" in g && g._count + g._start < g._total && (g.paging = {
                next: "?start=" + (g._start + g._count) + "&count=" + g._count
            })
        }
        c.init({
            linkedin: {
                oauth: {
                    version: 2,
                    response_type: "code",
                    auth: "https://www.linkedin.com/uas/oauth2/authorization",
                    grant: "https://www.linkedin.com/uas/oauth2/accessToken"
                },
                refresh: !0,
                scope: {
                    basic: "r_fullprofile",
                    email: "r_emailaddress",
                    friends: "r_network",
                    publish: "rw_nus"
                },
                scope_delim: " ",
                querystring: function (g) {
                    g.oauth2_access_token = g.access_token, delete g.access_token
                },
                base: "https://api.linkedin.com/v1/",
                get: {
                    me: "people/~:(picture-url,first-name,last-name,id,formatted-name)",
                    "me/friends": "people/~/connections?count=@{limit|500}",
                    "me/followers": "people/~/connections?count=@{limit|500}",
                    "me/following": "people/~/connections?count=@{limit|500}",
                    "me/share": "people/~/network/updates?count=@{limit|250}"
                },
                post: {
                    "me/share": function (h, g) {
                        h.data = JSON.stringify({
                            comment: h.data.message,
                            content: {
                                "submitted-url": h.data.link,
                                "submitted-image-url": h.data.picture
                            },
                            visibility: {
                                code: "anyone"
                            }
                        }), g("people/~/shares?format=json")
                    }
                },
                wrap: {
                    me: function (g) {
                        return b(g), f(g), g
                    },
                    "me/friends": d,
                    "me/following": d,
                    "me/followers": d,
                    "me/share": function (h) {
                        if (b(h), a(h), h.values) {
                            h.data = h.values, delete h.values;
                            for (var i = 0; i < h.data.length; i++) {
                                var g = h.data[i];
                                f(g), g.message = g.headline
                            }
                        }
                        return h
                    },
                    "default": function (g) {
                        b(g), a(g)
                    }
                },
                jsonp: function (h, g) {
                    g.format = "jsonp", "get" === h.method && (g["error-callback"] = "?")
                },
                xhr: function (g) {
                    return "get" !== g.method ? (g.headers["Content-Type"] = "application/json", g.proxy = !0, !0) : !1
                }
            }
        })
    }(hello),
    function (b) {
        function a(d) {
            d.id && (d.picture = d.avatar_url, d.thumbnail = d.avatar_url, d.name = d.username || d.full_name)
        }

        function c(d) {
            "next_href" in d && (d.paging = {
                next: d.next_href
            })
        }
        b.init({
            soundcloud: {
                name: "SoundCloud",
                oauth: {
                    version: 2,
                    auth: "https://soundcloud.com/connect",
                    grant: "https://soundcloud.com/oauth2/token"
                },
                querystring: function (f) {
                    var d = f.access_token;
                    delete f.access_token, f.oauth_token = d, f["_status_code_map[302]"] = 200
                },
                base: "https://api.soundcloud.com/",
                get: {
                    me: "me.json",
                    "me/friends": "me/followings.json",
                    "me/followers": "me/followers.json",
                    "me/following": "me/followings.json",
                    "default": function (f, d) {
                        d(f.path + ".json")
                    }
                },
                wrap: {
                    me: function (d) {
                        return a(d), d
                    },
                    "default": function (d) {
                        if (d instanceof Array) {
                            d = {
                                data: d
                            };
                            for (var f = 0; f < d.data.length; f++) {
                                a(d.data[f])
                            }
                        }
                        return c(d), d
                    }
                }
            }
        })
    }(hello), hello.init({
        tumblr: {
            login: function (a) {
                a.options.window_width = 600, a.options.window_height = 510
            },
            oauth: {
                version: "1.0a",
                auth: "https://www.tumblr.com/oauth/authorize",
                request: "https://www.tumblr.com/oauth/request_token",
                token: "https://www.tumblr.com/oauth/access_token"
            },
            base: "https://api.tumblr.com/v2/",
            get: {
                me: "user/info"
            },
            wrap: {
                me: function (a) {
                    return a && a.response && a.response.user && (a = a.response.user), a
                }
            },
            xhr: !1
        }
    }),
    function (f) {
        function d(i) {
            if (i.id) {
                if (i.name) {
                    var a = i.name.split(" ");
                    i.first_name = a[0], i.last_name = a[1]
                }
                i.thumbnail = i.profile_image_url
            }
        }

        function h(a) {
            if (g(a), c(a), a.users) {
                a.data = a.users;
                for (var i = 0; i < a.data.length; i++) {
                    d(a.data[i])
                }
                delete a.users
            }
            return a
        }

        function g(i) {
            if (i.errors) {
                var a = i.errors[0];
                i.error = {
                    code: "request_failed",
                    message: a.message
                }
            }
        }

        function c(a) {
            "next_cursor_str" in a && (a.paging = {
                next: "?cursor=" + a.next_cursor_str
            })
        }
        var b = "https://api.twitter.com/";
        f.init({
            twitter: {
                oauth: {
                    version: "1.0a",
                    auth: b + "oauth/authenticate",
                    request: b + "oauth/request_token",
                    token: b + "oauth/access_token"
                },
                base: b + "1.1/",
                get: {
                    me: "account/verify_credentials.json",
                    "me/friends": "friends/list.json?count=@{limit|200}",
                    "me/following": "friends/list.json?count=@{limit|200}",
                    "me/followers": "followers/list.json?count=@{limit|200}",
                    "me/share": "statuses/user_timeline.json?count=@{limit|200}"
                },
                post: {
                    "me/share": function (i, a) {
                        var j = i.data;
                        i.data = null, j.file ? (i.data = {
                            status: j.message,
                            "media[]": j.file
                        }, a("statuses/update_with_media.json")) : a(j.id ? "statuses/retweet/" + j.id + ".json" : "statuses/update.json?include_entities=1&status=" + j.message)
                    }
                },
                wrap: {
                    me: function (a) {
                        return g(a), d(a), a
                    },
                    "me/friends": h,
                    "me/followers": h,
                    "me/following": h,
                    "me/share": function (a) {
                        return g(a), c(a), !a.error && "length" in a ? {
                            data: a
                        } : a
                    },
                    "default": function (a) {
                        return c(a), a
                    }
                },
                xhr: function (a) {
                    return "get" !== a.method
                }
            }
        })
    }(hello),
    function (b) {
        function a(d) {
            if (d.id) {
                var f = b.getAuthResponse("windows").access_token;
                if (d.emails && (d.email = d.emails.preferred), d.is_friend !== !1) {
                    var e = d.user_id || d.id;
                    d.thumbnail = d.picture = "https://apis.live.net/v5.0/" + e + "/picture?access_token=" + f
                }
            }
        }

        function c(d) {
            if ("data" in d) {
                for (var f = 0; f < d.data.length; f++) {
                    a(d.data[f])
                }
            }
            return d
        }
        b.init({
            windows: {
                name: "Windows live",
                oauth: {
                    version: 2,
                    auth: "https://login.live.com/oauth20_authorize.srf",
                    grant: "https://login.live.com/oauth20_token.srf"
                },
                refresh: !0,
                logout: function () {
                    return "http://login.live.com/oauth20_logout.srf?ts=" + (new Date).getTime()
                },
                scope: {
                    basic: "wl.signin,wl.basic",
                    email: "wl.emails",
                    birthday: "wl.birthday",
                    events: "wl.calendars",
                    photos: "wl.photos",
                    videos: "wl.photos",
                    friends: "wl.contacts_emails",
                    files: "wl.skydrive",
                    publish: "wl.share",
                    publish_files: "wl.skydrive_update",
                    create_event: "wl.calendars_update,wl.events_create",
                    offline_access: "wl.offline_access"
                },
                base: "https://apis.live.net/v5.0/",
                get: {
                    me: "me",
                    "me/friends": "me/friends",
                    "me/following": "me/contacts",
                    "me/followers": "me/friends",
                    "me/contacts": "me/contacts",
                    "me/albums": "me/albums",
                    "me/album": "@{id}/files",
                    "me/photo": "@{id}",
                    "me/files": "@{parent|me/skydrive}/files",
                    "me/folders": "@{id|me/skydrive}/files",
                    "me/folder": "@{id|me/skydrive}/files"
                },
                post: {
                    "me/albums": "me/albums",
                    "me/album": "@{id}/files/",
                    "me/folders": "@{id|me/skydrive/}",
                    "me/files": "@{parent|me/skydrive/}/files"
                },
                del: {
                    "me/album": "@{id}",
                    "me/photo": "@{id}",
                    "me/folder": "@{id}",
                    "me/files": "@{id}"
                },
                wrap: {
                    me: function (d) {
                        return a(d), d
                    },
                    "me/friends": c,
                    "me/contacts": c,
                    "me/followers": c,
                    "me/following": c,
                    "me/albums": function (f) {
                        if ("data" in f) {
                            for (var d = 0; d < f.data.length; d++) {
                                var g = f.data[d];
                                g.photos = g.files = "https://apis.live.net/v5.0/" + g.id + "/photos"
                            }
                        }
                        return f
                    },
                    "default": function (f) {
                        if ("data" in f) {
                            for (var d = 0; d < f.data.length; d++) {
                                var g = f.data[d];
                                g.picture && (g.thumbnail = g.picture)
                            }
                        }
                        return f
                    }
                },
                xhr: function (d) {
                    return "get" === d.method || "delete" === d.method || b.utils.hasBinary(d.data) || ("string" == typeof d.data.file ? d.data.file = b.utils.toBlob(d.data.file) : (d.data = JSON.stringify(d.data), d.headers = {
                        "Content-Type": "application/json"
                    })), !0
                },
                jsonp: function (d) {
                    "get" === d.method.toLowerCase() || b.utils.hasBinary(d.data) || (d.data.method = d.method.toLowerCase(), d.method = "get")
                }
            }
        })
    }(hello),
    function (c) {
        function b(g) {
            g && "meta" in g && "error_type" in g.meta && (g.error = {
                code: g.meta.error_type,
                message: g.meta.error_message
            })
        }

        function f(o, p, j) {
            b(o), d(o, p, j);
            var h, m;
            if (o.query && o.query.results && o.query.results.contact) {
                o.data = o.query.results.contact, delete o.query, o.data instanceof Array || (o.data = [o.data]);
                for (var k = 0; k < o.data.length; k++) {
                    h = o.data[k], h.id = null;
                    for (var g = 0; g < h.fields.length; g++) {
                        m = h.fields[g], "email" === m.type && (h.email = m.value), "name" === m.type && (h.first_name = m.value.givenName, h.last_name = m.value.familyName, h.name = m.value.givenName + " " + m.value.familyName), "yahooid" === m.type && (h.id = m.value)
                    }
                }
            }
            return o
        }

        function d(h, g, i) {
            h.query && h.query.count && i.options && (h.paging = {
                next: "?start=" + (h.query.count + (+i.options.start || 1))
            })
        }
        var a = function (g) {
            return "https://query.yahooapis.com/v1/yql?q=" + (g + " limit @{limit|100} offset @{start|0}").replace(/\s/g, "%20") + "&format=json"
        };
        c.init({
            yahoo: {
                oauth: {
                    version: "1.0a",
                    auth: "https://api.login.yahoo.com/oauth/v2/request_auth",
                    request: "https://api.login.yahoo.com/oauth/v2/get_request_token",
                    token: "https://api.login.yahoo.com/oauth/v2/get_token"
                },
                login: function (g) {
                    g.options.window_width = 560
                },
                base: "https://social.yahooapis.com/v1/",
                get: {
                    me: a("select * from social.profile(0) where guid=me"),
                    "me/friends": a("select * from social.contacts(0) where guid=me"),
                    "me/following": a("select * from social.contacts(0) where guid=me")
                },
                wrap: {
                    me: function (g) {
                        if (b(g), g.query && g.query.results && g.query.results.profile) {
                            g = g.query.results.profile, g.id = g.guid, g.last_name = g.familyName, g.first_name = g.givenName || g.nickname;
                            var h = [];
                            g.first_name && h.push(g.first_name), g.last_name && h.push(g.last_name), g.name = h.join(" "), g.email = g.emails ? g.emails.handle : null, g.thumbnail = g.image ? g.image.imageUrl : null
                        }
                        return g
                    },
                    "me/friends": f,
                    "me/following": f,
                    "default": function (g) {
                        return d(g), g
                    }
                },
                xhr: !1
            }
        })
    }(hello), "function" == typeof define && define.amd && define(function () {
        return hello
    }), "object" == typeof module && module.exports && (module.exports = hello);
! function (a) {
    jQuery(function () {
        jQuery.support.transition = (function () {
            var b = (function () {
                var e = document.createElement("bootstrap"),
                    d = {
                        WebkitTransition: "webkitTransitionEnd",
                        MozTransition: "transitionend",
                        OTransition: "oTransitionEnd otransitionend",
                        transition: "transitionend"
                    },
                    c;
                for (c in d) {
                    if (e.style[c] !== undefined) {
                        return d[c]
                    }
                }
            }());
            return b && {
                end: b
            }
        })()
    })
}(window.jQuery);
! function (c) {
    var b = function (e, d) {
        this.options = d;
        this.$element = jQuery(e).delegate('[data-dismiss="modal"]', "click.dismiss.modal", jQuery.proxy(this.hide, this));
        this.options.remote && this.$element.find(".modal-body").load(this.options.remote)
    };
    b.prototype = {
        constructor: b,
        toggle: function () {
            return this[!this.isShown ? "show" : "hide"]()
        },
        show: function () {
            var d = this,
                f = jQuery.Event("show");
            this.$element.trigger(f);
            if (this.isShown || f.isDefaultPrevented()) {
                return
            }
            this.isShown = true;
            this.escape();
            this.backdrop(function () {
                var e = jQuery.support.transition && d.$element.hasClass("fade");
                if (!d.$element.parent().length) {
                    d.$element.appendTo(document.body)
                }
                d.$element.show();
                if (e) {
                    d.$element[0].offsetWidth
                }
                d.$element.addClass("in").attr("aria-hidden", false);
                d.enforceFocus();
                e ? d.$element.one(jQuery.support.transition.end, function () {
                    d.$element.focus().trigger("shown")
                }) : d.$element.focus().trigger("shown")
            })
        },
        hide: function (f) {
            f && f.preventDefault();
            var d = this;
            f = jQuery.Event("hide");
            this.$element.trigger(f);
            if (!this.isShown || f.isDefaultPrevented()) {
                return
            }
            this.isShown = false;
            this.escape();
            jQuery(document).off("focusin.modal");
            this.$element.removeClass("in").attr("aria-hidden", true);
            jQuery.support.transition && this.$element.hasClass("fade") ? this.hideWithTransition() : this.hideModal()
        },
        enforceFocus: function () {
            var d = this;
            jQuery(document).on("focusin.modal", function (f) {
                if (d.$element[0] !== f.target && !d.$element.has(f.target).length) {
                    d.$element.focus()
                }
            })
        },
        escape: function () {
            var d = this;
            if (this.isShown && this.options.keyboard) {
                this.$element.on("keyup.dismiss.modal", function (f) {
                    f.which == 27 && d.hide()
                })
            } else {
                if (!this.isShown) {
                    this.$element.off("keyup.dismiss.modal")
                }
            }
        },
        hideWithTransition: function () {
            var d = this,
                e = setTimeout(function () {
                    d.$element.off(jQuery.support.transition.end);
                    d.hideModal()
                }, 500);
            this.$element.one(jQuery.support.transition.end, function () {
                clearTimeout(e);
                d.hideModal()
            })
        },
        hideModal: function () {
            var d = this;
            this.$element.hide();
            this.backdrop(function () {
                d.removeBackdrop();
                d.$element.trigger("hidden")
            })
        },
        removeBackdrop: function () {
            this.$backdrop.remove();
            this.$backdrop = null
        },
        backdrop: function (g) {
            var f = this,
                e = this.$element.hasClass("fade") ? "fade" : "";
            if (this.isShown && this.options.backdrop) {
                var d = jQuery.support.transition && e;
                this.$backdrop = jQuery('<div class="modal-backdrop ' + e + '" />').appendTo(document.body);
                this.$backdrop.click(this.options.backdrop == "static" ? jQuery.proxy(this.$element[0].focus, this.$element[0]) : jQuery.proxy(this.hide, this));
                if (d) {
                    this.$backdrop[0].offsetWidth
                }
                this.$backdrop.addClass("in");
                if (!g) {
                    return
                }
                d ? this.$backdrop.one(jQuery.support.transition.end, g) : g()
            } else {
                if (!this.isShown && this.$backdrop) {
                    this.$backdrop.removeClass("in");
                    jQuery.support.transition && this.$element.hasClass("fade") ? this.$backdrop.one(jQuery.support.transition.end, g) : g()
                } else {
                    if (g) {
                        g()
                    }
                }
            }
        }
    };
    var a = jQuery.fn.modal;
    jQuery.fn.modal = function (d) {
        return this.each(function () {
            var g = jQuery(this),
                f = g.data("modal"),
                e = jQuery.extend({}, jQuery.fn.modal.defaults, g.data(), typeof d == "object" && d);
            if (!f) {
                g.data("modal", (f = new b(this, e)))
            }
            if (typeof d == "string") {
                f[d]()
            } else {
                if (e.show) {
                    f.show()
                }
            }
        })
    };
    jQuery.fn.modal.defaults = {
        backdrop: true,
        keyboard: true,
        show: true
    };
    jQuery.fn.modal.Constructor = b;
    jQuery.fn.modal.noConflict = function () {
        jQuery.fn.modal = a;
        return this
    };
    jQuery(document).on("click.modal.data-api", '[data-toggle="modal"]', function (i) {
        var h = jQuery(this),
            f = h.attr("href"),
            d = jQuery(h.attr("data-target") || (f && f.replace(/.*(?=#[^\s]+$)/, ""))),
            g = d.data("modal") ? "toggle" : jQuery.extend({
                remote: !/#/.test(f) && f
            }, d.data(), h.data());
        i.preventDefault();
        d.modal(g).one("hide", function () {
            h.focus()
        })
    })
}(window.jQuery);
! function (f) {
    var b = "[data-toggle=dropdown]",
        a = function (h) {
            var g = jQuery(h).on("click.dropdown.data-api", this.toggle);
            jQuery("html").on("click.dropdown.data-api", function () {
                g.parent().removeClass("open")
            })
        };
    a.prototype = {
        constructor: a,
        toggle: function (j) {
            var i = jQuery(this),
                h, g;
            if (i.is(".disabled, :disabled")) {
                return
            }
            h = e(i);
            g = h.hasClass("open");
            d();
            if (!g) {
                h.toggleClass("open")
            }
            i.focus();
            return false
        },
        keydown: function (l) {
            var k, m, g, j, i, h;
            if (!/(38|40|27)/.test(l.keyCode)) {
                return
            }
            k = jQuery(this);
            l.preventDefault();
            l.stopPropagation();
            if (k.is(".disabled, :disabled")) {
                return
            }
            j = e(k);
            i = j.hasClass("open");
            if (!i || (i && l.keyCode == 27)) {
                if (l.which == 27) {
                    j.find(b).focus()
                }
                return k.click()
            }
            m = jQuery("[role=menu] li:not(.divider):visible a", j);
            if (!m.length) {
                return
            }
            h = m.index(m.filter(":focus"));
            if (l.keyCode == 38 && h > 0) {
                h--
            }
            if (l.keyCode == 40 && h < m.length - 1) {
                h++
            }
            if (!~h) {
                h = 0
            }
            m.eq(h).focus()
        }
    };

    function d() {
        jQuery(b).each(function () {
            e(jQuery(this)).removeClass("open")
        })
    }

    function e(i) {
        var g = i.attr("data-target"),
            h;
        if (!g) {
            g = i.attr("href");
            g = g && /#/.test(g) && g.replace(/.*(?=#[^\s]*$)/, "")
        }
        h = g && jQuery(g);
        if (!h || !h.length) {
            h = i.parent()
        }
        return h
    }
    var c = jQuery.fn.dropdown;
    jQuery.fn.dropdown = function (g) {
        return this.each(function () {
            var i = jQuery(this),
                h = i.data("dropdown");
            if (!h) {
                i.data("dropdown", (h = new a(this)))
            }
            if (typeof g == "string") {
                h[g].call(i)
            }
        })
    };
    jQuery.fn.dropdown.Constructor = a;
    jQuery.fn.dropdown.noConflict = function () {
        jQuery.fn.dropdown = c;
        return this
    };
    jQuery(document).on("click.dropdown.data-api", d).on("click.dropdown.data-api", ".dropdown form", function (g) {
        g.stopPropagation()
    }).on(".dropdown-menu", function (g) {
        g.stopPropagation()
    }).on("click.dropdown.data-api", b, a.prototype.toggle).on("keydown.dropdown.data-api", b + ", [role=menu]", a.prototype.keydown)
}(window.jQuery);
! function (c) {
    function b(g, f) {
        var h = jQuery.proxy(this.process, this),
            d = jQuery(g).is("body") ? jQuery(window) : jQuery(g),
            e;
        this.options = jQuery.extend({}, jQuery.fn.scrollspy.defaults, f);
        this.$scrollElement = d.on("scroll.scroll-spy.data-api", h);
        this.selector = (this.options.target || ((e = jQuery(g).attr("href")) && e.replace(/.*(?=#[^\s]+$)/, "")) || "") + " .nav li > a";
        this.$body = jQuery("body");
        this.refresh();
        this.process()
    }
    b.prototype = {
        constructor: b,
        refresh: function () {
            var d = this,
                e;
            this.offsets = jQuery([]);
            this.targets = jQuery([]);
            e = this.$body.find(this.selector).map(function () {
                var g = jQuery(this),
                    f = g.data("target") || g.attr("href"),
                    h = /^#\w/.test(f) && jQuery(f);
                return (h && h.length && [
                    [h.position().top + (!jQuery.isWindow(d.$scrollElement.get(0)) && d.$scrollElement.scrollTop()), f]
                ]) || null
            }).sort(function (g, f) {
                return g[0] - f[0]
            }).each(function () {
                d.offsets.push(this[0]);
                d.targets.push(this[1])
            })
        },
        process: function () {
            var j = this.$scrollElement.scrollTop() + this.options.offset,
                f = this.$scrollElement[0].scrollHeight || this.$body[0].scrollHeight,
                h = f - this.$scrollElement.height(),
                g = this.offsets,
                d = this.targets,
                k = this.activeTarget,
                e;
            if (j >= h) {
                return k != (e = d.last()[0]) && this.activate(e)
            }
            for (e = g.length; e--;) {
                k != d[e] && j >= g[e] && (!g[e + 1] || j <= g[e + 1]) && this.activate(d[e])
            }
        },
        activate: function (f) {
            var e, d;
            this.activeTarget = f;
            jQuery(this.selector).parent(".active").removeClass("active");
            d = this.selector + '[data-target="' + f + '"],' + this.selector + '[href="' + f + '"]';
            e = jQuery(d).parent("li").addClass("active");
            if (e.parent(".dropdown-menu").length) {
                e = e.closest("li.dropdown").addClass("active")
            }
            e.trigger("activate")
        }
    };
    var a = jQuery.fn.scrollspy;
    jQuery.fn.scrollspy = function (d) {
        return this.each(function () {
            var g = jQuery(this),
                f = g.data("scrollspy"),
                e = typeof d == "object" && d;
            if (!f) {
                g.data("scrollspy", (f = new b(this, e)))
            }
            if (typeof d == "string") {
                f[d]()
            }
        })
    };
    jQuery.fn.scrollspy.Constructor = b;
    jQuery.fn.scrollspy.defaults = {
        offset: 10
    };
    jQuery.fn.scrollspy.noConflict = function () {
        jQuery.fn.scrollspy = a;
        return this
    };
    jQuery(window).on("load", function () {
        jQuery('[data-spy="scroll"]').each(function () {
            var d = jQuery(this);
            d.scrollspy(d.data())
        })
    })
}(window.jQuery);
! function (c) {
    var b = function (d) {
        this.element = jQuery(d)
    };
    b.prototype = {
        constructor: b,
        show: function () {
            var j = this.element,
                g = j.closest("ul:not(.dropdown-menu)"),
                f = j.attr("data-target"),
                h, d, i;
            if (!f) {
                f = j.attr("href");
                f = f && f.replace(/.*(?=#[^\s]*$)/, "")
            }
            if (j.parent("li").hasClass("active")) {
                return
            }
            h = g.find(".active:last a")[0];
            i = jQuery.Event("show", {
                relatedTarget: h
            });
            j.trigger(i);
            if (i.isDefaultPrevented()) {
                return
            }
            d = jQuery(f);
            this.activate(j.parent("li"), g);
            this.activate(d, d.parent(), function () {
                j.trigger({
                    type: "shown",
                    relatedTarget: h
                })
            })
        },
        activate: function (f, e, i) {
            var d = e.find("> .active"),
                h = i && jQuery.support.transition && d.hasClass("fade");

            function g() {
                d.removeClass("active").find("> .dropdown-menu > .active").removeClass("active");
                f.addClass("active");
                if (h) {
                    f[0].offsetWidth;
                    f.addClass("in")
                } else {
                    f.removeClass("fade")
                } if (f.parent(".dropdown-menu")) {
                    f.closest("li.dropdown").addClass("active")
                }
                i && i()
            }
            h ? d.one(jQuery.support.transition.end, g) : g();
            d.removeClass("in")
        }
    };
    var a = jQuery.fn.tab;
    jQuery.fn.tab = function (d) {
        return this.each(function () {
            var f = jQuery(this),
                e = f.data("tab");
            if (!e) {
                f.data("tab", (e = new b(this)))
            }
            if (typeof d == "string") {
                e[d]()
            }
        })
    };
    jQuery.fn.tab.Constructor = b;
    jQuery.fn.tab.noConflict = function () {
        jQuery.fn.tab = a;
        return this
    };
    jQuery(document).on("click.tab.data-api", '[data-toggle="tab"], [data-toggle="pill"]', function (d) {
        d.preventDefault();
        jQuery(this).tab("show")
    })
}(window.jQuery);
! function (c) {
    var b = function (e, d) {
        this.init("tooltip", e, d)
    };
    b.prototype = {
        constructor: b,
        init: function (k, h, f) {
            var l, d, j, e, g;
            this.type = k;
            this.$element = jQuery(h);
            this.options = this.getOptions(f);
            this.enabled = true;
            j = this.options.trigger.split(" ");
            for (g = j.length; g--;) {
                e = j[g];
                if (e == "click") {
                    this.$element.on("click." + this.type, this.options.selector, jQuery.proxy(this.toggle, this))
                } else {
                    if (e != "manual") {
                        l = e == "hover" ? "mouseenter" : "focus";
                        d = e == "hover" ? "mouseleave" : "blur";
                        this.$element.on(l + "." + this.type, this.options.selector, jQuery.proxy(this.enter, this));
                        this.$element.on(d + "." + this.type, this.options.selector, jQuery.proxy(this.leave, this))
                    }
                }
            }
            this.options.selector ? (this._options = jQuery.extend({}, this.options, {
                trigger: "manual",
                selector: ""
            })) : this.fixTitle()
        },
        getOptions: function (d) {
            d = jQuery.extend({}, jQuery.fn[this.type].defaults, this.$element.data(), d);
            if (d.delay && typeof d.delay == "number") {
                d.delay = {
                    show: d.delay,
                    hide: d.delay
                }
            }
            return d
        },
        enter: function (f) {
            var d = jQuery(f.currentTarget)[this.type](this._options).data(this.type);
            if (!d.options.delay || !d.options.delay.show) {
                return d.show()
            }
            clearTimeout(this.timeout);
            d.hoverState = "in";
            this.timeout = setTimeout(function () {
                if (d.hoverState == "in") {
                    d.show()
                }
            }, d.options.delay.show)
        },
        leave: function (f) {
            var d = jQuery(f.currentTarget)[this.type](this._options).data(this.type);
            if (this.timeout) {
                clearTimeout(this.timeout)
            }
            if (!d.options.delay || !d.options.delay.hide) {
                return d.hide()
            }
            d.hoverState = "out";
            this.timeout = setTimeout(function () {
                if (d.hoverState == "out") {
                    d.hide()
                }
            }, d.options.delay.hide)
        },
        show: function () {
            var i, k, g, j, d, h, f = jQuery.Event("show");
            if (this.hasContent() && this.enabled) {
                this.$element.trigger(f);
                if (f.isDefaultPrevented()) {
                    return
                }
                i = this.tip();
                this.setContent();
                if (this.options.animation) {
                    i.addClass("fade")
                }
                d = typeof this.options.placement == "function" ? this.options.placement.call(this, i[0], this.$element[0]) : this.options.placement;
                i.detach().css({
                    top: 0,
                    left: 0,
                    display: "block"
                });
                this.options.container ? i.appendTo(this.options.container) : i.insertAfter(this.$element);
                k = this.getPosition();
                g = i[0].offsetWidth;
                j = i[0].offsetHeight;
                switch (d) {
                    case "bottom":
                        h = {
                            top: k.top + k.height,
                            left: k.left + k.width / 2 - g / 2
                        };
                        break;
                    case "top":
                        h = {
                            top: k.top - j,
                            left: k.left + k.width / 2 - g / 2
                        };
                        break;
                    case "left":
                        h = {
                            top: k.top + k.height / 2 - j / 2,
                            left: k.left - g
                        };
                        break;
                    case "right":
                        h = {
                            top: k.top + k.height / 2 - j / 2,
                            left: k.left + k.width
                        };
                        break
                }
                this.applyPlacement(h, d);
                this.$element.trigger("shown")
            }
        },
        applyPlacement: function (g, h) {
            var i = this.tip(),
                e = i[0].offsetWidth,
                l = i[0].offsetHeight,
                d, j, k, f;
            i.offset(g).addClass(h).addClass("in");
            d = i[0].offsetWidth;
            j = i[0].offsetHeight;
            if (h == "top" && j != l) {
                g.top = g.top + l - j;
                f = true
            }
            if (h == "bottom" || h == "top") {
                k = 0;
                if (g.left < 0) {
                    k = g.left * -2;
                    g.left = 0;
                    i.offset(g);
                    d = i[0].offsetWidth;
                    j = i[0].offsetHeight
                }
                this.replaceArrow(k - e + d, d, "left")
            } else {
                this.replaceArrow(j - l, j, "top")
            } if (f) {
                i.offset(g)
            }
        },
        replaceArrow: function (f, e, d) {
            this.arrow().css(d, f ? (50 * (1 - f / e) + "%") : "")
        },
        setContent: function () {
            var e = this.tip(),
                d = this.getTitle();
            e.find(".tooltip-inner")[this.options.html ? "html" : "text"](d);
            e.removeClass("fade in top bottom left right")
        },
        hide: function () {
            var d = this,
                g = this.tip(),
                f = jQuery.Event("hide");
            this.$element.trigger(f);
            if (f.isDefaultPrevented()) {
                return
            }
            g.removeClass("in");

            function h() {
                var e = setTimeout(function () {
                    g.off(jQuery.support.transition.end).detach()
                }, 500);
                g.one(jQuery.support.transition.end, function () {
                    clearTimeout(e);
                    g.detach()
                })
            }
            jQuery.support.transition && this.$tip.hasClass("fade") ? h() : g.detach();
            this.$element.trigger("hidden");
            return this
        },
        fixTitle: function () {
            var d = this.$element;
            if (d.attr("title") || typeof (d.attr("data-original-title")) != "string") {
                d.attr("data-original-title", d.attr("title") || "").attr("title", "")
            }
        },
        hasContent: function () {
            return this.getTitle()
        },
        getPosition: function () {
            var d = this.$element[0];
            return jQuery.extend({}, (typeof d.getBoundingClientRect == "function") ? d.getBoundingClientRect() : {
                width: d.offsetWidth,
                height: d.offsetHeight
            }, this.$element.offset())
        },
        getTitle: function () {
            var f, d = this.$element,
                e = this.options;
            f = d.attr("data-original-title") || (typeof e.title == "function" ? e.title.call(d[0]) : e.title);
            return f
        },
        tip: function () {
            return this.$tip = this.$tip || jQuery(this.options.template)
        },
        arrow: function () {
            return this.$arrow = this.$arrow || this.tip().find(".tooltip-arrow")
        },
        validate: function () {
            if (!this.$element[0].parentNode) {
                this.hide();
                this.$element = null;
                this.options = null
            }
        },
        enable: function () {
            this.enabled = true
        },
        disable: function () {
            this.enabled = false
        },
        toggleEnabled: function () {
            this.enabled = !this.enabled
        },
        toggle: function (f) {
            var d = f ? jQuery(f.currentTarget)[this.type](this._options).data(this.type) : this;
            d.tip().hasClass("in") ? d.hide() : d.show()
        },
        destroy: function () {
            this.hide().$element.off("." + this.type).removeData(this.type)
        }
    };
    var a = jQuery.fn.tooltip;
    jQuery.fn.tooltip = function (d) {
        return this.each(function () {
            var g = jQuery(this),
                f = g.data("tooltip"),
                e = typeof d == "object" && d;
            if (!f) {
                g.data("tooltip", (f = new b(this, e)))
            }
            if (typeof d == "string") {
                f[d]()
            }
        })
    };
    jQuery.fn.tooltip.Constructor = b;
    jQuery.fn.tooltip.defaults = {
        animation: true,
        placement: "top",
        selector: false,
        template: '<div class="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
        trigger: "hover focus",
        title: "",
        delay: 0,
        html: false,
        container: false
    };
    jQuery.fn.tooltip.noConflict = function () {
        jQuery.fn.tooltip = a;
        return this
    }
}(window.jQuery);
! function (c) {
    var b = function (e, d) {
        this.init("popover", e, d)
    };
    b.prototype = jQuery.extend({}, jQuery.fn.tooltip.Constructor.prototype, {
        constructor: b,
        setContent: function () {
            var f = this.tip(),
                e = this.getTitle(),
                d = this.getContent();
            f.find(".popover-title")[this.options.html ? "html" : "text"](e);
            f.find(".popover-content")[this.options.html ? "html" : "text"](d);
            f.removeClass("fade top bottom left right in")
        },
        hasContent: function () {
            return this.getTitle() || this.getContent()
        },
        getContent: function () {
            var e, d = this.$element,
                f = this.options;
            e = (typeof f.content == "function" ? f.content.call(d[0]) : f.content) || d.attr("data-content");
            return e
        },
        tip: function () {
            if (!this.$tip) {
                this.$tip = jQuery(this.options.template)
            }
            return this.$tip
        },
        destroy: function () {
            this.hide().$element.off("." + this.type).removeData(this.type)
        }
    });
    var a = jQuery.fn.popover;
    jQuery.fn.popover = function (d) {
        return this.each(function () {
            var g = jQuery(this),
                f = g.data("popover"),
                e = typeof d == "object" && d;
            if (!f) {
                g.data("popover", (f = new b(this, e)))
            }
            if (typeof d == "string") {
                f[d]()
            }
        })
    };
    jQuery.fn.popover.Constructor = b;
    jQuery.fn.popover.defaults = jQuery.extend({}, jQuery.fn.tooltip.defaults, {
        placement: "right",
        trigger: "click",
        content: "",
        template: '<div class="popover"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'
    });
    jQuery.fn.popover.noConflict = function () {
        jQuery.fn.popover = a;
        return this
    }
}(window.jQuery);
! function (c) {
    var b = function (e, d) {
        this.options = jQuery.extend({}, jQuery.fn.affix.defaults, d);
        this.$window = jQuery(window).on("scroll.affix.data-api", jQuery.proxy(this.checkPosition, this)).on("click.affix.data-api", jQuery.proxy(function () {
            setTimeout(jQuery.proxy(this.checkPosition, this), 1)
        }, this));
        this.$element = jQuery(e);
        this.checkPosition()
    };
    b.prototype.checkPosition = function () {
        if (!this.$element.is(":visible")) {
            return
        }
        var h = jQuery(document).height(),
            j = this.$window.scrollTop(),
            d = this.$element.offset(),
            k = this.options.offset,
            f = k.bottom,
            g = k.top,
            i = "affix affix-top affix-bottom",
            e;
        if (typeof k != "object") {
            f = g = k
        }
        if (typeof g == "function") {
            g = k.top()
        }
        if (typeof f == "function") {
            f = k.bottom()
        }
        e = this.unpin != null && (j + this.unpin <= d.top) ? false : f != null && (d.top + this.$element.height() >= h - f) ? "bottom" : g != null && j <= g ? "top" : false;
        if (this.affixed === e) {
            return
        }
        this.affixed = e;
        this.unpin = e == "bottom" ? d.top - j : null;
        this.$element.removeClass(i).addClass("affix" + (e ? "-" + e : ""))
    };
    var a = jQuery.fn.affix;
    jQuery.fn.affix = function (d) {
        return this.each(function () {
            var g = jQuery(this),
                f = g.data("affix"),
                e = typeof d == "object" && d;
            if (!f) {
                g.data("affix", (f = new b(this, e)))
            }
            if (typeof d == "string") {
                f[d]()
            }
        })
    };
    jQuery.fn.affix.Constructor = b;
    jQuery.fn.affix.defaults = {
        offset: 0
    };
    jQuery.fn.affix.noConflict = function () {
        jQuery.fn.affix = a;
        return this
    };
    jQuery(window).on("load", function () {
        jQuery('[data-spy="affix"]').each(function () {
            var e = jQuery(this),
                d = e.data();
            d.offset = d.offset || {};
            d.offsetBottom && (d.offset.bottom = d.offsetBottom);
            d.offsetTop && (d.offset.top = d.offsetTop);
            e.affix(d)
        })
    })
}(window.jQuery);
! function (d) {
    var c = '[data-dismiss="alert"]',
        b = function (e) {
            jQuery(e).on("click", c, this.close)
        };
    b.prototype.close = function (j) {
        var i = jQuery(this),
            g = i.attr("data-target"),
            h;
        if (!g) {
            g = i.attr("href");
            g = g && g.replace(/.*(?=#[^\s]*$)/, "")
        }
        h = jQuery(g);
        j && j.preventDefault();
        h.length || (h = i.hasClass("alert") ? i : i.parent());
        h.trigger(j = jQuery.Event("close"));
        if (j.isDefaultPrevented()) {
            return
        }
        h.removeClass("in");

        function f() {
            h.trigger("closed").remove()
        }
        jQuery.support.transition && h.hasClass("fade") ? h.on(jQuery.support.transition.end, f) : f()
    };
    var a = jQuery.fn.alert;
    jQuery.fn.alert = function (e) {
        return this.each(function () {
            var g = jQuery(this),
                f = g.data("alert");
            if (!f) {
                g.data("alert", (f = new b(this)))
            }
            if (typeof e == "string") {
                f[e].call(g)
            }
        })
    };
    jQuery.fn.alert.Constructor = b;
    jQuery.fn.alert.noConflict = function () {
        jQuery.fn.alert = a;
        return this
    };
    jQuery(document).on("click.alert.data-api", c, b.prototype.close)
}(window.jQuery);
! function (c) {
    var b = function (e, d) {
        this.$element = jQuery(e);
        this.options = jQuery.extend({}, jQuery.fn.button.defaults, d)
    };
    b.prototype.setState = function (g) {
        var i = "disabled",
            e = this.$element,
            f = e.data(),
            h = e.is("input") ? "val" : "html";
        g = g + "Text";
        f.resetText || e.data("resetText", e[h]());
        e[h](f[g] || this.options[g]);
        setTimeout(function () {
            g == "loadingText" ? e.addClass(i).attr(i, i) : e.removeClass(i).removeAttr(i)
        }, 0)
    };
    b.prototype.toggle = function () {
        var d = this.$element.closest('[data-toggle="buttons-radio"]');
        d && d.find(".active").removeClass("active");
        this.$element.toggleClass("active")
    };
    var a = jQuery.fn.button;
    jQuery.fn.button = function (d) {
        return this.each(function () {
            var g = jQuery(this),
                f = g.data("button"),
                e = typeof d == "object" && d;
            if (!f) {
                g.data("button", (f = new b(this, e)))
            }
            if (d == "toggle") {
                f.toggle()
            } else {
                if (d) {
                    f.setState(d)
                }
            }
        })
    };
    jQuery.fn.button.defaults = {
        loadingText: "loading..."
    };
    jQuery.fn.button.Constructor = b;
    jQuery.fn.button.noConflict = function () {
        jQuery.fn.button = a;
        return this
    };
    jQuery(document).on("click.button.data-api", "[data-toggle^=button]", function (f) {
        var d = jQuery(f.target);
        if (!d.hasClass("btn")) {
            d = d.closest(".btn")
        }
        d.button("toggle")
    })
}(window.jQuery);
! function (b) {
    var c = function (e, d) {
        this.$element = jQuery(e);
        this.options = jQuery.extend({}, jQuery.fn.collapse.defaults, d);
        if (this.options.parent) {
            this.$parent = jQuery(this.options.parent)
        }
        this.options.toggle && this.toggle()
    };
    c.prototype = {
        constructor: c,
        dimension: function () {
            var d = this.$element.hasClass("width");
            return d ? "width" : "height"
        },
        show: function () {
            var g, d, f, e;
            if (this.transitioning || this.$element.hasClass("in")) {
                return
            }
            g = this.dimension();
            d = jQuery.camelCase(["scroll", g].join("-"));
            f = this.$parent && this.$parent.find("> .accordion-group > .in");
            if (f && f.length) {
                e = f.data("collapse");
                if (e && e.transitioning) {
                    return
                }
                f.collapse("hide");
                e || f.data("collapse", null)
            }
            this.$element[g](0);
            this.transition("addClass", jQuery.Event("show"), "shown");
            jQuery.support.transition && this.$element[g](this.$element[0][d])
        },
        hide: function () {
            var d;
            if (this.transitioning || !this.$element.hasClass("in")) {
                return
            }
            d = this.dimension();
            this.reset(this.$element[d]());
            this.transition("removeClass", jQuery.Event("hide"), "hidden");
            this.$element[d](0)
        },
        reset: function (d) {
            var e = this.dimension();
            this.$element.removeClass("collapse")[e](d || "auto")[0].offsetWidth;
            this.$element[d !== null ? "addClass" : "removeClass"]("collapse");
            return this
        },
        transition: function (h, e, f) {
            var g = this,
                d = function () {
                    if (e.type == "show") {
                        g.reset()
                    }
                    g.transitioning = 0;
                    g.$element.trigger(f)
                };
            this.$element.trigger(e);
            if (e.isDefaultPrevented()) {
                return
            }
            this.transitioning = 1;
            this.$element[h]("in");
            jQuery.support.transition && this.$element.hasClass("collapse") ? this.$element.one(jQuery.support.transition.end, d) : d()
        },
        toggle: function () {
            this[this.$element.hasClass("in") ? "hide" : "show"]()
        }
    };
    var a = jQuery.fn.collapse;
    jQuery.fn.collapse = function (d) {
        return this.each(function () {
            var g = jQuery(this),
                f = g.data("collapse"),
                e = jQuery.extend({}, jQuery.fn.collapse.defaults, g.data(), typeof d == "object" && d);
            if (!f) {
                g.data("collapse", (f = new c(this, e)))
            }
            if (typeof d == "string") {
                f[d]()
            }
        })
    };
    jQuery.fn.collapse.defaults = {
        toggle: true
    };
    jQuery.fn.collapse.Constructor = c;
    jQuery.fn.collapse.noConflict = function () {
        jQuery.fn.collapse = a;
        return this
    };
    jQuery(document).on("click.collapse.data-api", "[data-toggle=collapse]", function (i) {
        var h = jQuery(this),
            d, g = h.attr("data-target") || i.preventDefault() || (d = h.attr("href")) && d.replace(/.*(?=#[^\s]+$)/, ""),
            f = jQuery(g).data("collapse") ? "toggle" : h.data();
        h[jQuery(g).hasClass("in") ? "addClass" : "removeClass"]("collapsed");
        jQuery(g).collapse(f)
    })
}(window.jQuery);
! function (b) {
    var c = function (e, d) {
        this.$element = jQuery(e);
        this.$indicators = this.$element.find(".carousel-indicators");
        this.options = d;
        this.options.pause == "hover" && this.$element.on("mouseenter", jQuery.proxy(this.pause, this)).on("mouseleave", jQuery.proxy(this.cycle, this))
    };
    c.prototype = {
        cycle: function (d) {
            if (!d) {
                this.paused = false
            }
            if (this.interval) {
                clearInterval(this.interval)
            }
            this.options.interval && !this.paused && (this.interval = setInterval(jQuery.proxy(this.next, this), this.options.interval));
            return this
        },
        getActiveIndex: function () {
            this.$active = this.$element.find(".item.active");
            this.$items = this.$active.parent().children();
            return this.$items.index(this.$active)
        },
        to: function (f) {
            var d = this.getActiveIndex(),
                e = this;
            if (f > (this.$items.length - 1) || f < 0) {
                return
            }
            if (this.sliding) {
                return this.$element.one("slid", function () {
                    e.to(f)
                })
            }
            if (d == f) {
                return this.pause().cycle()
            }
            return this.slide(f > d ? "next" : "prev", jQuery(this.$items[f]))
        },
        pause: function (d) {
            if (!d) {
                this.paused = true
            }
            if (this.$element.find(".next, .prev").length && jQuery.support.transition.end) {
                this.$element.trigger(jQuery.support.transition.end);
                this.cycle()
            }
            clearInterval(this.interval);
            this.interval = null;
            return this
        },
        next: function () {
            if (this.sliding) {
                return
            }
            return this.slide("next")
        },
        prev: function () {
            if (this.sliding) {
                return
            }
            return this.slide("prev")
        },
        slide: function (k, f) {
            var m = this.$element.find(".item.active"),
                d = f || m[k](),
                j = this.interval,
                l = k == "next" ? "left" : "right",
                g = k == "next" ? "first" : "last",
                h = this,
                i;
            this.sliding = true;
            j && this.pause();
            d = d.length ? d : this.$element.find(".item")[g]();
            i = jQuery.Event("slide", {
                relatedTarget: d[0],
                direction: l
            });
            if (d.hasClass("active")) {
                return
            }
            if (this.$indicators.length) {
                this.$indicators.find(".active").removeClass("active");
                this.$element.one("slid", function () {
                    var e = jQuery(h.$indicators.children()[h.getActiveIndex()]);
                    e && e.addClass("active")
                })
            }
            if (jQuery.support.transition && this.$element.hasClass("slide")) {
                this.$element.trigger(i);
                if (i.isDefaultPrevented()) {
                    return
                }
                d.addClass(k);
                d[0].offsetWidth;
                m.addClass(l);
                d.addClass(l);
                this.$element.one(jQuery.support.transition.end, function () {
                    d.removeClass([k, l].join(" ")).addClass("active");
                    m.removeClass(["active", l].join(" "));
                    h.sliding = false;
                    setTimeout(function () {
                        h.$element.trigger("slid")
                    }, 0)
                })
            } else {
                this.$element.trigger(i);
                if (i.isDefaultPrevented()) {
                    return
                }
                m.removeClass("active");
                d.addClass("active");
                this.sliding = false;
                this.$element.trigger("slid")
            }
            j && this.cycle();
            return this
        }
    };
    var a = jQuery.fn.carousel;
    jQuery.fn.carousel = function (d) {
        return this.each(function () {
            var h = jQuery(this),
                g = h.data("carousel"),
                e = jQuery.extend({}, jQuery.fn.carousel.defaults, typeof d == "object" && d),
                f = typeof d == "string" ? d : e.slide;
            if (!g) {
                h.data("carousel", (g = new c(this, e)))
            }
            if (typeof d == "number") {
                g.to(d)
            } else {
                if (f) {
                    g[f]()
                } else {
                    if (e.interval) {
                        g.pause().cycle()
                    }
                }
            }
        })
    };
    jQuery.fn.carousel.defaults = {
        interval: 5000,
        pause: "hover"
    };
    jQuery.fn.carousel.Constructor = c;
    jQuery.fn.carousel.noConflict = function () {
        jQuery.fn.carousel = a;
        return this
    };
    jQuery(document).on("click.carousel.data-api", "[data-slide], [data-slide-to]", function (j) {
        var i = jQuery(this),
            f, d = jQuery(i.attr("data-target") || (f = i.attr("href")) && f.replace(/.*(?=#[^\s]+$)/, "")),
            g = jQuery.extend({}, d.data(), i.data()),
            h;
        d.carousel(g);
        if (h = i.attr("data-slide-to")) {
            d.data("carousel").pause().to(h).cycle()
        }
        j.preventDefault()
    })
}(window.jQuery);
! function (b) {
    var c = function (e, d) {
        this.$element = jQuery(e);
        this.options = jQuery.extend({}, jQuery.fn.typeahead.defaults, d);
        this.matcher = this.options.matcher || this.matcher;
        this.sorter = this.options.sorter || this.sorter;
        this.highlighter = this.options.highlighter || this.highlighter;
        this.updater = this.options.updater || this.updater;
        this.source = this.options.source;
        this.$menu = jQuery(this.options.menu);
        this.shown = false;
        this.listen()
    };
    c.prototype = {
        constructor: c,
        select: function () {
            var d = this.$menu.find(".active").attr("data-value");
            this.$element.val(this.updater(d)).change();
            return this.hide()
        },
        updater: function (d) {
            return d
        },
        show: function () {
            var d = jQuery.extend({}, this.$element.position(), {
                height: this.$element[0].offsetHeight
            });
            this.$menu.insertAfter(this.$element).css({
                top: d.top + d.height,
                left: d.left
            }).show();
            this.shown = true;
            return this
        },
        hide: function () {
            this.$menu.hide();
            this.shown = false;
            return this
        },
        lookup: function (e) {
            var d;
            this.query = this.$element.val();
            if (!this.query || this.query.length < this.options.minLength) {
                return this.shown ? this.hide() : this
            }
            d = jQuery.isFunction(this.source) ? this.source(this.query, jQuery.proxy(this.process, this)) : this.source;
            return d ? this.process(d) : this
        },
        process: function (d) {
            var e = this;
            d = jQuery.grep(d, function (f) {
                return e.matcher(f)
            });
            d = this.sorter(d);
            if (!d.length) {
                return this.shown ? this.hide() : this
            }
            return this.render(d.slice(0, this.options.items)).show()
        },
        matcher: function (d) {
            return ~d.toLowerCase().indexOf(this.query.toLowerCase())
        },
        sorter: function (f) {
            var g = [],
                e = [],
                d = [],
                h;
            while (h = f.shift()) {
                if (!h.toLowerCase().indexOf(this.query.toLowerCase())) {
                    g.push(h)
                } else {
                    if (~h.indexOf(this.query)) {
                        e.push(h)
                    } else {
                        d.push(h)
                    }
                }
            }
            return g.concat(e, d)
        },
        highlighter: function (d) {
            var e = this.query.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
            return d.replace(new RegExp("(" + e + ")", "ig"), function (f, g) {
                return "<strong>" + g + "</strong>"
            })
        },
        render: function (d) {
            var e = this;
            d = jQuery(d).map(function (f, g) {
                f = jQuery(e.options.item).attr("data-value", g);
                f.find("a").html(e.highlighter(g));
                return f[0]
            });
            d.first().addClass("active");
            this.$menu.html(d);
            return this
        },
        next: function (e) {
            var f = this.$menu.find(".active").removeClass("active"),
                d = f.next();
            if (!d.length) {
                d = jQuery(this.$menu.find("li")[0])
            }
            d.addClass("active")
        },
        prev: function (e) {
            var f = this.$menu.find(".active").removeClass("active"),
                d = f.prev();
            if (!d.length) {
                d = this.$menu.find("li").last()
            }
            d.addClass("active")
        },
        listen: function () {
            this.$element.on("focus", jQuery.proxy(this.focus, this)).on("blur", jQuery.proxy(this.blur, this)).on("keypress", jQuery.proxy(this.keypress, this)).on("keyup", jQuery.proxy(this.keyup, this));
            if (this.eventSupported("keydown")) {
                this.$element.on("keydown", jQuery.proxy(this.keydown, this))
            }
            this.$menu.on("click", jQuery.proxy(this.click, this)).on("mouseenter", "li", jQuery.proxy(this.mouseenter, this)).on("mouseleave", "li", jQuery.proxy(this.mouseleave, this))
        },
        eventSupported: function (d) {
            var e = d in this.$element;
            if (!e) {
                this.$element.setAttribute(d, "return;");
                e = typeof this.$element[d] === "function"
            }
            return e
        },
        move: function (d) {
            if (!this.shown) {
                return
            }
            switch (d.keyCode) {
                case 9:
                case 13:
                case 27:
                    d.preventDefault();
                    break;
                case 38:
                    d.preventDefault();
                    this.prev();
                    break;
                case 40:
                    d.preventDefault();
                    this.next();
                    break
            }
            d.stopPropagation()
        },
        keydown: function (d) {
            this.suppressKeyPressRepeat = ~jQuery.inArray(d.keyCode, [40, 38, 9, 13, 27]);
            this.move(d)
        },
        keypress: function (d) {
            if (this.suppressKeyPressRepeat) {
                return
            }
            this.move(d)
        },
        keyup: function (d) {
            switch (d.keyCode) {
                case 40:
                case 38:
                case 16:
                case 17:
                case 18:
                    break;
                case 9:
                case 13:
                    if (!this.shown) {
                        return
                    }
                    this.select();
                    break;
                case 27:
                    if (!this.shown) {
                        return
                    }
                    this.hide();
                    break;
                default:
                    this.lookup()
            }
            d.stopPropagation();
            d.preventDefault()
        },
        focus: function (d) {
            this.focused = true
        },
        blur: function (d) {
            this.focused = false;
            if (!this.mousedover && this.shown) {
                this.hide()
            }
        },
        click: function (d) {
            d.stopPropagation();
            d.preventDefault();
            this.select();
            this.$element.focus()
        },
        mouseenter: function (d) {
            this.mousedover = true;
            this.$menu.find(".active").removeClass("active");
            jQuery(d.currentTarget).addClass("active")
        },
        mouseleave: function (d) {
            this.mousedover = false;
            if (!this.focused && this.shown) {
                this.hide()
            }
        }
    };
    var a = jQuery.fn.typeahead;
    jQuery.fn.typeahead = function (d) {
        return this.each(function () {
            var g = jQuery(this),
                f = g.data("typeahead"),
                e = typeof d == "object" && d;
            if (!f) {
                g.data("typeahead", (f = new c(this, e)))
            }
            if (typeof d == "string") {
                f[d]()
            }
        })
    };
    jQuery.fn.typeahead.defaults = {
        source: [],
        items: 8,
        menu: '<ul class="typeahead dropdown-menu"></ul>',
        item: '<li><a href="#"></a></li>',
        minLength: 1
    };
    jQuery.fn.typeahead.Constructor = c;
    jQuery.fn.typeahead.noConflict = function () {
        jQuery.fn.typeahead = a;
        return this
    };
    jQuery(document).on("focus.typeahead.data-api", '[data-provide="typeahead"]', function (f) {
        var d = jQuery(this);
        if (d.data("typeahead")) {
            return
        }
        d.typeahead(d.data())
    })
}(window.jQuery);
(function (a, b) {
    if (typeof exports === "object" && exports) {
        b(exports)
    } else {
        var c = {};
        b(c);
        if (typeof define === "function" && define.amd) {
            define(c)
        } else {
            a.Mustache = c
        }
    }
}(this, function (a) {
    var e = /\s*/;
    var l = /\s+/;
    var j = /\S/;
    var h = /\s*=/;
    var o = /\s*\}/;
    var u = /#|\^|\/|>|\{|&|=|!/;
    var f = RegExp.prototype.test;

    function t(A, z) {
        return f.call(A, z)
    }

    function g(z) {
        return !t(j, z)
    }
    var w = Object.prototype.toString;
    var k = Array.isArray || function (z) {
        return w.call(z) === "[object Array]"
    };

    function d(z) {
        return z.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&")
    }
    var c = {
        "&": "&amp;",
        "<": "&lt;",
        ">": "&gt;",
        '"': "&quot;",
        "'": "&#39;",
        "/": "&#x2F;"
    };

    function m(z) {
        return String(z).replace(/[&<>"'\/]/g, function (A) {
            return c[A]
        })
    }

    function v(z) {
        this.string = z;
        this.tail = z;
        this.pos = 0
    }
    v.prototype.eos = function () {
        return this.tail === ""
    };
    v.prototype.scan = function (A) {
        var z = this.tail.match(A);
        if (z && z.index === 0) {
            this.tail = this.tail.substring(z[0].length);
            this.pos += z[0].length;
            return z[0]
        }
        return ""
    };
    v.prototype.scanUntil = function (A) {
        var z, B = this.tail.search(A);
        switch (B) {
            case -1:
                z = this.tail;
                this.pos += this.tail.length;
                this.tail = "";
                break;
            case 0:
                z = "";
                break;
            default:
                z = this.tail.substring(0, B);
                this.tail = this.tail.substring(B);
                this.pos += B
        }
        return z
    };

    function s(z, A) {
        this.view = z || {};
        this.parent = A;
        this._cache = {}
    }
    s.make = function (z) {
        return (z instanceof s) ? z : new s(z)
    };
    s.prototype.push = function (z) {
        return new s(z, this)
    };
    s.prototype.lookup = function (z) {
        var C = this._cache[z];
        if (!C) {
            if (z == ".") {
                C = this.view
            } else {
                var B = this;
                while (B) {
                    if (z.indexOf(".") > 0) {
                        C = B.view;
                        var D = z.split("."),
                            A = 0;
                        while (C && A < D.length) {
                            C = C[D[A++]]
                        }
                    } else {
                        C = B.view[z]
                    } if (C != null) {
                        break
                    }
                    B = B.parent
                }
            }
            this._cache[z] = C
        }
        if (typeof C === "function") {
            C = C.call(this.view)
        }
        return C
    };

    function q() {
        this.clearCache()
    }
    q.prototype.clearCache = function () {
        this._cache = {};
        this._partialCache = {}
    };
    q.prototype.compile = function (B, z) {
        var A = this._cache[B];
        if (!A) {
            var C = a.parse(B, z);
            A = this._cache[B] = this.compileTokens(C, B)
        }
        return A
    };
    q.prototype.compilePartial = function (A, C, z) {
        var B = this.compile(C, z);
        this._partialCache[A] = B;
        return B
    };
    q.prototype.getPartial = function (z) {
        if (!(z in this._partialCache) && this._loadPartial) {
            this.compilePartial(z, this._loadPartial(z))
        }
        return this._partialCache[z]
    };
    q.prototype.compileTokens = function (B, A) {
        var z = this;
        return function (C, E) {
            if (E) {
                if (typeof E === "function") {
                    z._loadPartial = E
                } else {
                    for (var D in E) {
                        z.compilePartial(D, E[D])
                    }
                }
            }
            return p(B, z, s.make(C), A)
        }
    };
    q.prototype.render = function (B, z, A) {
        return this.compile(B)(z, A)
    };

    function p(G, A, z, J) {
        var D = "";
        var B, H, I;
        for (var E = 0, F = G.length; E < F; ++E) {
            B = G[E];
            H = B[1];
            switch (B[0]) {
                case "#":
                    I = z.lookup(H);
                    if (typeof I === "object") {
                        if (k(I)) {
                            for (var C = 0, L = I.length; C < L; ++C) {
                                D += p(B[4], A, z.push(I[C]), J)
                            }
                        } else {
                            if (I) {
                                D += p(B[4], A, z.push(I), J)
                            }
                        }
                    } else {
                        if (typeof I === "function") {
                            var K = J == null ? null : J.slice(B[3], B[5]);
                            I = I.call(z.view, K, function (M) {
                                return A.render(M, z)
                            });
                            if (I != null) {
                                D += I
                            }
                        } else {
                            if (I) {
                                D += p(B[4], A, z, J)
                            }
                        }
                    }
                    break;
                case "^":
                    I = z.lookup(H);
                    if (!I || (k(I) && I.length === 0)) {
                        D += p(B[4], A, z, J)
                    }
                    break;
                case ">":
                    I = A.getPartial(H);
                    if (typeof I === "function") {
                        D += I(z)
                    }
                    break;
                case "&":
                    I = z.lookup(H);
                    if (I != null) {
                        D += I
                    }
                    break;
                case "name":
                    I = z.lookup(H);
                    if (I != null) {
                        D += a.escape(I)
                    }
                    break;
                case "text":
                    D += H;
                    break
            }
        }
        return D
    }

    function y(F) {
        var A = [];
        var E = A;
        var G = [];
        var C;
        for (var B = 0, z = F.length; B < z; ++B) {
            C = F[B];
            switch (C[0]) {
                case "#":
                case "^":
                    G.push(C);
                    E.push(C);
                    E = C[4] = [];
                    break;
                case "/":
                    var D = G.pop();
                    D[5] = C[2];
                    E = G.length > 0 ? G[G.length - 1][4] : A;
                    break;
                default:
                    E.push(C)
            }
        }
        return A
    }

    function b(E) {
        var B = [];
        var D, A;
        for (var C = 0, z = E.length; C < z; ++C) {
            D = E[C];
            if (D) {
                if (D[0] === "text" && A && A[0] === "text") {
                    A[1] += D[1];
                    A[3] = D[3]
                } else {
                    A = D;
                    B.push(D)
                }
            }
        }
        return B
    }

    function r(z) {
        return [new RegExp(d(z[0]) + "\\s*"), new RegExp("\\s*" + d(z[1]))]
    }

    function x(P, F) {
        P = P || "";
        F = F || a.tags;
        if (typeof F === "string") {
            F = F.split(l)
        }
        if (F.length !== 2) {
            throw new Error("Invalid tags: " + F.join(", "))
        }
        var J = r(F);
        var B = new v(P);
        var H = [];
        var G = [];
        var E = [];
        var Q = false;
        var O = false;

        function N() {
            if (Q && !O) {
                while (E.length) {
                    delete G[E.pop()]
                }
            } else {
                E = []
            }
            Q = false;
            O = false
        }
        var C, A, I, K, D;
        while (!B.eos()) {
            C = B.pos;
            I = B.scanUntil(J[0]);
            if (I) {
                for (var L = 0, M = I.length; L < M; ++L) {
                    K = I.charAt(L);
                    if (g(K)) {
                        E.push(G.length)
                    } else {
                        O = true
                    }
                    G.push(["text", K, C, C + 1]);
                    C += 1;
                    if (K == "\n") {
                        N()
                    }
                }
            }
            if (!B.scan(J[0])) {
                break
            }
            Q = true;
            A = B.scan(u) || "name";
            B.scan(e);
            if (A === "=") {
                I = B.scanUntil(h);
                B.scan(h);
                B.scanUntil(J[1])
            } else {
                if (A === "{") {
                    I = B.scanUntil(new RegExp("\\s*" + d("}" + F[1])));
                    B.scan(o);
                    B.scanUntil(J[1]);
                    A = "&"
                } else {
                    I = B.scanUntil(J[1])
                }
            } if (!B.scan(J[1])) {
                throw new Error("Unclosed tag at " + B.pos)
            }
            D = [A, I, C, B.pos];
            G.push(D);
            if (A === "#" || A === "^") {
                H.push(D)
            } else {
                if (A === "/") {
                    if (H.length === 0) {
                        throw new Error('Unopened section "' + I + '" at ' + C)
                    }
                    var z = H.pop();
                    if (z[1] !== I) {
                        throw new Error('Unclosed section "' + z[1] + '" at ' + C)
                    }
                } else {
                    if (A === "name" || A === "{" || A === "&") {
                        O = true
                    } else {
                        if (A === "=") {
                            F = I.split(l);
                            if (F.length !== 2) {
                                throw new Error("Invalid tags at " + C + ": " + F.join(", "))
                            }
                            J = r(F)
                        }
                    }
                }
            }
        }
        var z = H.pop();
        if (z) {
            throw new Error('Unclosed section "' + z[1] + '" at ' + B.pos)
        }
        G = b(G);
        return y(G)
    }
    a.name = "mustache.js";
    a.version = "0.7.2";
    a.tags = ["{{", "}}"];
    a.Scanner = v;
    a.Context = s;
    a.Writer = q;
    a.parse = x;
    a.escape = m;
    var i = new q();
    a.clearCache = function () {
        return i.clearCache()
    };
    a.compile = function (A, z) {
        return i.compile(A, z)
    };
    a.compilePartial = function (A, B, z) {
        return i.compilePartial(A, B, z)
    };
    a.compileTokens = function (A, z) {
        return i.compileTokens(A, z)
    };
    a.render = function (B, z, A) {
        return i.render(B, z, A)
    };
    a.to_html = function (C, A, B, D) {
        var z = a.render(C, A, B);
        if (typeof D === "function") {
            D(z)
        } else {
            return z
        }
    }
}));
(function (b, f) {
    function h() {
        if (!a.READY) {
            a.event.determineEventTypes();
            for (var e in a.gestures) {
                a.gestures.hasOwnProperty(e) && a.detection.register(a.gestures[e])
            }
            a.event.onTouch(a.DOCUMENT, a.EVENT_MOVE, a.detection.detect), a.event.onTouch(a.DOCUMENT, a.EVENT_END, a.detection.detect), a.READY = !0
        }
    }
    var a = function (i, j) {
        return new a.Instance(i, j || {})
    };
    a.defaults = {
        stop_browser_behavior: {
            userSelect: "none",
            touchAction: "none",
            touchCallout: "none",
            contentZooming: "none",
            userDrag: "none",
            tapHighlightColor: "rgba(0,0,0,0)"
        }
    }, a.HAS_POINTEREVENTS = navigator.pointerEnabled || navigator.msPointerEnabled, a.HAS_TOUCHEVENTS = "ontouchstart" in b, a.MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i, a.NO_MOUSEEVENTS = a.HAS_TOUCHEVENTS && navigator.userAgent.match(a.MOBILE_REGEX), a.EVENT_TYPES = {}, a.DIRECTION_DOWN = "down", a.DIRECTION_LEFT = "left", a.DIRECTION_UP = "up", a.DIRECTION_RIGHT = "right", a.POINTER_MOUSE = "mouse", a.POINTER_TOUCH = "touch", a.POINTER_PEN = "pen", a.EVENT_START = "start", a.EVENT_MOVE = "move", a.EVENT_END = "end", a.DOCUMENT = document, a.plugins = {}, a.READY = !1, a.Instance = function (i, k) {
        var j = this;
        return h(), this.element = i, this.enabled = !0, this.options = a.utils.extend(a.utils.extend({}, a.defaults), k || {}), this.options.stop_browser_behavior && a.utils.stopDefaultBrowserBehavior(this.element, this.options.stop_browser_behavior), a.event.onTouch(i, a.EVENT_START, function (e) {
            j.enabled && a.detection.startDetect(j, e)
        }), this
    }, a.Instance.prototype = {
        on: function (k, l) {
            for (var m = k.split(" "), j = 0; m.length > j; j++) {
                this.element.addEventListener(m[j], l, !1)
            }
            return this
        },
        off: function (k, l) {
            for (var m = k.split(" "), j = 0; m.length > j; j++) {
                this.element.removeEventListener(m[j], l, !1)
            }
            return this
        },
        trigger: function (i, k) {
            var l = a.DOCUMENT.createEvent("Event");
            l.initEvent(i, !0, !0), l.gesture = k;
            var j = this.element;
            return a.utils.hasParent(k.target, j) && (j = k.target), j.dispatchEvent(l), this
        },
        enable: function (e) {
            return this.enabled = e, this
        }
    };
    var d = null,
        g = !1,
        c = !1;
    a.event = {
        bindDom: function (k, m, o) {
            for (var j = m.split(" "), l = 0; j.length > l; l++) {
                k.addEventListener(j[l], o, !1)
            }
        },
        onTouch: function (j, k, l) {
            var i = this;
            this.bindDom(j, a.EVENT_TYPES[k], function (o) {
                var e = o.type.toLowerCase();
                if (!e.match(/mouse/) || !c) {
                    (e.match(/touch/) || e.match(/pointerdown/) || e.match(/mouse/) && 1 === o.which) && (g = !0), e.match(/touch|pointer/) && (c = !0);
                    var m = 0;
                    g && (a.HAS_POINTEREVENTS && k != a.EVENT_END ? m = a.PointerEvent.updatePointer(k, o) : e.match(/touch/) ? m = o.touches.length : c || (m = e.match(/up/) ? 0 : 1), m > 0 && k == a.EVENT_END ? k = a.EVENT_MOVE : m || (k = a.EVENT_END), m || null === d ? d = o : o = d, l.call(a.detection, i.collectEventData(j, k, o)), a.HAS_POINTEREVENTS && k == a.EVENT_END && (m = a.PointerEvent.updatePointer(k, o))), m || (d = null, g = !1, c = !1, a.PointerEvent.reset())
                }
            })
        },
        determineEventTypes: function () {
            var e;
            e = a.HAS_POINTEREVENTS ? a.PointerEvent.getEvents() : a.NO_MOUSEEVENTS ? ["touchstart", "touchmove", "touchend touchcancel"] : ["touchstart mousedown", "touchmove mousemove", "touchend touchcancel mouseup"], a.EVENT_TYPES[a.EVENT_START] = e[0], a.EVENT_TYPES[a.EVENT_MOVE] = e[1], a.EVENT_TYPES[a.EVENT_END] = e[2]
        },
        getTouchList: function (e) {
            return a.HAS_POINTEREVENTS ? a.PointerEvent.getTouchList() : e.touches ? e.touches : [{
                identifier: 1,
                pageX: e.pageX,
                pageY: e.pageY,
                target: e.target
            }]
        },
        collectEventData: function (i, k, m) {
            var j = this.getTouchList(m, k),
                l = a.POINTER_TOUCH;
            return (m.type.match(/mouse/) || a.PointerEvent.matchType(a.POINTER_MOUSE, m)) && (l = a.POINTER_MOUSE), {
                center: a.utils.getCenter(j),
                timeStamp: (new Date).getTime(),
                target: m.target,
                touches: j,
                eventType: k,
                pointerType: l,
                srcEvent: m,
                preventDefault: function () {
                    this.srcEvent.preventManipulation && this.srcEvent.preventManipulation(), this.srcEvent.preventDefault && this.srcEvent.preventDefault()
                },
                stopPropagation: function () {
                    this.srcEvent.stopPropagation()
                },
                stopDetect: function () {
                    return a.detection.stopDetect()
                }
            }
        }
    }, a.PointerEvent = {
        pointers: {},
        getTouchList: function () {
            var i = this,
                j = [];
            return Object.keys(i.pointers).sort().forEach(function (e) {
                j.push(i.pointers[e])
            }), j
        },
        updatePointer: function (i, j) {
            return i == a.EVENT_END ? this.pointers = {} : (j.identifier = j.pointerId, this.pointers[j.pointerId] = j), Object.keys(this.pointers).length
        },
        matchType: function (i, j) {
            if (!j.pointerType) {
                return !1
            }
            var k = {};
            return k[a.POINTER_MOUSE] = j.pointerType == j.MSPOINTER_TYPE_MOUSE || j.pointerType == a.POINTER_MOUSE, k[a.POINTER_TOUCH] = j.pointerType == j.MSPOINTER_TYPE_TOUCH || j.pointerType == a.POINTER_TOUCH, k[a.POINTER_PEN] = j.pointerType == j.MSPOINTER_TYPE_PEN || j.pointerType == a.POINTER_PEN, k[i]
        },
        getEvents: function () {
            return ["pointerdown MSPointerDown", "pointermove MSPointerMove", "pointerup pointercancel MSPointerUp MSPointerCancel"]
        },
        reset: function () {
            this.pointers = {}
        }
    }, a.utils = {
        extend: function (j, l, e) {
            for (var k in l) {
                j[k] !== f && e || (j[k] = l[k])
            }
            return j
        },
        hasParent: function (i, j) {
            for (; i;) {
                if (i == j) {
                    return !0
                }
                i = i.parentNode
            }
            return !1
        },
        getCenter: function (k) {
            for (var m = [], o = [], j = 0, l = k.length; l > j; j++) {
                m.push(k[j].pageX), o.push(k[j].pageY)
            }
            return {
                pageX: (Math.min.apply(Math, m) + Math.max.apply(Math, m)) / 2,
                pageY: (Math.min.apply(Math, o) + Math.max.apply(Math, o)) / 2
            }
        },
        getVelocity: function (i, j, k) {
            return {
                x: Math.abs(j / i) || 0,
                y: Math.abs(k / i) || 0
            }
        },
        _kw71: function (k, l) {
            var m = l.pageY - k.pageY,
                j = l.pageX - k.pageX;
            return 180 * Math.atan2(m, j) / Math.PI
        },
        getDirection: function (i, k) {
            var l = Math.abs(i.pageX - k.pageX),
                j = Math.abs(i.pageY - k.pageY);
            return l >= j ? i.pageX - k.pageX > 0 ? a.DIRECTION_LEFT : a.DIRECTION_RIGHT : i.pageY - k.pageY > 0 ? a.DIRECTION_UP : a.DIRECTION_DOWN
        },
        getDistance: function (k, l) {
            var m = l.pageX - k.pageX,
                j = l.pageY - k.pageY;
            return Math.sqrt(m * m + j * j)
        },
        getScale: function (i, j) {
            return i.length >= 2 && j.length >= 2 ? this.getDistance(j[0], j[1]) / this.getDistance(i[0], i[1]) : 1
        },
        getRotation: function (i, j) {
            return i.length >= 2 && j.length >= 2 ? this._kw71(j[1], j[0]) - this._kw71(i[1], i[0]) : 0
        },
        isVertical: function (e) {
            return e == a.DIRECTION_UP || e == a.DIRECTION_DOWN
        },
        stopDefaultBrowserBehavior: function (k, m) {
            var q, j = ["webkit", "khtml", "moz", "ms", "o", ""];
            if (m && k.style) {
                for (var l = 0; j.length > l; l++) {
                    for (var p in m) {
                        m.hasOwnProperty(p) && (q = p, j[l] && (q = j[l] + q.substring(0, 1).toUpperCase() + q.substring(1)), k.style[q] = m[p])
                    }
                }
                "none" == m.userSelect && (k.onselectstart = function () {
                    return !1
                })
            }
        }
    }, a.detection = {
        gestures: [],
        current: null,
        previous: null,
        stopped: !1,
        startDetect: function (i, j) {
            this.current || (this.stopped = !1, this.current = {
                inst: i,
                startEvent: a.utils.extend({}, j),
                lastEvent: !1,
                name: ""
            }, this.detect(j))
        },
        detect: function (i) {
            if (this.current && !this.stopped) {
                i = this.extendEventData(i);
                for (var k = this.current.inst.options, m = 0, j = this.gestures.length; j > m; m++) {
                    var l = this.gestures[m];
                    if (!this.stopped && k[l.name] !== !1 && l.handler.call(l, i, this.current.inst) === !1) {
                        this.stopDetect();
                        break
                    }
                }
                return this.current && (this.current.lastEvent = i), i.eventType == a.EVENT_END && !i.touches.length - 1 && this.stopDetect(), i
            }
        },
        stopDetect: function () {
            this.previous = a.utils.extend({}, this.current), this.current = null, this.stopped = !0
        },
        extendEventData: function (j) {
            var m = this.current.startEvent;
            if (m && (j.touches.length != m.touches.length || j.touches === m.touches)) {
                m.touches = [];
                for (var u = 0, l = j.touches.length; l > u; u++) {
                    m.touches.push(a.utils.extend({}, j.touches[u]))
                }
            }
            var p = j.timeStamp - m.timeStamp,
                k = j.center.pageX - m.center.pageX,
                i = j.center.pageY - m.center.pageY,
                q = a.utils.getVelocity(p, k, i);
            return a.utils.extend(j, {
                deltaTime: p,
                deltaX: k,
                deltaY: i,
                velocityX: q.x,
                velocityY: q.y,
                distance: a.utils.getDistance(m.center, j.center),
                angle: a.utils._kw71(m.center, j.center),
                direction: a.utils.getDirection(m.center, j.center),
                scale: a.utils.getScale(m.touches, j.touches),
                rotation: a.utils.getRotation(m.touches, j.touches),
                startEvent: m
            }), j
        },
        register: function (e) {
            var i = e.defaults || {};
            return i[e.name] === f && (i[e.name] = !0), a.utils.extend(a.defaults, i, !0), e.index = e.index || 1000, this.gestures.push(e), this.gestures.sort(function (j, k) {
                return j.index < k.index ? -1 : j.index > k.index ? 1 : 0
            }), this.gestures
        }
    }, a.gestures = a.gestures || {}, a.gestures.Hold = {
        name: "hold",
        index: 10,
        defaults: {
            hold_timeout: 500,
            hold_threshold: 1
        },
        timer: null,
        handler: function (i, j) {
            switch (i.eventType) {
                case a.EVENT_START:
                    clearTimeout(this.timer), a.detection.current.name = this.name, this.timer = setTimeout(function () {
                        "hold" == a.detection.current.name && j.trigger("hold", i)
                    }, j.options.hold_timeout);
                    break;
                case a.EVENT_MOVE:
                    i.distance > j.options.hold_threshold && clearTimeout(this.timer);
                    break;
                case a.EVENT_END:
                    clearTimeout(this.timer)
            }
        }
    }, a.gestures.Tap = {
        name: "tap",
        index: 100,
        defaults: {
            tap_max_touchtime: 250,
            tap_max_distance: 10,
            tap_always: !0,
            doubletap_distance: 20,
            doubletap_interval: 300
        },
        handler: function (i, k) {
            if (i.eventType == a.EVENT_END) {
                var l = a.detection.previous,
                    j = !1;
                if (i.deltaTime > k.options.tap_max_touchtime || i.distance > k.options.tap_max_distance) {
                    return
                }
                l && "tap" == l.name && i.timeStamp - l.lastEvent.timeStamp < k.options.doubletap_interval && i.distance < k.options.doubletap_distance && (k.trigger("doubletap", i), j = !0), (!j || k.options.tap_always) && (a.detection.current.name = "tap", k.trigger(a.detection.current.name, i))
            }
        }
    }, a.gestures.Swipe = {
        name: "swipe",
        index: 40,
        defaults: {
            swipe_max_touches: 1,
            swipe_velocity: 0.7
        },
        handler: function (i, j) {
            if (i.eventType == a.EVENT_END) {
                if (j.options.swipe_max_touches > 0 && i.touches.length > j.options.swipe_max_touches) {
                    return
                } (i.velocityX > j.options.swipe_velocity || i.velocityY > j.options.swipe_velocity) && (j.trigger(this.name, i), j.trigger(this.name + i.direction, i))
            }
        }
    }, a.gestures.Drag = {
        name: "drag",
        index: 50,
        defaults: {
            drag_min_distance: 10,
            drag_max_touches: 1,
            drag_block_horizontal: !1,
            drag_block_vertical: !1,
            drag_lock_to_axis: !1,
            drag_lock_min_distance: 25
        },
        triggered: !1,
        handler: function (e, j) {
            if (a.detection.current.name != this.name && this.triggered) {
                return j.trigger(this.name + "end", e), this.triggered = !1, f
            }
            if (!(j.options.drag_max_touches > 0 && e.touches.length > j.options.drag_max_touches)) {
                switch (e.eventType) {
                    case a.EVENT_START:
                        this.triggered = !1;
                        break;
                    case a.EVENT_MOVE:
                        if (e.distance < j.options.drag_min_distance && a.detection.current.name != this.name) {
                            return
                        }
                        a.detection.current.name = this.name, (a.detection.current.lastEvent.drag_locked_to_axis || j.options.drag_lock_to_axis && j.options.drag_lock_min_distance <= e.distance) && (e.drag_locked_to_axis = !0);
                        var i = a.detection.current.lastEvent.direction;
                        e.drag_locked_to_axis && i !== e.direction && (e.direction = a.utils.isVertical(i) ? 0 > e.deltaY ? a.DIRECTION_UP : a.DIRECTION_DOWN : 0 > e.deltaX ? a.DIRECTION_LEFT : a.DIRECTION_RIGHT), this.triggered || (j.trigger(this.name + "start", e), this.triggered = !0), j.trigger(this.name, e), j.trigger(this.name + e.direction, e), (j.options.drag_block_vertical && a.utils.isVertical(e.direction) || j.options.drag_block_horizontal && !a.utils.isVertical(e.direction)) && e.preventDefault();
                        break;
                    case a.EVENT_END:
                        this.triggered && j.trigger(this.name + "end", e), this.triggered = !1
                }
            }
        }
    }, a.gestures.Transform = {
        name: "transform",
        index: 45,
        defaults: {
            transform_min_scale: 0.01,
            transform_min_rotation: 1,
            transform_always_block: !1
        },
        triggered: !1,
        handler: function (e, k) {
            if (a.detection.current.name != this.name && this.triggered) {
                return k.trigger(this.name + "end", e), this.triggered = !1, f
            }
            if (!(2 > e.touches.length)) {
                switch (k.options.transform_always_block && e.preventDefault(), e.eventType) {
                    case a.EVENT_START:
                        this.triggered = !1;
                        break;
                    case a.EVENT_MOVE:
                        var i = Math.abs(1 - e.scale),
                            j = Math.abs(e.rotation);
                        if (k.options.transform_min_scale > i && k.options.transform_min_rotation > j) {
                            return
                        }
                        a.detection.current.name = this.name, this.triggered || (k.trigger(this.name + "start", e), this.triggered = !0), k.trigger(this.name, e), j > k.options.transform_min_rotation && k.trigger("rotate", e), i > k.options.transform_min_scale && (k.trigger("pinch", e), k.trigger("pinch" + (1 > e.scale ? "in" : "out"), e));
                        break;
                    case a.EVENT_END:
                        this.triggered && k.trigger(this.name + "end", e), this.triggered = !1
                }
            }
        }
    }, a.gestures.Touch = {
        name: "touch",
        index: -1 / 0,
        defaults: {
            prevent_default: !1,
            prevent_mouseevents: !1
        },
        handler: function (e, i) {
            return i.options.prevent_mouseevents && e.pointerType == a.POINTER_MOUSE ? (e.stopDetect(), f) : (i.options.prevent_default && e.preventDefault(), e.eventType == a.EVENT_START && i.trigger(this.name, e), f)
        }
    }, a.gestures.Release = {
        name: "release",
        index: 1 / 0,
        handler: function (i, j) {
            i.eventType == a.EVENT_END && j.trigger(this.name, i)
        }
    }, "object" == typeof module && "object" == typeof module.exports ? module.exports = a : (b.Hammer = a, "function" == typeof b.define && b.define.amd && b.define("hammer", [], function () {
        return a
    }))
})(this),
    function (a, b) {
        a !== b && (Hammer.event.bindDom = function (e, c, d) {
            a(e).on(c, function (f) {
                var g = f.originalEvent || f;
                g.pageX === b && (g.pageX = f.pageX, g.pageY = f.pageY), g.target || (g.target = f.target), g.which === b && (g.which = g.button), g.preventDefault || (g.preventDefault = f.preventDefault), g.stopPropagation || (g.stopPropagation = f.stopPropagation), d.call(this, g)
            })
        }, Hammer.Instance.prototype.on = function (c, d) {
            return a(this.element).on(c, d)
        }, Hammer.Instance.prototype.off = function (c, d) {
            return a(this.element).off(c, d)
        }, Hammer.Instance.prototype.trigger = function (d, f) {
            var c = a(this.element);
            return c.has(f.target).length && (c = a(f.target)), c.trigger({
                type: d,
                gesture: f
            })
        }, a.fn.hammer = function (c) {
            return this.each(function () {
                var e = a(this),
                    d = e.data("hammer");
                d ? d && c && Hammer.utils.extend(d.options, c) : e.data("hammer", new Hammer(this, c || {}))
            })
        })
    }(window.jQuery || window.Zepto);
(function (a) {
    if (typeof define === "function" && define.amd) {
        define(["jquery"], a)
    } else {
        if (typeof exports === "object") {
            module.exports = a
        } else {
            a(jQuery)
        }
    }
}(function (e) {
    var d = ["wheel", "mousewheel", "DOMMouseScroll", "MozMousePixelScroll"];
    var g = "onwheel" in document || document.documentMode >= 9 ? ["wheel"] : ["mousewheel", "DomMouseScroll", "MozMousePixelScroll"];
    var f, a;
    if (jQuery.event.fixHooks) {
        for (var b = d.length; b;) {
            jQuery.event.fixHooks[d[--b]] = jQuery.event.mouseHooks
        }
    }
    jQuery.event.special.mousewheel = {
        setup: function () {
            if (this.addEventListener) {
                for (var h = g.length; h;) {
                    this.addEventListener(g[--h], c, false)
                }
            } else {
                this.onmousewheel = c
            }
        },
        teardown: function () {
            if (this.removeEventListener) {
                for (var h = g.length; h;) {
                    this.removeEventListener(g[--h], c, false)
                }
            } else {
                this.onmousewheel = null
            }
        }
    };
    jQuery.fn.extend({
        mousewheel: function (h) {
            return h ? this.bind("mousewheel", h) : this.trigger("mousewheel")
        },
        unmousewheel: function (h) {
            return this.unbind("mousewheel", h)
        }
    });

    function c(h) {
        var i = h || window.event,
            o = [].slice.call(arguments, 1),
            q = 0,
            k = 0,
            j = 0,
            m = 0,
            l = 0,
            p;
        h = jQuery.event.fix(i);
        h.type = "mousewheel";
        if (i.wheelDelta) {
            q = i.wheelDelta
        }
        if (i.detail) {
            q = i.detail * -1
        }
        if (i.deltaY) {
            j = i.deltaY * -1;
            q = j
        }
        if (i.deltaX) {
            k = i.deltaX;
            q = k * -1
        }
        if (i.wheelDeltaY !== undefined) {
            j = i.wheelDeltaY
        }
        if (i.wheelDeltaX !== undefined) {
            k = i.wheelDeltaX * -1
        }
        m = Math.abs(q);
        if (!f || m < f) {
            f = m
        }
        l = Math.max(Math.abs(j), Math.abs(k));
        if (!a || l < a) {
            a = l
        }
        p = q > 0 ? "floor" : "ceil";
        q = Math[p](q / f);
        k = Math[p](k / a);
        j = Math[p](j / a);
        o.unshift(h, q, k, j);
        return (jQuery.event.dispatch || jQuery.event.handle).apply(this, o)
    }
}));
window.require = function (d, c) {
    return c
};
window.module = {};
window.KWC = {
    translationList: [],
    createImage: function () {
        return new Image()
    },
    createCanvas: function () {
        return document.createElement("canvas")
    },
    translate: function (a, b) {
        if (!b && jQuery.inArray(a, KWC.translationList) == -1) {
            KWC.translationList.push(a)
        }
        return KWC.locale[a] ? KWC.locale[a] : a
    },
    getTranslationList: function () {
        var a = {};
        jQuery.each(KWC.translationList, function (b, c) {
            a[c] = "{% trans '" + c + "' %}"
        });
        return JSON.stringify(a, undefined, 2)
    },
    month_names: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
    day_names: ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"]
};
window.is_mobile = navigator.userAgent.match(/Android/i) || navigator.userAgent.match(/webOS/i) || navigator.userAgent.match(/iPhone/i) || navigator.userAgent.match(/iPad/i) || navigator.userAgent.match(/iPod/i) || navigator.userAgent.match(/BlackBerry/i) || navigator.userAgent.match(/Windows Phone/i);
window.KWP_CONF = {
    static_serv: "/",
    client: "creator5",
    selectedMenu: "photos_block",
    version: "",
    thumbSize: 60,
    photoThumbSize: 120,
    previewSize: 120,
    lowres_warning_dpi_ratio: 0.25,
    lowres_warning_pixelsize: 3000000,
    page_flip_time: 1000,
    uploadedThumbSize: 375,
    maxThumbBuilds: 1,
    maxThumbGet: 3,
    maxFontSize: 300,
    minFontSize: 8,
    mpixPhotoExport: 8,
    memory_saving_mode: is_mobile,
    searchEnabled: true,
    autosave: true,
    autosave_delay: 10,
    save_warning: false,
    regularFontList: [],
    googleFontList: ["Quicksand", "Open Sans", "Six Caps", "Fenix", "Galindo", "Tauri", "Gilda Display", "Acme", "Rufina", "Cantora One", "Simonetta", "Wendy One", "Skranji", "Patrick Hand SC", "Libre Baskerville", "Merriweather Sans", "Gabriela", "Sintony", "Roboto", "Finger Paint", "Purple Purse", "Vampiro One", "Fjalla One", "Strait", "Princess Sofia", "Clicker Script", "Bonbon", "Allerta Stencil", "Great Vibes"],
    filters: "brightnesscontrast,sepia,blackwhite,saturation,blur,noise",
    cookieSave: false,
    maxUploadRetries: 6,
    maxConcurrentUploads: is_mobile ? 1 : 2,
    uploadTimeout: 5 * 60 * 1000,
    s3bucketShort: "upload.creator5.koffeeware.com",
    s3bucketShortEU: "upload.creator5.koffeeware.eu",
    s3bucket: "//s3.amazonaws.com/upload.creator5.koffeeware.com/",
    s3bucketEU: "//s3-eu-west-1.amazonaws.com/upload.creator5.koffeeware.eu/",
    authorizationServer: "http://<sub>.koffeeware.com/api/1.2/authorize/",
    authorizationServerSD: ["upcheck1", "upcheck2", "upcheck3"],
    colors: {
        main: "hsl(200,30%,30%)",
        secondary: "hsl(10,60%,60%)"
    }
};
this.Splitter = (function () {
    function a(b, c, e) {
        var d = this;
        this.element = b;
        this.value = c;
        this.callback = e;
        jQuery(this.element).hammer().on("touch", function (f) {
            return d.touch(f)
        });
        jQuery(this.element).hammer().on("drag", function (f) {
            return d.touchdrag(f)
        });
        this.max = 70;
        this.min = 20;
        this.update_pending = false;
        this.target_value = 0;
        this.update_delay = 16;
        this.pixelsize = 20
    }
    a.prototype.touch = function (b) {
        b.gesture.preventDefault();
        b = b.gesture.touches[0];
        this.startx = b.pageX;
        return this.start = this.value
    };
    a.prototype.getValues = function () {
        var b, c;
        c = jQuery(window).width();
        b = Math.max(10, Math.round(this.pixelsize / c * 1000)) * 0.1;
        return [this.value, b, 100 - this.value - b]
    };
    a.prototype.touchdrag = function (c) {
        var d, b, e = this;
        c.gesture.preventDefault();
        c = c.gesture.touches[0];
        b = c.pageX;
        d = jQuery(window).width();
        this.min = 200 * 100 / d;
        this.target_value = Math.min(this.max, Math.max(this.min, this.start + (b - this.startx) / d * 100));
        if (!this.update_pending) {
            this.update_pending = true;
            return setTimeout((function () {
                return e.update()
            }), this.update_delay)
        }
    };
    a.prototype.update = function () {
        var b;
        this.update_pending = false;
        b = Math.round(this.target_value);
        if (this.value !== b) {
            this.value = b;
            return this.callback(this.getValues())
        }
    };
    return a
})();
var FacebookModule = function () {
    this.me;
    this.albums;
    this.logged = false;
    this.photosLoadedIds = [];
    this.photoList = [];
    this.init = function () {
        jQuery("#import_modal").on("click", function (b) {
            b.stopPropagation()
        });
        if (a.logged) {
            a.build_modal();
            return
        }
        a.login(function () {
            a.build_modal()
        })
    };
    this.login = function (b) {
        hello("facebook").login().then(function () {
            a.logged = true;
            hello("facebook").api("me", function (c, f, d) {
                a.me = c;
                hello("facebook").api("me/albums/", {
                    limit: 100,
                    fields: "id,name,count,picture"
                }, function (g, i, h) {
                    a.albums = g;
                    b()
                })
            })
        }, function (c) {
            alert(c.error.message)
        })
    };
    this.build_modal = function () {
        jQuery("#back_to_albums").unbind().on("click", a.show_entry_point);
        jQuery("#add_all").unbind().on("click", function () {
            a.add_this_album(jQuery(this).attr("album-id"))
        });
        jQuery("#import_modal .modal-header").html("<img src='//graph.facebook.com/" + a.me.id + "/picture'> ");
        jQuery("#import_modal .modal-header").append(KWC.translate("Facebook Import"));
        jQuery("#import_modal .modal-body .albums").empty().hide();
        jQuery("#import_modal .modal-body .photos").empty().hide();
        jQuery("#import_modal").modal();
        a.show_entry_point()
    };
    this.show_entry_point = function () {
        jQuery("#import_modal .modal-body .photos").hide();
        jQuery("#import_modal .modal-body .albums").empty().show();
        jQuery("#back_to_albums").hide();
        jQuery("#add_all").hide();
        for (var b in a.albums.data) {
            (function (c) {
                var d = a.albums.data[c];
                if (d.count > 0) {
                    $a = jQuery("<div />").addClass("album");
                    $a.append(jQuery("<div />").addClass("picture").html("<img src='" + d.picture.data.url + "'>"));
                    $a.append(jQuery("<div />").addClass("title").html(d.name));
                    $a.on("click", function (e) {
                        a.show_photos(d.id)
                    });
                    jQuery("#import_modal .modal-body .albums").append($a)
                }
            })(b)
        }
    };
    this.show_photos = function (b) {
        jQuery("#import_modal .modal-body .photos").html("<p>" + KWC.translate("Click on a photo to add it to your list") + "</p>");
        jQuery("#back_to_albums").show();
        jQuery("#add_all").show().attr("album-id", b);
        var c = function (d) {
            hello("facebook").api(d, {
                limit: 100,
                fields: "id,picture,album,images,width,height,created_time"
            }, function (i, h, g) {
                for (var f in i.data) {
                    (function (e) {
                        var j = i.data[e];
                        a.add_photos_to_list(j, b);
                        $p = jQuery("<div />").addClass("photo");
                        if (jQuery.inArray(j.id, a.photosLoadedIds) != -1) {
                            $p.addClass("selected")
                        }
                        $p.attr("data-id", j.id);
                        $p.html("<img src='" + j.picture + "'>");
                        $p.on("click", function (k) {
                            a.creator_add(j)
                        });
                        jQuery("#import_modal .modal-body .photos").append($p)
                    })(f)
                }
                jQuery("#import_modal .modal-body .albums").hide();
                jQuery("#import_modal .modal-body .photos").show();
                if (i.paging && i.paging.next) {
                    c(i.paging.next)
                }
            })
        };
        c(b + "/photos")
    };
    this.add_photos_to_list = function (d, c) {
        for (var b in a.photoList) {
            var e = a.photoList[b];
            if (e.id == d.id) {
                return false
            }
        }
        d.album_id = c;
        a.photoList.push(d);
        return true
    };
    this.add_this_album = function (d) {
        var c = [];
        for (var b in a.photoList) {
            var e = a.photoList[b];
            if (e.album_id == d) {
                c.push(a.build_register(e));
                a.photosLoadedIds.push(e.id);
                jQuery(".photo[data-id=" + e.id + "]").addClass("selected")
            }
        }
        KWP_utils.registerPhotos(c)
    };
    this.creator_add = function (b) {
        a.photosLoadedIds.push(b.id);
        KWP_utils.registerPhotos([a.build_register(b)]);
        jQuery("#import_modal .modal-body .photos").find("[data-id=" + b.id + "]").addClass("selected")
    };
    this.build_register = function (c) {
        var f = [];
        for (var b in c.images) {
            var e = c.images[b];
            var d = {};
            d.size = Math.max(e.width, e.height);
            d.url = e.source.replace("http:", document.location.protocol);
            f.push(d)
        }
        return {
            id: c.id,
            width: c.width,
            height: c.height,
            created_time: c.created_time,
            source: c.images[0].source.replace("http:", document.location.protocol),
            thumbnails: f
        }
    };
    var a = this;
    a.init()
};
var InstagramModule = function (a) {
    this.me;
    this.logged = false;
    this.photosLoadedIds = [];
    this.photoList = [];
    this.proxy = a;
    this.init = function () {
        jQuery("#import_modal").on("click", function (c) {
            c.stopPropagation()
        });
        if (b.logged) {
            b.build_modal();
            return
        }
        b.login(function () {
            b.build_modal()
        })
    };
    this.login = function (c) {
        hello("instagram").login().then(function () {
            b.logged = true;
            hello("instagram").api("me", function (d, g, f) {
                b.me = d;
                b.build_modal()
            })
        }, function (d) {
            alert(d.error.message)
        })
    };
    this.build_modal = function () {
        jQuery("#add_all").unbind().on("click", b.add_all);
        jQuery("#import_modal .modal-header").html("<img src='" + b.me.thumbnail + "'> ");
        jQuery("#import_modal .modal-header").append(KWC.translate("Instagram Import"));
        jQuery("#import_modal .modal-body .albums").empty().hide();
        jQuery("#import_modal .modal-body .photos").empty().hide();
        jQuery("#import_modal").modal();
        b.show_entry_point()
    };
    this.show_entry_point = function () {
        jQuery("#add_all").show();
        jQuery("#back_to_albums").hide();
        jQuery("#import_modal .modal-body .photos").html("<p>" + KWC.translate("Click on a photo to add it to your list") + "</p>");
        var c = function (d) {
            hello("instagram").api(d, {
                limit: 100
            }, function (i, h, g) {
                for (var f in i.data) {
                    (function (e) {
                        var j = i.data[e];
                        b.add_photos_to_list(j);
                        $p = jQuery("<div />").addClass("photo");
                        if (jQuery.inArray(j.id, b.photosLoadedIds) != -1) {
                            $p.addClass("selected")
                        }
                        $p.attr("data-id", j.id);
                        $p.html("<img src='" + j.thumbnail.replace("http:", document.location.protocol) + "'>");
                        $p.on("click", function (k) {
                            b.creator_add(j)
                        });
                        jQuery("#import_modal .modal-body .photos").append($p)
                    })(f)
                }
                jQuery("#import_modal .modal-body .albums").hide();
                jQuery("#import_modal .modal-body .photos").show();
                if (i.paging && i.paging.next) {
                    c(i.paging.next)
                }
            })
        };
        c("me/photos")
    };
    this.creator_add = function (c) {
        b.photosLoadedIds.push(c.id);
        KWP_utils.registerPhotos([b.build_register(c)]);
        jQuery("#import_modal .modal-body .photos").find("[data-id=" + c.id + "]").addClass("selected")
    };
    this.add_all = function () {
        var d = [];
        for (var c in b.photoList) {
            var e = b.photoList[c];
            d.push(b.build_register(e));
            b.photosLoadedIds.push(e.id);
            jQuery(".photo[data-id=" + e.id + "]").addClass("selected")
        }
        KWP_utils.registerPhotos(d)
    };
    this.build_register = function (d) {
        var f = [];
        for (var c in d.images) {
            var e = d.images[c];
            e.size = e.width;
            e.url = b.proxyfy(e.url.replace("http:", document.location.protocol));
            f.push(e)
        }
        return {
            id: d.id,
            width: 640,
            height: 640,
            created_time: d.created_time * 1000,
            source: b.proxyfy(d.picture.replace("http:", document.location.protocol)),
            thumbnails: f
        }
    };
    this.add_photos_to_list = function (d) {
        for (var c in b.photoList) {
            var e = b.photoList[c];
            if (e.id == d.id) {
                return false
            }
        }
        b.photoList.push(d);
        return true
    };
    this.proxyfy = function (c) {
        return b.proxy + "?url=" + encodeURIComponent(c)
    };
    var b = this;
    b.init()
};
var GoogleModule = function () {
    this.me;
    this.albums;
    this.logged = false;
    this.photosLoadedIds = [];
    this.photoList = [];
    this.init = function () {
        jQuery("#import_modal").on("click", function (b) {
            b.stopPropagation()
        });
        if (a.logged) {
            a.build_modal();
            return
        }
        a.login(function () {
            a.build_modal()
        })
    };
    this.login = function (b) {
        hello("google").login().then(function () {
            a.logged = true;
            hello("google").api("me", function (c, f, d) {
                a.me = c;
                hello("google").api("me/albums", function (g, i, h) {
                    a.albums = g;
                    b()
                })
            })
        }, function (c) {
            alert(c.error.message)
        })
    };
    this.build_modal = function () {
        jQuery("#back_to_albums").unbind().on("click", a.show_entry_point);
        jQuery("#add_all").unbind().on("click", function () {
            a.add_this_album(jQuery(this).attr("album-id"))
        });
        jQuery("#import_modal .modal-header").html("<img src='" + a.me.thumbnail + "'> ");
        jQuery("#import_modal .modal-header").append(KWC.translate("Google Import"));
        jQuery("#import_modal .modal-body .albums").empty().hide();
        jQuery("#import_modal .modal-body .photos").empty().hide();
        jQuery("#import_modal").modal();
        a.show_entry_point()
    };
    this.show_entry_point = function () {
        jQuery("#import_modal .modal-body .photos").hide();
        jQuery("#import_modal .modal-body .albums").empty().show();
        jQuery("#back_to_albums").hide();
        jQuery("#add_all").hide();
        for (var b in a.albums.data) {
            (function (c) {
                var d = a.albums.data[c];
                $a = jQuery("<div />").addClass("album");
                $a.append(jQuery("<div />").addClass("picture").html("<img src='" + d.thumbnail + "'>"));
                $a.append(jQuery("<div />").addClass("title").html(d.name));
                $a.on("click", function (e) {
                    a.show_photos(d.id)
                });
                jQuery("#import_modal .modal-body .albums").append($a)
            })(b)
        }
    };
    this.show_photos = function (b) {
        hello("google").api("me/album", {
            id: b,
            limit: 100,
            imgmax: 1600
        }, function (g, f, d) {
            jQuery("#back_to_albums").show();
            jQuery("#add_all").show().attr("album-id", b);
            jQuery("#import_modal .modal-body .photos").html("<p>" + KWC.translate("Click on a photo to add it to your list") + "</p>");
            for (var c in g.data) {
                (function (e) {
                    var h = g.data[e];
                    h.id = jQuery.MD5(h.id);
                    a.add_photos_to_list(h, b);
                    $p = jQuery("<div />").addClass("photo");
                    if (jQuery.inArray(h.id, a.photosLoadedIds) != -1) {
                        $p.addClass("selected")
                    }
                    $p.attr("data-id", h.id);
                    $p.html("<img src='" + h.thumbnail + "'>");
                    $p.on("click", function (i) {
                        a.creator_add(h)
                    });
                    jQuery("#import_modal .modal-body .photos").append($p)
                })(c)
            }
            jQuery("#import_modal .modal-body .albums").hide();
            jQuery("#import_modal .modal-body .photos").show()
        })
    };
    this.add_photos_to_list = function (d, c) {
        for (var b in a.photoList) {
            var e = a.photoList[b];
            if (e.id == d.id) {
                return false
            }
        }
        d.album_id = c;
        a.photoList.push(d);
        return true
    };
    this.add_this_album = function (d) {
        var c = [];
        for (var b in a.photoList) {
            var e = a.photoList[b];
            if (e.album_id == d) {
                c.push(a.build_register(e));
                a.photosLoadedIds.push(e.id);
                jQuery(".photo[data-id=" + e.id + "]").addClass("selected")
            }
        }
        KWP_utils.registerPhotos(c)
    };
    this.creator_add = function (b) {
        a.photosLoadedIds.push(b.id);
        KWP_utils.registerPhotos([a.build_register(b)]);
        jQuery("#import_modal .modal-body .photos").find("[data-id=" + b.id + "]").addClass("selected")
    };
    this.build_register = function (c) {
        var e = [];
        for (var b in c.images) {
            var d = c.images[b];
            d.url = d.source.replace("http:", document.location.protocol);
            d.size = Math.max(d.width, d.height);
            e.push(d)
        }
        return {
            id: c.id,
            width: c.width,
            height: c.height,
            created_time: c.created_time,
            source: c.picture.replace("http:", document.location.protocol),
            thumbnails: e
        }
    };
    var a = this;
    a.init()
};
this.Saver = (function () {
    function a(b, d, c) {
        this.creation = b;
        this.listener = d;
        this.concurrency = c != null ? c : 3;
        this.start()
    }
    a.prototype.start = function () {
        var d, c, b;
        this.photo_list = this.buildPhotoList();
        this.text_list = this.buildTextList();
        this.saved = JSON.stringify(this.creation.save());
        this.aborted = false;
        this.completed = false;
        this.total = this.photo_list.length + this.text_list.length;
        this.uploaded = 0;
        b = [];
        for (d = 1, c = this.concurrency; 1 <= c ? d <= c : d >= c; 1 <= c ? d++ : d--) {
            b.push(this.processUpload())
        }
        return b
    };
    a.prototype.buildPhotoList = function () {
        var e, f, c, d, b;
        e = this.creation._kw106();
        c = [];
        for (d = 0, b = e.length; d < b; d++) {
            f = e[d];
            if (!f.online) {
                c.push(new PhotoUpload(this, f))
            }
        }
        return c
    };
    a.prototype.buildTextList = function () {
        return []
    };
    a.prototype.processUpload = function () {
        var c, b;
        if (this.completed || this.aborted) {
            return
        }
        if (this.photo_list.length > 0) {
            c = this.photo_list.splice(0, 1)[0];
            return c.process()
        } else {
            if (this.text_list.length > 0) {
                b = this.text_list.splice(0, 1)[0];
                return b.process()
            } else {
                this.completed = true;
                return this.finalize()
            }
        }
    };
    a.prototype.uploadComplete = function () {
        this.uploaded++;
        if (this.listener != null) {
            this.listener.saveProgress()
        }
        return this.processUpload()
    };
    a.prototype.uploadError = function () {
        this.aborted = true;
        return this.listener.saveError()
    };
    a.prototype.abort = function () {
        return this.aborted = true
    };
    a.prototype.getProgress = function () {
        return this.uploaded / this.total
    };
    a.prototype.finalize = function () {
        var b;
        b = JSON.stringify(this.creation.save());
        if (b !== this.saved) {
            return this.start()
        } else {
            return this.saveCreation()
        }
    };
    a.prototype.saveCreation = function () {
        if (this.listener != null) {
            return this.listener.saveComplete()
        }
    };
    return a
})();
var FileUpload;
FileUpload = (function () {
    function a(b) {
        this.parameters = b;
        this.progress = 0;
        this.auth_retries = 5;
        this.retries = 5;
        this.start()
    }
    a.prototype.getAuthorization = function () {
        return jQuery.ajax({
            type: "POST",
            async: true,
            dataType: "json",
            url: KWP_CONF.authorizationServer,
            data: {
                bucket: this.parameters.bucket,
                key: this.parameters.key
            },
            success: (function (b) {
                return function (c) {
                    if (c.online) {
                        if (b.parameters.callback != null) {
                            return b.parameters.success("online")
                        }
                    } else {
                        if (typeof b.parameters.data === "function") {
                            return b.parameters.data(function (d) {
                                return b.upload(d, c)
                            })
                        } else {
                            return b.upload(b.parameters.data, c)
                        }
                    }
                }
            })(this),
            error: (function (b) {
                return function () {
                    var c;
                    if (b.auth_retries-- > 0) {
                        c = Math.floor(Math.random() * KWP_CONF.authorizationServerSD.length);
                        KWP_CONF.authorizationServer = KWP_CONF.authorizationServerOrigin.replace("<sub>", KWP_CONF.authorizationServerSD[c]);
                        return b.getAuthorization()
                    } else {
                        if (b.parameters.error != null) {
                            return b.parameters.error()
                        }
                    }
                }
            })(this)
        })
    };
    a.prototype.start = function () {
        return this.getAuthorization()
    };
    a.prototype.upload = function (d, c) {
        var b;
        if (d) {
            b = new FormData;
            b.append("content-type", this.parameters.mime_type);
            b.append("acl", "public-read");
            b.append("Policy", c.policy);
            b.append("X-Amz-algorithm", "AWS4-HMAC-SHA256");
            b.append("X-Amz-credential", c.credentials);
            b.append("X-Amz-date", c.date);
            b.append("X-Amz-expires", c.expires);
            b.append("X-Amz-signature", c.signature);
            b.append("key", this.parameters.key);
            b.append("file", d);
            return jQuery.ajax({
                xhr: (function (e) {
                    return function () {
                        var f;
                        f = new window.XMLHttpRequest;
                        f.upload.addEventListener("progress", (function (g) {
                            if (g.lengthComputable) {
                                return e.progress = g.loaded / g.total
                            }
                        }), false);
                        return f
                    }
                })(this),
                url: this.bucket,
                type: "POST",
                autoUpload: true,
                dataType: "xml",
                data: b,
                processData: false,
                contentType: false,
                success: (function (e) {
                    return function () {
                        if (e.parameters.success != null) {
                            return e.parameters.success()
                        }
                    }
                })(this),
                error: (function (e) {
                    return function () {
                        if (e.retries-- > 0) {
                            return e.upload()
                        } else {
                            if (e.parameters.error != null) {
                                return e.parameters.error()
                            }
                        }
                    }
                })(this)
            })
        }
    };
    return a
})();
this.PhotoUpload = (function () {
    function a(b, c) {
        this.saver = b;
        this.source = c
    }
    a.force_original_upload = false;
    a.prototype.uploadOriginal = function () {
        var c, b;
        c = this.source.stats.alpha <= 254 ? "png" : "jpg";
        b = KWP_CONF.client + "/photos/" + this.source.hash + "/original." + c;
        new FileUpload({
            bucket: KWP_CONF.s3bucketEU,
            key: b,
            mime_type: c === "png" ? "image/png" : "image/jpeg",
            data: (function (d) {
                return function (e) {
                    return d.preparedata(function (f) {
                        return e(f)
                    })
                }
            })(this),
            success: (function (d) {
                return function () {
                    d.source.online_url = KWP_CONF.s3bucketEU + b;
                    d.source.online = true;
                    return d.uploadPhotoComplete()
                }
            })(this),
            error: (function (d) {
                return function () {
                    return d.saver.uploadError()
                }
            })(this)
        });
        return this.prepareData((function (d) {
            return function (e) {
                return upload_file(KWP_utils._kw112(e))
            }
        })(this))
    };
    a.prototype.uploadPhotoComplete = function () {
        return this.saver.uploadComplete()
    };
    a.prototype.process = function () {
        return this.uploadOriginal()
    };
    a.prototype.prepareData = function (e) {
        var d, c, b;
        d = function (h, f, i) {
            var g;
            g = new Image;
            g.onload = (function (j) {
                return function () {
                    var l, m, o, k;
                    l = document.createElement("canvas");
                    l.width = h;
                    l.height = f;
                    m = l.getContext("2d");
                    m.drawImage(g, 0, 0, h, f);
                    o = m.getImageData(h - 1, f - 1, 1, 1);
                    if (o.data[0] !== 0 || o.data[1] !== 0 || o.data[2] !== 0) {
                        k = l.toDataURL("image/jpeg", i);
                        l = null;
                        m = null;
                        k = null;
                        return e(k)
                    } else {
                        a.force_original_upload = true;
                        return j.prepareData(e)
                    }
                }
            })(this);
            return g.src = window.URL.createObjectURL(this.source.file)
        };
        if (this.source.stats.alpha <= 254 || a.force_original_upload || this.source.file.size < 300000) {
            c = new FileReader;
            c.onload = function () {
                return e(c.result)
            };
            return c.readAsDataURL(this.source.file)
        } else {
            if (this.source.width * this.source.height < 8000000) {
                return d(this.source.width, this.source.height, 0.8)
            } else {
                b = Math.sqrt(8000000 / (this.source.width * this.source.height));
                return d(Math.round(this.source.width * b), Math.round(this.source.to_canvas.height * b), 0.75)
            }
        }
    };
    return a
})();
(function () {
    this._kw0 = (function () {
        function a() {
            this.density = 0.95;
            this.margin = 1;
            this.textblocks = 0;
            this.spacing = 0.2;
            this.shuffle = 0.1
        }
        a.prototype.apply = function (q) {
            var j, l, e, d, c, k, b, v, u, r, g, t, h, f;
            this.page = q;
            k = this.page.objects.length;
            e = this.margin * 0.1 * Math.min(this.page.width, this.page.height);
            v = this.spacing * 0.05 * Math.min(this.page.width, this.page.height);
            b = [
                [0, 0, this.page.width - 2 * e, this.page.height - 2 * e]
            ];
            while (b.length < k / Math.max(0.1, this.density)) {
                u = (Math.random() - 0.5) * this.page.width;
                r = (Math.random() - 0.5) * this.page.height;
                for (g = 0, t = b.length; g < t; g++) {
                    c = b[g];
                    if (Math.abs(u - c[0]) <= c[2] / 2 && Math.abs(r - c[1]) <= c[3] / 2) {
                        if (c[2] > c[3]) {
                            c[2] = (c[2] - v) / 2;
                            c[0] = c[0] - (c[2] + v) / 2;
                            b.push([c[0] + c[2] + v, c[1], c[2], c[3]])
                        } else {
                            c[3] = (c[3] - v) / 2;
                            c[1] = c[1] - (c[3] + v) / 2;
                            b.push([c[0], c[1] + c[3] + v, c[2], c[3]])
                        }
                    }
                }
            }
            f = [];
            for (j = 0, h = this.page.objects.length - 1; 0 <= h ? j <= h : j >= h; 0 <= h ? j++ : j--) {
                l = Math.min(b.length - 1, (Math.random() * b.length) | 0);
                c = b[l];
                b.splice(l, 1);
                d = this.page.objects[j];
                d.x = c[0];
                d.y = c[1];
                d.width = c[2];
                d.height = c[3];
                f.push(d.rotation = this.shuffle * (Math.random() - 0.5) * 30)
            }
            return f
        };
        return a
    })()
}).call(this);
this.ColorPicker = (function () {
    function a(b) {
        var f, d, e = this;
        this.canvas = b;
        jQuery(this.canvas).hammer().on("touch", function (c) {
            return e.touch(c)
        });
        jQuery(this.canvas).hammer().on("release", function (c) {
            return e.release(c)
        });
        jQuery(this.canvas).hammer().on("drag", function (c) {
            return e.touch(c)
        });
        this.margin = 40;
        this.predefined = [
            ["rgb(255,255,255)", "rgb(224,224,224)", "rgb(192,192,192)", "rgb(160,160,160)", "rgb(128,128,128)", "rgb(96,96,96)", "rgb(64,64,64)", "rgb(0,0,0)"],
            ["rgb(255,255,255)", "rgb(224,224,224)", "rgb(192,192,192)", "rgb(160,160,160)", "rgb(128,128,128)", "rgb(96,96,96)", "rgb(64,64,64)", "rgb(0,0,0)"],
            ["rgb(255,255,255)", "rgb(224,224,224)", "rgb(192,192,192)", "rgb(160,160,160)", "rgb(128,128,128)", "rgb(96,96,96)", "rgb(64,64,64)", "rgb(0,0,0)"]
        ];
        for (d = 0; d <= 15; d++) {
            f = this._kw2(d / 16, 0.6, 0.9);
            this.predefined[1 + (d / 8) | 0][d % 8] = "rgb(" + f[0] + "," + f[1] + "," + f[2] + ")"
        }
        this.color = "rgb(0,0,0)";
        this.c = this.hsl = [0, 0, 0]
    }
    a.prototype._kw3 = function (b) {
        this.color = b;
        this.c = this._kw4(this.color);
        this.hsl = this._kw5(this.c[0], this.c[1], this.c[2]);
        return this.update()
    };
    a.prototype.update = function () {
        var q, l, d, r, s, g, e, h, p, m, o, b, f, k = this;
        if (!this.image_color_disc) {
            this.image_color_disc = new Image;
            this.image_color_disc.onload = function () {
                return k.update()
            };
            this.image_color_disc.src = KWP_CONF.static_serv + "img/creator/colordisc.png"
        }
        if (this.canvas.height < 400) {
            this.canvas.height = 400
        }
        this.color_disc_size = this.canvas.height - 2 * this.margin;
        this.slider_size = this.color_disc_size * 0.1;
        this.canvas.width = this.color_disc_size + this.margin * 3 + this.slider_size + (this.margin + this.slider_size) * this.predefined.length;
        this.canvas.height = this.color_disc_size + this.margin * 2;
        d = this.canvas.getContext("2d");
        d.clearRect(0, 0, this.canvas.width, this.canvas.height);
        if (this.image_color_disc.complete) {
            d.drawImage(this.image_color_disc, this.margin, this.margin, this.color_disc_size, this.color_disc_size)
        }
        d.save();
        l = this._kw2(this.hsl[0], this.hsl[1], 1);
        r = d.createLinearGradient(0, this.margin + this.slider_size / 2, 0, this.margin + this.color_disc_size - this.slider_size / 2);
        r.addColorStop(1, "#000");
        r.addColorStop(0, "rgb(" + l[0] + "," + l[1] + "," + l[2] + ")");
        d.fillStyle = r;
        d.shadowColor = "#000";
        d.shadowBlur = 6;
        d.beginPath();
        d.moveTo(this.margin * 2 + this.color_disc_size, this.margin + this.slider_size / 2);
        d.lineTo(this.margin * 2 + this.color_disc_size, this.margin + this.color_disc_size - this.slider_size / 2);
        d.arc(this.margin * 2 + this.color_disc_size + this.slider_size / 2, this.margin + this.color_disc_size - this.slider_size / 2, this.slider_size / 2, Math.PI, 0, true);
        d.lineTo(this.margin * 2 + this.color_disc_size + this.slider_size, this.margin + this.slider_size / 2);
        d.arc(this.margin * 2 + this.color_disc_size + this.slider_size / 2, this.margin + this.slider_size / 2, this.slider_size / 2, 0, Math.PI, true);
        d.fill();
        d.restore();
        d.save();
        d.shadowColor = "#000";
        d.shadowBlur = 6;
        f = this.predefined;
        for (e = 0, o = f.length; e < o; e++) {
            q = f[e];
            h = q.length + 0.5 * (q.length - 1);
            s = this.color_disc_size / h;
            for (g = 0, b = q.length; g < b; g++) {
                l = q[g];
                d.fillStyle = l;
                d.roundRect(this.margin * 3 + this.color_disc_size + this.slider_size + e * (this.slider_size + this.margin), this.margin + g * (s * 1.5), this.slider_size, s, 10);
                d.fill()
            }
        }
        d.restore();
        l = this._kw2(this.hsl[0], this.hsl[1], this.hsl[2]);
        d.fillStyle = "rgb(" + l[0] + "," + l[1] + "," + l[2] + ")";
        p = this.margin + this.color_disc_size / 2 + this.color_disc_size / 2 * this.hsl[1] * Math.cos(this.hsl[0] * 2 * Math.PI);
        m = this.margin + this.color_disc_size / 2 - this.color_disc_size / 2 * this.hsl[1] * Math.sin(this.hsl[0] * 2 * Math.PI);
        d.save();
        d.beginPath();
        d.arc(p, m, this.color_disc_size * 0.05, 0, 2 * Math.PI, true);
        d.fill();
        d.shadowColor = "#000";
        d.shadowBlur = 6;
        d.lineWidth = 4;
        d.strokeStyle = "#FFF";
        d.stroke();
        d.restore();
        l = this._kw2(this.hsl[0], this.hsl[1], this.hsl[2]);
        d.fillStyle = "rgb(" + l[0] + "," + l[1] + "," + l[2] + ")";
        p = this.margin + this.color_disc_size + this.margin + this.slider_size / 2;
        m = this.margin + this.slider_size / 2 + (1 - this.hsl[2]) * (this.color_disc_size - this.slider_size);
        d.save();
        d.beginPath();
        d.arc(p, m, this.color_disc_size * 0.05, 0, 2 * Math.PI, true);
        d.fill();
        d.shadowColor = "#000";
        d.shadowBlur = 6;
        d.lineWidth = 4;
        d.strokeStyle = "#FFF";
        d.stroke();
        return d.restore()
    };
    a.prototype.touch = function (c) {
        var s, g, h, e, t, m, k, l, b, d, q, o, p, j, f;
        c.gesture.preventDefault();
        c = c.gesture.touches[0];
        this.fix(c);
        q = c.offsetX;
        o = c.offsetY;
        h = this.margin + this.color_disc_size / 2;
        e = h;
        if (Math.abs(q - h) < this.color_disc_size / 2 + this.margin / 2 && Math.abs(o - e) < this.color_disc_size / 2 + this.margin / 2) {
            q = (q - this.margin - this.color_disc_size / 2) / (this.color_disc_size / 2);
            o = (o - this.margin - this.color_disc_size / 2) / (this.color_disc_size / 2);
            b = Math.sqrt(q * q + o * o);
            g = Math.acos(q / (b + 1e-7));
            if (o >= 0) {
                g = 2 * Math.PI - g
            }
            while (g < 0) {
                g += 2 * Math.PI
            }
            while (g >= 2 * Math.PI) {
                g -= 2 * Math.PI
            }
            m = g / (2 * Math.PI);
            d = Math.min(1, b);
            this.c = this._kw2(m, d, this.hsl[2]);
            this.hsl[1] = d;
            this.hsl[0] = m;
            this.color = "rgb(" + this.c[0] + "," + this.c[1] + "," + this.c[2] + ")";
            return this.update()
        } else {
            if (q > this.margin + this.color_disc_size + this.margin / 2 && q < this.margin + this.color_disc_size + this.margin * 1.5 + this.slider_size) {
                o = (o - this.margin - this.slider_size / 2) / (this.color_disc_size - this.slider_size);
                o = Math.max(0, Math.min(1, 1 - o));
                this.c = this._kw2(this.hsl[0], this.hsl[1], o);
                this.hsl[2] = o;
                this.color = "rgb(" + this.c[0] + "," + this.c[1] + "," + this.c[2] + ")";
                return this.update()
            } else {
                j = this.predefined;
                f = [];
                for (k = 0, p = j.length; k < p; k++) {
                    s = j[k];
                    if (q > 2.5 * this.margin + this.color_disc_size + this.slider_size + k * (this.margin + this.slider_size) && q < 3.5 * this.margin + this.color_disc_size + 2 * this.slider_size + k * (this.margin + this.slider_size)) {
                        l = s.length + 0.5 * (s.length - 1);
                        t = this.color_disc_size / l;
                        o = Math.max(0, Math.min(s.length - 1, ((o - this.margin) / (t * 1.5)) | 0));
                        f.push(this._kw3(s[o]))
                    } else {
                        f.push(void 0)
                    }
                }
                return f
            }
        }
    };
    a.prototype.release = function (b) {
        if (this.callback) {
            return this.callback(this.color)
        }
    };
    a.prototype.fix = function (b) {
        b.offsetX = b.pageX - jQuery(this.canvas).offset().left;
        b.offsetY = b.pageY - jQuery(this.canvas).offset().top
    };
    a.prototype._kw6 = function (c) {
        var f, b, o, k, m, l, g, p, s, r, q, h, e;
        c.width = 600;
        c.height = 600;
        b = c.getContext("2d");
        k = b.getImageData(0, 0, c.width, c.height);
        for (l = 0, h = c.width; 0 <= h ? l <= h : l >= h; 0 <= h ? l++ : l--) {
            for (g = 0, e = c.height; 0 <= e ? g <= e : g >= e; 0 <= e ? g++ : g--) {
                r = (l - c.width / 2) / (c.width / 2);
                q = (g - c.height / 2) / (c.height / 2);
                s = Math.sqrt(r * r + q * q);
                if (s <= 1 && s > 0) {
                    f = Math.acos((l - c.width / 2) / (c.width / 2) / s);
                    if (g >= c.height / 2) {
                        f = 2 * Math.PI - f
                    }
                    while (f < 0) {
                        f += 2 * Math.PI
                    }
                    while (f >= 2 * Math.PI) {
                        f -= 2 * Math.PI
                    }
                    m = f / (2 * Math.PI);
                    o = (l + g * c.width) * 4;
                    p = this._kw2(m, s, 1);
                    f = 255;
                    if (s > 0.98) {
                        f = 255 * (1 - s) / (1 - 0.98)
                    }
                    k.data[o] = p[0];
                    k.data[o + 1] = p[1];
                    k.data[o + 2] = p[2];
                    k.data[o + 3] = f | 0
                }
            }
        }
        return b.putImageData(k, 0, 0)
    };
    a.prototype._kw5 = function (c, i, k) {
        var j, f, l, e, o, m;
        c = c / 255;
        i = i / 255;
        k = k / 255;
        l = Math.max(c, i, k);
        e = Math.min(c, i, k);
        f = void 0;
        o = void 0;
        m = l;
        j = l - e;
        o = (l === 0 ? 0 : j / l);
        if (l === e) {
            f = 0
        } else {
            switch (l) {
                case c:
                    f = (i - k) / j + (i < k ? 6 : 0);
                    break;
                case i:
                    f = (k - c) / j + 2;
                    break;
                case k:
                    f = (c - i) / j + 4
            }
            f /= 6
        }
        return [f, o, m]
    };
    a.prototype._kw2 = function (k, x, u) {
        var o, m, l, j, e, d, c, w;
        c = void 0;
        l = void 0;
        o = void 0;
        j = Math.floor(k * 6);
        m = k * 6 - j;
        e = u * (1 - x);
        d = u * (1 - m * x);
        w = u * (1 - (1 - m) * x);
        switch (j % 6) {
            case 0:
                c = u;
                l = w;
                o = e;
                break;
            case 1:
                c = d;
                l = u;
                o = e;
                break;
            case 2:
                c = e;
                l = u;
                o = w;
                break;
            case 3:
                c = e;
                l = d;
                o = u;
                break;
            case 4:
                c = w;
                l = e;
                o = u;
                break;
            case 5:
                c = u;
                l = e;
                o = d
        }
        return [(c * 255) | 0, (l * 255) | 0, (o * 255) | 0]
    };
    a.prototype.fix = function (b) {
        b.offsetX = b.pageX - jQuery(b.target).offset().left;
        b.offsetY = b.pageY - jQuery(b.target).offset().top
    };
    a.prototype.mousemove = function (c) {
        var b, d;
        this.fix(c);
        b = c.offsetX;
        d = c.offsetY;
        if (this.dragging) {
            return this.mousedown(c)
        }
    };
    a.prototype.mousedown = function (f) {
        var e, c, d, b, g;
        this.dragging = true;
        this.fix(f);
        b = f.offsetX;
        g = f.offsetY;
        if (g >= this.margin && g <= this.margin + this.size) {
            e = Math.max(0, Math.min(1, (b - this.margin) / (this.size * this.reso)));
            this.c = this._kw2(e, this.hsl[1], this.hsl[2]);
            this.hsl = this._kw5(this.c[0], this.c[1], this.c[2]);
            this.hsl[0] = e;
            this.color = "rgb(" + this.c[0] + "," + this.c[1] + "," + this.c[2] + ")";
            this.update();
            if (this.callback) {
                return this.callback(this.color)
            }
        } else {
            if (g >= 2 * this.margin + this.size && g <= 2 * this.margin + this.size + this.size * this.reso) {
                d = Math.max(0, Math.min(1, (b - this.margin) / (this.size * this.reso)));
                c = Math.max(0, Math.min(1, (g - 2 * this.margin - this.size) / (this.size * this.reso)));
                this.c = this._kw2(this.hsl[0], d, c);
                this.hsl = this._kw5(this.c[0], this.c[1], this.c[2]);
                this.hsl[1] = d;
                this.hsl[2] = c;
                this.color = "rgb(" + this.c[0] + "," + this.c[1] + "," + this.c[2] + ")";
                this.update();
                if (this.callback) {
                    return this.callback(this.color)
                }
            }
        }
    };
    a.prototype.mouseup = function (c) {
        var b, d;
        this.fix(c);
        b = c.offsetX;
        d = c.offsetY;
        return this.dragging = false
    };
    a.prototype.mouseleave = function (c) {
        var b, d;
        this.fix(c);
        b = c.offsetX;
        d = c.offsetY;
        return this.dragging = false
    };
    a.prototype._kw4 = function (c) {
        var b;
        b = c.match(/rgba?\(\s?(\d+),\s?(\d+),\s?(\d+)\s?\)/);
        if (b) {
            return [parseInt(b[1]), parseInt(b[2]), parseInt(b[3])]
        }
        return [0, 0, 0]
    };
    return a
})();
CanvasRenderingContext2D.prototype.roundRect = function (a, e, b, c, d) {
    if (b < 2 * d) {
        d = b / 2
    }
    if (c < 2 * d) {
        d = c / 2
    }
    this.beginPath();
    this.moveTo(a + d, e);
    this.arcTo(a + b, e, a + b, e + c, d);
    this.arcTo(a + b, e + c, a, e + c, d);
    this.arcTo(a, e + c, a, e, d);
    this.arcTo(a, e, a + b, e, d);
    this.closePath();
    return this
};
this.MouseHandler = (function () {
    function a(b, c) {
        var d = this;
        this.element = b;
        this.listener = c;
        jQuery(this.element).hammer().on("touch", function (e) {
            return d.touch(e)
        });
        jQuery(this.element).hammer().on("drag", function (e) {
            return d.touchdrag(e)
        });
        jQuery(this.element).hammer().on("release", function (e) {
            return d.touchrelease(e)
        });
        jQuery(this.element).mousemove(function (e) {
            return d.mousemove(e)
        })
    }
    a.prototype.touch = function (b) {
        b.gesture.preventDefault();
        b = b.gesture.touches[0];
        this.fix(b);
        if (this.listener.mousedown != null) {
            return this.listener.mousedown(b.offsetX, b.offsetY, b)
        }
    };
    a.prototype.touchdrag = function (b) {
        b.gesture.preventDefault();
        b = b.gesture.touches[0];
        this.fix(b);
        if (this.listener.mousedrag != null) {
            return this.listener.mousedrag(b.offsetX, b.offsetY, b)
        }
    };
    a.prototype.touchrelease = function (b) {
        b.gesture.preventDefault();
        b = b.gesture.touches[0];
        this.fix(b);
        if (this.listener.mouseup != null) {
            return this.listener.mouseup(b.offsetX, b.offsetY, b)
        }
    };
    a.prototype.mousemove = function (b) {
        this.fix(b);
        if (this.listener.mousemove != null) {
            return this.listener.mousemove(b.offsetX, b.offsetY, b)
        }
    };
    a.prototype.fix = function (b) {
        b.offsetX = b.pageX - jQuery(this.element).offset().left;
        b.offsetY = b.pageY - jQuery(this.element).offset().top
    };
    return a
})();
var KWC;
KWC = require("../../wrapper.js", KWC);
this._kw7 = (function () {
    function a(c, b) {
        this.id = c;
        this.name = KWC.translate(b);
        this.parameters = [];
        this.type = "filter"
    }
    a.prototype.pushParameter = function (c, e, b, d) {
        if (d == null) {
            d = false
        }
        return this.parameters.push({
            type: c,
            value: e,
            name: KWC.translate(b),
            hidden: d
        })
    };
    a.prototype.pushPreset = function (c, b) {
        if (!this.presets) {
            this.presets = []
        }
        return this.presets.push({
            name: KWC.translate(c),
            values: b
        })
    };
    a.prototype._kw8 = function (e, g, f, b, d) {
        var c;
        c = KWC.createCanvas();
        c.width = e.width;
        c.height = e.height;
        c.getContext("2d").drawImage(e, 0, 0, c.width, c.height);
        return this._kw9(c, g, f, b, d)
    };
    a.prototype._kw131 = function (b) {
        return this._kw9(b)
    };
    a.prototype.clone = function () {
        var h, d, g, f, b, e;
        h = new this.constructor();
        e = h.parameters;
        for (d = f = 0, b = e.length; f < b; d = ++f) {
            g = e[d];
            g.value = this.parameters[d].value
        }
        return h
    };
    a.prototype.signature = function () {
        var f, c, e, b, d;
        c = this.id;
        d = this.parameters;
        for (e = 0, b = d.length; e < b; e++) {
            f = d[e];
            c += ":" + f.value
        }
        return c
    };
    a.prototype.save = function () {
        var c, b;
        b = {
            id: this.id,
            parameters: (function () {
                var g, e, f, d;
                f = this.parameters;
                d = [];
                for (g = 0, e = f.length; g < e; g++) {
                    c = f[g];
                    d.push(c.value)
                }
                return d
            }).call(this)
        };
        return b
    };
    a.prototype._kw10 = function () {
        var f, g, e, c, d, b;
        f = function (j, m) {
            var h, l, k;
            if (j.length !== m.length) {
                return false
            }
            for (h = l = 0, k = j.length - 1; 0 <= k ? l <= k : l >= k; h = 0 <= k ? ++l : --l) {
                if (Math.abs(j[h] - m[h].value) > 0.00001) {
                    return false
                }
            }
            return true
        };
        if (this.presets != null) {
            d = this.presets;
            b = [];
            for (e = 0, c = d.length; e < c; e++) {
                g = d[e];
                b.push(g.selected = f(g.values, this.parameters))
            }
            return b
        }
    };
    a.prototype._kw11 = function (f) {
        var c, e, d, b;
        for (c = d = 0, b = f.length; d < b; c = ++d) {
            e = f[c];
            if (c < this.parameters.length) {
                this.parameters[c].value = e
            }
        }
        return this._kw10()
    };
    a.prototype.getParams = function () {
        var f, c, e, b, d;
        c = [];
        d = this.parameters;
        for (e = 0, b = d.length; e < b; e++) {
            f = d[e];
            c.push(f.value)
        }
        return c
    };
    a.prototype._kw132 = function () {
        return 0
    };
    return a
})();
module.exports = this._kw7;
var _kw7, __hasProp = {}.hasOwnProperty,
    __extends = function (d, b) {
        for (var a in b) {
            if (__hasProp.call(b, a)) {
                d[a] = b[a]
            }
        }

        function c() {
            this.constructor = d
        }
        c.prototype = b.prototype;
        d.prototype = new c();
        d.__super__ = b.prototype;
        return d
    };
_kw7 = require("./filter.coffee", _kw7);
this._kw15 = (function (b) {
    __extends(a, b);

    function a() {
        a.__super__.constructor.call(this, "brightnesscontrast", "Brightness & Contrast");
        this.pushParameter("slider", 0.5, "Brightness", false);
        this.pushParameter("slider", 0.5, "Contrast", false);
        this.pushParameter("slider", 0.5, "Shadows", false);
        this.pushParameter("slider", 0.5, "Midtones", false);
        this.pushParameter("slider", 0.5, "Highlights", false);
        this.demo = [0.6, 0.7]
    }
    a.prototype._kw9 = function (c) {
        var r, t, p, m, v, g, e, u, s, l, k, f, o, h, q = this;
        e = c.getContext("2d");
        g = e.getImageData(0, 0, c.width, c.height);
        v = c.width * 4;
        s = Math.max(0.1, this.parameters[2].value + this.parameters[3].value + this.parameters[4].value);
        t = function (w) {
            var i, j, d;
            d = w * (1 / 255);
            if (d < 0.3333333) {
                d = d * 3 * q.parameters[2].value / s
            } else {
                if (d < 0.6666666) {
                    d = (q.parameters[2].value + (d - 0.3333333) * 3 * q.parameters[3].value) / s
                } else {
                    d = (q.parameters[2].value + q.parameters[3].value + (d - 0.6666666) * 3 * q.parameters[4].value) / s
                }
            }
            i = q.parameters[0].value;
            if (i >= 0.5) {
                j = (1 - i) * 2 * 0.9 + 0.1
            } else {
                j = 1 + (1 - i * 2) * 2
            }
            d = Math.pow(d, j);
            i = q.parameters[1].value;
            d = (d - 0.5) * i * 2 + 0.5;
            return d * 255
        };
        u = [];
        for (p = l = 0; l <= 255; p = ++l) {
            u[p] = Math.max(0, Math.min(255, t(p)))
        }
        for (p = k = 0, o = c.width - 1; 0 <= o ? k <= o : k >= o; p = 0 <= o ? ++k : --k) {
            for (m = f = 0, h = c.height - 1; 0 <= h ? f <= h : f >= h; m = 0 <= h ? ++f : --f) {
                r = (p + m * c.width) * 4;
                g.data[r] = u[g.data[r]];
                g.data[r + 1] = u[g.data[r + 1]];
                g.data[r + 2] = u[g.data[r + 2]]
            }
        }
        e.putImageData(g, 0, 0);
        return c
    };
    return a
})(_kw7);
module.exports = this._kw15;
var _kw7, __hasProp = {}.hasOwnProperty,
    __extends = function (d, b) {
        for (var a in b) {
            if (__hasProp.call(b, a)) {
                d[a] = b[a]
            }
        }

        function c() {
            this.constructor = d
        }
        c.prototype = b.prototype;
        d.prototype = new c();
        d.__super__ = b.prototype;
        return d
    };
_kw7 = require("./filter.coffee", _kw7);
this.HDRFilter = (function (b) {
    __extends(a, b);

    function a() {
        a.__super__.constructor.call(this, "hdr", "HDR");
        this.parameters.push({
            type: "slider",
            value: 0.5,
            name: "Detail"
        });
        this.parameters.push({
            type: "slider",
            value: 0.5,
            name: "Contrast"
        })
    }
    a.prototype._kw9 = function (e) {
        var ax, K, J, az, aw, av, au, A, w, c, aa, D, ar, S, ap, an, P, Q, E, f, ae, l, h, R, X, L, N, ay, I, G, at, H, U, ah, O, T, M, q, aq, ao, am, al, F, o, ak, aj, ai, ag, af, ad, Z, C, B, z, u, t, s, p, m, ac, ab, Y, W, V;
        J = e.getContext("2d");
        av = J.getImageData(0, 0, e.width, e.height);
        this.expand(av.data, e.width, e.height);
        aa = 2 + Math.round(this.parameters[0].value * 28);
        P = 1.5 + Math.pow(this.parameters[1].value, 2) * 10;
        N = [];
        for (A = aq = 0, Z = aa - 1; aq <= Z; A = aq += 1) {
            for (w = ao = 0, C = aa - 1; ao <= C; w = ao += 1) {
                D = [];
                for (ar = am = 0; am <= 765; ar = ++am) {
                    D[ar] = 0
                }
                f = Math.floor(e.width / aa);
                E = Math.floor(e.height / aa);
                l = f * A;
                h = E * w;
                for (ar = al = 0, B = f - 1; 0 <= B ? al <= B : al >= B; ar = 0 <= B ? ++al : --al) {
                    for (ap = ak = 0, z = E - 1; 0 <= z ? ak <= z : ak >= z; ap = 0 <= z ? ++ak : --ak) {
                        S = (l + ar + (h + ap) * e.width) * 4;
                        D[Math.floor(av.data[S] * 1.5 + av.data[S + 1] * 1 + av.data[S + 2] * 0.5)]++
                    }
                }
                Q = 25;
                K = [];
                for (ar = aj = 0, u = Q - 1; aj <= u; ar = aj += 1) {
                    K[ar] = 0
                }
                for (ar = ai = 0; ai <= 765; ar = ai += 1) {
                    X = Math.floor(ar / 766 * Q);
                    K[X] += D[ar]
                }
                R = 0;
                for (ag = 0, F = K.length; ag < F; ag++) {
                    ax = K[ag];
                    R += ax
                }
                H = (1 / P) / Q;
                at = P / Q;
                for (ar = af = 0, t = Q - 1; af <= t; ar = af += 1) {
                    K[ar] = Math.max(H, Math.min(at, K[ar] / R))
                }
                R = 0;
                for (ad = 0, o = K.length; ad < o; ad++) {
                    ax = K[ad];
                    R += ax
                }
                az = [];
                az[0] = 0;
                for (ar = ac = 0, s = Q - 1; ac <= s; ar = ac += 1) {
                    az[ar + 1] = az[ar] + K[ar]
                }
                ay = [];
                for (ar = ab = 0; ab <= 765; ar = ab += 1) {
                    I = ar / 766 * Q;
                    G = Math.floor(I);
                    L = I - G;
                    ay[ar] = Math.max(ar, 765 * (az[G] + L * K[G]) / R)
                }
                for (ar = Y = 1; Y <= 765; ar = Y += 1) {
                    ay[ar] /= ar
                }
                N[A + w * aa] = ay
            }
        }
        for (ar = W = 0, p = e.width - 1; W <= p; ar = W += 1) {
            for (ap = V = 0, m = e.height - 1; V <= m; ap = V += 1) {
                an = (ar + ap * e.width) * 4;
                U = Math.min(aa - 1.0001, Math.max(0, aa * ar / e.width - 0.5));
                T = Math.min(aa - 1.0001, Math.max(0, aa * ap / e.height - 0.5));
                O = Math.floor(U);
                q = Math.floor(T);
                ah = U - O;
                M = T - q;
                ae = av.data[an];
                au = av.data[an + 1];
                ax = av.data[an + 2];
                c = Math.floor(ae * 1.5 + au * 1 + ax * 0.5);
                X = (N[O + q * aa][c] * (1 - ah) + N[O + 1 + q * aa][c] * ah) * (1 - M) + (N[O + (q + 1) * aa][c] * (1 - ah) + N[O + 1 + (q + 1) * aa][c] * ah) * M;
                aw = (c - X * c) / 3;
                ae = 0.4 * (ae * X) + 0.6 * (ae - aw);
                au = 0.4 * (au * X) + 0.6 * (au - aw);
                ax = 0.4 * (ax * X) + 0.6 * (ax - aw);
                av.data[an] = ae;
                av.data[an + 1] = au;
                av.data[an + 2] = ax
            }
        }
        J.putImageData(av, 0, 0);
        return e
    };
    a.prototype.sharpen = function (y, p, h) {
        var x, s, q, m, k, e, w, t, v, u, r, o, g, d, f, c;
        c = [];
        for (x = d = 1, f = p - 2; d <= f; x = d += 1) {
            c.push((function () {
                var l, i, j;
                j = [];
                for (w = l = 1, i = h - 2; l <= i; w = l += 1) {
                    e = (x + w * p) * 4;
                    s = e - p * 4;
                    q = e + p * 4;
                    m = e - 4;
                    k = e + 4;
                    t = y[e] + y[e + 1] + y[e + 2];
                    v = y[s] + y[s + 1] + y[s + 2];
                    u = y[q] + y[q + 1] + y[q + 2];
                    r = y[m] + y[m + 1] + y[m + 2];
                    o = y[k] + y[k + 1] + y[k + 2];
                    if (t > 0) {
                        g = (t + 1 * (t - 0.25 * (v + u + r + o))) / t;
                        y[e] *= g;
                        y[e + 1] *= g;
                        j.push(y[e + 2] *= g)
                    } else {
                        j.push(void 0)
                    }
                }
                return j
            })())
        }
        return c
    };
    a.prototype.expand = function (B, t, s) {
        var A, z, p, y, w, x, u, q, l, D, o, h, j, f, e, d, c, C, m;
        p = [];
        for (y = j = 0; j <= 765; y = ++j) {
            p[y] = 0
        }
        l = t * s * 0.0001;
        D = t * s * 4 - 4;
        for (w = f = 0; f <= D; w = f += 4) {
            p[Math.floor(1.5 * B[w] + B[w + 1] + B[w + 2] * 0.5)]++
        }
        for (y = e = 765; e >= 0; y = --e) {
            if (p[y] > l) {
                u = y
            }
        }
        for (y = d = 0; d <= 765; y = ++d) {
            if (p[y] > l) {
                x = y
            }
        }
        u = Math.min(48 * 3, u);
        x = Math.max(208 * 3, x);
        h = [];
        h[0] = 0;
        for (y = c = 1; c <= 765; y = ++c) {
            h[y] = Math.max(0, Math.min(765, (y - u) * 765 / (x - u))) / y
        }
        for (w = C = 0, m = t * s * 4 - 4; C <= m; w = C += 4) {
            q = B[w];
            z = B[w + 1];
            A = B[w + 2];
            o = h[Math.floor(q * 1.5 + z + A * 0.5)];
            B[w] = q * o;
            B[w + 1] = z * o;
            B[w + 2] = A * o
        }
        return true
    };
    a.prototype._kw20 = function (l) {
        var q, s, m, w, v, p, u, t, r, g, h, f, e, d, c, o, j;
        p = [];
        for (u = h = 0; h <= 255; u = ++h) {
            p[u] = 0
        }
        s = l.getContext("2d");
        w = s.getImageData(0, 0, l.width, l.height);
        for (t = f = 0, o = l.width * l.height * 4 - 4; f <= o; t = f += 4) {
            v = ((w.data[t] + w.data[t + 1] + w.data[t + 2]) * 0.333333333) | 0;
            p[v]++
        }
        q = [];
        m = 0;
        for (u = e = 0; e <= 255; u = ++e) {
            m += p[u];
            q[u] = m
        }
        r = l.width * l.height;
        g = [];
        for (u = d = 0; d <= 255; u = ++d) {
            g[u] = (255 * (q[u] - q[0]) / (r - q[0])) | 0
        }
        for (t = c = 0, j = l.width * l.height * 4 - 4; c <= j; t = c += 4) {
            w.data[t] = g[w.data[t]];
            w.data[t + 1] = g[w.data[t + 1]];
            w.data[t + 2] = g[w.data[t + 2]]
        }
        s.putImageData(w, 0, 0);
        return l
    };
    return a
})(_kw7);
module.exports = this.HDRFilter;
var _kw7, __hasProp = {}.hasOwnProperty,
    __extends = function (d, b) {
        for (var a in b) {
            if (__hasProp.call(b, a)) {
                d[a] = b[a]
            }
        }

        function c() {
            this.constructor = d
        }
        c.prototype = b.prototype;
        d.prototype = new c();
        d.__super__ = b.prototype;
        return d
    };
_kw7 = require("./filter.coffee", _kw7);
this._kw13 = (function (b) {
    __extends(a, b);

    function a() {
        a.__super__.constructor.call(this, "blackwhite", "Black and White");
        this.pushParameter("slider", 0.5, "Red filter", true);
        this.pushParameter("slider", 0.5, "Green filter", true);
        this.pushParameter("slider", 0.5, "Blue filter", true);
        this.pushPreset("Neutral", [0.5, 0.5, 0.5]);
        this.pushPreset("Red filter", [0.75, 0.1, 0.1]);
        this.pushPreset("Yellow filter", [0.75, 0.75, 0.1]);
        this.pushPreset("Blue filter", [0.1, 0.1, 0.75]);
        this._kw10()
    }
    a.prototype._kw9 = function (e) {
        var p, m, q, c, l, g, h, f, o, k, j;
        f = e.getContext("2d");
        h = f.getImageData(0, 0, e.width, e.height);
        g = [];
        c = [];
        p = [];
        for (l = k = 0; k <= 255; l = ++k) {
            g[l] = 255 * Math.pow(l / 255, (1 - this.parameters[0].value) * 2) * 0.333334;
            c[l] = 255 * Math.pow(l / 255, (1 - this.parameters[1].value) * 2) * 0.333334;
            p[l] = 255 * Math.pow(l / 255, (1 - this.parameters[2].value) * 2) * 0.333334
        }
        o = e.width * e.height * 4 - 4;
        for (m = j = 0; j <= o; m = j += 4) {
            q = g[h.data[m]] + c[h.data[m + 1]] + p[h.data[m + 2]];
            h.data[m] = q;
            h.data[m + 1] = q;
            h.data[m + 2] = q
        }
        f.putImageData(h, 0, 0);
        return e
    };
    return a
})(_kw7);
module.exports = this._kw13;
var _kw7, __hasProp = {}.hasOwnProperty,
    __extends = function (d, b) {
        for (var a in b) {
            if (__hasProp.call(b, a)) {
                d[a] = b[a]
            }
        }

        function c() {
            this.constructor = d
        }
        c.prototype = b.prototype;
        d.prototype = new c();
        d.__super__ = b.prototype;
        return d
    };
_kw7 = require("./filter.coffee", _kw7);
this._kw29 = (function (b) {
    __extends(a, b);

    function a() {
        a.__super__.constructor.call(this, "sepia", "Sepia");
        this.pushParameter("slider", 0.64, "Red filter", true);
        this.pushParameter("slider", 0.53, "Green filter", true);
        this.pushParameter("slider", 0.33, "Blue filter", true)
    }
    a.prototype._kw9 = function (e) {
        var u, v, q, p, c, o, f, j, k, h, t, s, m, l;
        h = e.getContext("2d");
        k = h.getImageData(0, 0, e.width, e.height);
        t = e.width * e.height * 4 - 4;
        j = [];
        c = [];
        v = [];
        for (o = m = 0; m <= 255; o = ++m) {
            j[o] = 255 * Math.pow(o / 255, (1 - this.parameters[0].value) * 2);
            c[o] = 255 * Math.pow(o / 255, (1 - this.parameters[1].value) * 2);
            v[o] = 255 * Math.pow(o / 255, (1 - this.parameters[2].value) * 2)
        }
        for (q = l = 0; l <= t; q = l += 4) {
            f = k.data[q];
            p = k.data[q + 1];
            u = k.data[q + 2];
            s = (f * 0.5 + p * 0.25 + u * 0.25) | 0;
            k.data[q] = j[s];
            k.data[q + 1] = c[s];
            k.data[q + 2] = v[s]
        }
        h.putImageData(k, 0, 0);
        return e
    };
    return a
})(_kw7);
module.exports = this._kw29;
var _kw7, __hasProp = {}.hasOwnProperty,
    __extends = function (d, b) {
        for (var a in b) {
            if (__hasProp.call(b, a)) {
                d[a] = b[a]
            }
        }

        function c() {
            this.constructor = d
        }
        c.prototype = b.prototype;
        d.prototype = new c();
        d.__super__ = b.prototype;
        return d
    };
_kw7 = require("./filter.coffee", _kw7);
this._kw21 = (function (a) {
    __extends(b, a);

    function b() {
        b.__super__.constructor.call(this, "enhance", "Enhance")
    }
    b.prototype._kw9 = function (e) {
        var T, u, t, V, S, R, Q, c, m, N, K, x, D, y, z, w, U, s, p, P, q, O, M, L, J, o, f, I, H, G, F, E, C, A, l, j, h, B;
        m = [];
        for (N = O = 0; O <= 765; N = ++O) {
            m[N] = 0
        }
        t = e.getContext("2d");
        R = t.getImageData(0, 0, e.width, e.height);
        this.expand(R.data, e.width, e.height);
        y = e.width * e.height * 4 - 4;
        for (K = M = 0; M <= y; K = M += 4) {
            m[Math.floor(R.data[K] * 1.5 + R.data[K + 1] * 1 + R.data[K + 2] * 0.5)]++
        }
        x = 25;
        u = [];
        for (N = L = 0, A = x - 1; L <= A; N = L += 1) {
            u[N] = 0
        }
        for (N = J = 0; J <= 765; N = J += 1) {
            z = Math.floor(N / 766 * x);
            u[z] += m[N]
        }
        y = 0;
        for (I = 0, o = u.length; I < o; I++) {
            T = u[I];
            y += T
        }
        q = 0.6 / x;
        P = 1.4 / x;
        for (N = H = 0, l = x - 1; H <= l; N = H += 1) {
            u[N] = Math.max(q, Math.min(P, u[N] / y))
        }
        y = 0;
        for (G = 0, f = u.length; G < f; G++) {
            T = u[G];
            y += T
        }
        V = [];
        V[0] = 0;
        for (N = F = 0, j = x - 1; F <= j; N = F += 1) {
            V[N + 1] = V[N] + u[N]
        }
        U = [];
        for (N = E = 0; E <= 765; N = E += 1) {
            s = N / 766 * x;
            p = Math.floor(s);
            w = s - p;
            U[N] = Math.max(N, 765 * (V[p] + w * u[p]) / y)
        }
        for (N = C = 1; C <= 765; N = C += 1) {
            U[N] /= N
        }
        for (K = B = 0, h = e.width * e.height * 4 - 4; B <= h; K = B += 4) {
            D = R.data[K];
            Q = R.data[K + 1];
            T = R.data[K + 2];
            c = Math.floor(D * 1.5 + Q * 1 + T * 0.5);
            z = U[c];
            S = (c - z * c) / 3;
            D = 0.4 * (D * z) + 0.6 * (D - S);
            Q = 0.4 * (Q * z) + 0.6 * (Q - S);
            T = 0.4 * (T * z) + 0.6 * (T - S);
            R.data[K] = D;
            R.data[K + 1] = Q;
            R.data[K + 2] = T
        }
        t.putImageData(R, 0, 0);
        return e
    };
    b.prototype.processCanvasHDR = function (e) {
        var ax, K, J, az, aw, av, au, A, w, c, aa, D, ar, S, ap, an, P, Q, E, f, ae, l, h, R, X, L, N, ay, I, G, at, H, U, ah, O, T, M, q, aq, ao, am, al, F, o, ak, aj, ai, ag, af, ad, Z, C, B, z, u, t, s, p, m, ac, ab, Y, W, V;
        J = e.getContext("2d");
        av = J.getImageData(0, 0, e.width, e.height);
        this.expand(av.data, e.width, e.height);
        aa = 10;
        P = 2.5;
        N = [];
        for (A = aq = 0, Z = aa - 1; 0 <= Z ? aq <= Z : aq >= Z; A = 0 <= Z ? ++aq : --aq) {
            for (w = ao = 0, C = aa - 1; 0 <= C ? ao <= C : ao >= C; w = 0 <= C ? ++ao : --ao) {
                D = [];
                for (ar = am = 0; am <= 765; ar = ++am) {
                    D[ar] = 0
                }
                f = Math.floor(e.width / aa);
                E = Math.floor(e.height / aa);
                l = f * A;
                h = E * w;
                for (ar = al = 0, B = f - 1; 0 <= B ? al <= B : al >= B; ar = 0 <= B ? ++al : --al) {
                    for (ap = ak = 0, z = E - 1; 0 <= z ? ak <= z : ak >= z; ap = 0 <= z ? ++ak : --ak) {
                        S = (l + ar + (h + ap) * e.width) * 4;
                        D[Math.floor(av.data[S] * 1.5 + av.data[S + 1] * 1 + av.data[S + 2] * 0.5)]++
                    }
                }
                Q = 25;
                K = [];
                for (ar = aj = 0, u = Q - 1; aj <= u; ar = aj += 1) {
                    K[ar] = 0
                }
                for (ar = ai = 0; ai <= 765; ar = ai += 1) {
                    X = Math.floor(ar / 766 * Q);
                    K[X] += D[ar]
                }
                R = 0;
                for (ag = 0, F = K.length; ag < F; ag++) {
                    ax = K[ag];
                    R += ax
                }
                H = (1 / P) / Q;
                at = P / Q;
                for (ar = af = 0, t = Q - 1; af <= t; ar = af += 1) {
                    K[ar] = Math.max(H, Math.min(at, K[ar] / R))
                }
                R = 0;
                for (ad = 0, o = K.length; ad < o; ad++) {
                    ax = K[ad];
                    R += ax
                }
                az = [];
                az[0] = 0;
                for (ar = ac = 0, s = Q - 1; ac <= s; ar = ac += 1) {
                    az[ar + 1] = az[ar] + K[ar]
                }
                ay = [];
                for (ar = ab = 0; ab <= 765; ar = ab += 1) {
                    I = ar / 766 * Q;
                    G = Math.floor(I);
                    L = I - G;
                    ay[ar] = Math.max(ar, 765 * (az[G] + L * K[G]) / R)
                }
                for (ar = Y = 1; Y <= 765; ar = Y += 1) {
                    ay[ar] /= ar
                }
                N[A + w * aa] = ay
            }
        }
        for (ar = W = 0, p = e.width - 1; W <= p; ar = W += 1) {
            for (ap = V = 0, m = e.height - 1; V <= m; ap = V += 1) {
                an = (ar + ap * e.width) * 4;
                U = Math.min(aa - 1.0001, Math.max(0, aa * ar / e.width - 0.5));
                T = Math.min(aa - 1.0001, Math.max(0, aa * ap / e.height - 0.5));
                O = Math.floor(U);
                q = Math.floor(T);
                ah = U - O;
                M = T - q;
                ae = av.data[an];
                au = av.data[an + 1];
                ax = av.data[an + 2];
                c = Math.floor(ae * 1.5 + au * 1 + ax * 0.5);
                X = (N[O + q * aa][c] * (1 - ah) + N[O + 1 + q * aa][c] * ah) * (1 - M) + (N[O + (q + 1) * aa][c] * (1 - ah) + N[O + 1 + (q + 1) * aa][c] * ah) * M;
                aw = (c - X * c) / 3;
                ae = 0.4 * (ae * X) + 0.6 * (ae - aw);
                au = 0.4 * (au * X) + 0.6 * (au - aw);
                ax = 0.4 * (ax * X) + 0.6 * (ax - aw);
                av.data[an] = ae;
                av.data[an + 1] = au;
                av.data[an + 2] = ax
            }
        }
        J.putImageData(av, 0, 0);
        return e
    };
    b.prototype.sharpen = function (y, p, h) {
        var x, s, q, m, k, e, w, t, v, u, r, o, g, d, f, c;
        c = [];
        for (x = d = 1, f = p - 2; d <= f; x = d += 1) {
            c.push((function () {
                var l, i, j;
                j = [];
                for (w = l = 1, i = h - 2; l <= i; w = l += 1) {
                    e = (x + w * p) * 4;
                    s = e - p * 4;
                    q = e + p * 4;
                    m = e - 4;
                    k = e + 4;
                    t = y[e] + y[e + 1] + y[e + 2];
                    v = y[s] + y[s + 1] + y[s + 2];
                    u = y[q] + y[q + 1] + y[q + 2];
                    r = y[m] + y[m + 1] + y[m + 2];
                    o = y[k] + y[k + 1] + y[k + 2];
                    if (t > 0) {
                        g = (t + 1 * (t - 0.25 * (v + u + r + o))) / t;
                        y[e] *= g;
                        y[e + 1] *= g;
                        j.push(y[e + 2] *= g)
                    } else {
                        j.push(void 0)
                    }
                }
                return j
            })())
        }
        return c
    };
    b.prototype.expand = function (B, t, s) {
        var A, z, p, y, w, x, u, q, l, D, o, h, j, f, e, d, c, C, m;
        p = [];
        for (y = j = 0; j <= 765; y = ++j) {
            p[y] = 0
        }
        l = t * s * 0.0001;
        D = t * s * 4 - 4;
        for (w = f = 0; f <= D; w = f += 4) {
            p[Math.floor(1.5 * B[w] + B[w + 1] + B[w + 2] * 0.5)]++
        }
        for (y = e = 765; e >= 0; y = --e) {
            if (p[y] > l) {
                u = y
            }
        }
        for (y = d = 0; d <= 765; y = ++d) {
            if (p[y] > l) {
                x = y
            }
        }
        u = Math.min(48 * 3, u);
        x = Math.max(208 * 3, x);
        h = [];
        h[0] = 0;
        for (y = c = 1; c <= 765; y = ++c) {
            h[y] = Math.max(0, Math.min(765, (y - u) * 765 / (x - u))) / y
        }
        for (w = C = 0, m = t * s * 4 - 4; C <= m; w = C += 4) {
            q = B[w];
            z = B[w + 1];
            A = B[w + 2];
            o = h[Math.floor(q * 1.5 + z + A * 0.5)];
            B[w] = q * o;
            B[w + 1] = z * o;
            B[w + 2] = A * o
        }
        return true
    };
    return b
})(_kw7);
module.exports = this._kw21;
var _kw7, KWC, __hasProp = {}.hasOwnProperty,
    __extends = function (d, b) {
        for (var a in b) {
            if (__hasProp.call(b, a)) {
                d[a] = b[a]
            }
        }

        function c() {
            this.constructor = d
        }
        c.prototype = b.prototype;
        d.prototype = new c();
        d.__super__ = b.prototype;
        return d
    };
KWC = require("../../wrapper.js", KWC);
_kw7 = require("./filter.coffee", _kw7);
this._kw14 = (function (b) {
    __extends(a, b);

    function a() {
        a.__super__.constructor.call(this, "blur", "Blur")
    }
    a.prototype._kw9 = function (e) {
        var w, h, x, f, v, u, t, q, y, c, l, k, p, o, s, m;
        h = KWC.createCanvas();
        h.width = e.width;
        h.height = e.height;
        k = e.getContext("2d");
        l = k.getImageData(0, 0, e.width, e.height);
        f = h.getContext("2d");
        x = f.getImageData(0, 0, h.width, h.height);
        y = h.width * 4;
        for (t = p = 1, s = h.width - 2; 1 <= s ? p <= s : p >= s; t = 1 <= s ? ++p : --p) {
            for (q = o = 1, m = h.height - 2; 1 <= m ? o <= m : o >= m; q = 1 <= m ? ++o : --o) {
                v = (t + q * h.width) * 4;
                c = l.data[v - 4] + l.data[v - y] + l.data[v + 4] + l.data[v + y] + l.data[v - 4 - y] + l.data[v + 4 - y] + l.data[v - 4 + y] + l.data[v + 4 + y];
                u = l.data[v - 3] + l.data[v - y + 1] + l.data[v + 5] + l.data[v + y + 1] + l.data[v - 3 - y] + l.data[v + 5 - y] + l.data[v - 3 + y] + l.data[v + 5 + y];
                w = l.data[v - 2] + l.data[v - y + 2] + l.data[v + 6] + l.data[v + y + 2] + l.data[v - 2 - y] + l.data[v + 6 - y] + l.data[v - 2 + y] + l.data[v + 6 + y];
                x.data[v] = c * 0.125;
                x.data[v + 1] = u * 0.125;
                x.data[v + 2] = w * 0.125;
                x.data[v + 3] = 255
            }
        }
        f.putImageData(x, 0, 0);
        return h
    };
    return a
})(_kw7);
module.exports = this._kw14;
var _kw14, _kw21, _kw7, KWC, __hasProp = {}.hasOwnProperty,
    __extends = function (d, b) {
        for (var a in b) {
            if (__hasProp.call(b, a)) {
                d[a] = b[a]
            }
        }

        function c() {
            this.constructor = d
        }
        c.prototype = b.prototype;
        d.prototype = new c();
        d.__super__ = b.prototype;
        return d
    };
_kw7 = require("./filter.coffee", _kw7);
_kw21 = require("./enhance.coffee", _kw21);
_kw14 = require("./blur.coffee", _kw14);
KWC = require("../../wrapper.js", KWC);
this._kw16 = (function (b) {
    __extends(a, b);

    function a() {
        a.__super__.constructor.call(this, "comics", "Comics");
        this.pushParameter("slider", 0.5, "Colors", false);
        this.pushParameter("slider", 0.5, "Pencil", false)
    }
    a.prototype._kw9 = function (t) {
        var F, h, q, E, x, D, C, B, A, e, v, z, u, y, G, o, l, f, c, w, s, p, m;
        q = t.getContext("2d");
        new _kw21()._kw9(t);
        if (Math.max(t.width, t.height) > 500) {
            t = new _kw14()._kw9(t)
        }
        q = t.getContext("2d");
        h = q.getImageData(0, 0, t.width, t.height);
        z = this._kw22(t, h);
        e = 9 - 6 * this.parameters[0].value;
        x = (256 / e) | 0;
        v = x * 0.5;
        G = Math.max(2, 3 * Math.max(t.width, t.height) / 500) | 0;
        for (C = o = 0, w = t.width - 1; 0 <= w ? o <= w : o >= w; C = 0 <= w ? ++o : --o) {
            for (B = l = 0, s = t.height - 1; 0 <= s ? l <= s : l >= s; B = 0 <= s ? ++l : --l) {
                E = (C + B * t.width) * 4;
                h.data[E] = y = ((((h.data[E] + v) / x) | 0) * x) | 0;
                h.data[E + 1] = D = ((((h.data[E + 1] + v) / x) | 0) * x) | 0;
                h.data[E + 2] = F = ((((h.data[E + 2] + v) / x) | 0) * x) | 0;
                u = G * 4 * t.width;
                if (B >= G && h.data[E - u] === y && h.data[E - u + 1] === D && h.data[E - u + 2] === F) {
                    for (A = f = 1, p = G - 1; 1 <= p ? f <= p : f >= p; A = 1 <= p ? ++f : --f) {
                        u = 4 * A * t.width;
                        h.data[E - u] = y;
                        h.data[E - u + 1] = D;
                        h.data[E - u + 2] = F
                    }
                }
                if (C >= G && h.data[E - G * 4] === y && h.data[E - G * 4 + 1] === D && h.data[E - G * 4 + 2] === F) {
                    for (A = c = 1, m = G - 1; 1 <= m ? c <= m : c >= m; A = 1 <= m ? ++c : --c) {
                        h.data[E - A * 4] = y;
                        h.data[E - A * 4 + 1] = D;
                        h.data[E - A * 4 + 2] = F
                    }
                }
            }
        }
        q.putImageData(h, 0, 0);
        if (Math.max(t.width, t.height) > 500) {
            t = new _kw14()._kw9(t);
            q = t.getContext("2d")
        }
        q.drawImage(z, 0, 0);
        return t
    };
    a.prototype._kw22 = function (f, w) {
        var u, g, x, t, v, e, r, o, m, s, q, l, k, p, h;
        u = KWC.createCanvas();
        u.width = f.width;
        u.height = f.height;
        x = u.getContext("2d");
        g = x.getImageData(0, 0, u.width, u.height);
        s = 96 - this.parameters[1].value * 64;
        m = Math.max(1, Math.max(f.width, f.height) / 400) | 0;
        e = m * 4;
        q = m * 4 * u.width;
        for (r = l = m, p = u.width - 1; m <= p ? l <= p : l >= p; r = m <= p ? ++l : --l) {
            for (o = k = m, h = u.height - 1; m <= h ? k <= h : k >= h; o = m <= h ? ++k : --k) {
                t = (r + o * u.width) * 4;
                v = Math.abs(w.data[t] - w.data[t - e]) + Math.abs(w.data[t + 1] - w.data[t - e + 1]) + Math.abs(w.data[t + 2] - w.data[t - e + 2]) + Math.abs(w.data[t] - w.data[t - q]) + Math.abs(w.data[t + 1] - w.data[t - q + 1]) + Math.abs(w.data[t + 2] - w.data[t - q + 2]);
                if (v > s) {
                    g.data[t] = 0;
                    g.data[t + 1] = 0;
                    g.data[t + 2] = 0;
                    g.data[t + 3] = Math.min(255, (v - s) / s * 255)
                }
            }
        }
        x.putImageData(g, 0, 0);
        return u
    };
    return a
})(_kw7);
module.exports = this._kw16;
var _kw7, __hasProp = {}.hasOwnProperty,
    __extends = function (d, b) {
        for (var a in b) {
            if (__hasProp.call(b, a)) {
                d[a] = b[a]
            }
        }

        function c() {
            this.constructor = d
        }
        c.prototype = b.prototype;
        d.prototype = new c();
        d.__super__ = b.prototype;
        return d
    };
_kw7 = require("./filter.coffee", _kw7);
this._kw18 = (function (b) {
    __extends(a, b);

    function a() {
        a.__super__.constructor.call(this, "noise", "Noise");
        this.pushParameter("slider", 0.5, "Quantity", false)
    }
    a.prototype._kw9 = function (e) {
        var v, u, t, s, p, w, m, c, h, f, o, l, q, k;
        f = e.getContext("2d");
        h = f.getImageData(0, 0, e.width, e.height);
        w = e.width * 4;
        m = this.parameters[0].value * 100;
        for (s = o = 1, q = e.width - 2; 1 <= q ? o <= q : o >= q; s = 1 <= q ? ++o : --o) {
            for (p = l = 1, k = e.height - 2; 1 <= k ? l <= k : l >= k; p = 1 <= k ? ++l : --l) {
                u = (s + p * e.width) * 4;
                c = Math.max(0, Math.min(255, h.data[u] + (Math.random() - 0.5) * m));
                t = Math.max(0, Math.min(255, h.data[u + 1] + (Math.random() - 0.5) * m));
                v = Math.max(0, Math.min(255, h.data[u + 2] + (Math.random() - 0.5) * m));
                h.data[u] = c;
                h.data[u + 1] = t;
                h.data[u + 2] = v
            }
        }
        f.putImageData(h, 0, 0);
        return e
    };
    return a
})(_kw7);
module.exports = this._kw18;
var _kw7, __hasProp = {}.hasOwnProperty,
    __extends = function (d, b) {
        for (var a in b) {
            if (__hasProp.call(b, a)) {
                d[a] = b[a]
            }
        }

        function c() {
            this.constructor = d
        }
        c.prototype = b.prototype;
        d.prototype = new c();
        d.__super__ = b.prototype;
        return d
    };
_kw7 = require("./filter.coffee", _kw7);
this._kw28 = (function (b) {
    __extends(a, b);

    function a() {
        a.__super__.constructor.call(this, "saturation", "Saturation");
        this.pushParameter("slider", 0.55, "Quantity", false);
        this.demo = [1]
    }
    a.prototype._kw9 = function (e) {
        var v, u, s, w, q, o, x, c, t, h, f, m, l, p, k;
        f = e.getContext("2d");
        h = f.getImageData(0, 0, e.width, e.height);
        x = e.width * 4;
        t = this.parameters[0].value * 2;
        for (q = m = 1, p = e.width - 2; 1 <= p ? m <= p : m >= p; q = 1 <= p ? ++m : --m) {
            for (o = l = 1, k = e.height - 2; 1 <= k ? l <= k : l >= k; o = 1 <= k ? ++l : --l) {
                u = (q + o * e.width) * 4;
                c = h.data[u];
                s = h.data[u + 1];
                v = h.data[u + 2];
                w = (c + s + v) * 0.333333333;
                c = Math.max(0, Math.min(255, w + (c - w) * t));
                s = Math.max(0, Math.min(255, w + (s - w) * t));
                v = Math.max(0, Math.min(255, w + (v - w) * t));
                h.data[u] = c;
                h.data[u + 1] = s;
                h.data[u + 2] = v
            }
        }
        f.putImageData(h, 0, 0);
        return e
    };
    return a
})(_kw7);
module.exports = this._kw28;
var _kw14, _kw21, _kw7, KWC, __hasProp = {}.hasOwnProperty,
    __extends = function (d, b) {
        for (var a in b) {
            if (__hasProp.call(b, a)) {
                d[a] = b[a]
            }
        }

        function c() {
            this.constructor = d
        }
        c.prototype = b.prototype;
        d.prototype = new c();
        d.__super__ = b.prototype;
        return d
    };
KWC = require("../../wrapper.js", KWC);
_kw7 = require("./filter.coffee", _kw7);
_kw21 = require("./enhance.coffee", _kw21);
_kw14 = require("./blur.coffee", _kw14);
this._kw23 = (function (a) {
    __extends(b, a);

    function b() {
        b.__super__.constructor.call(this, "popart", "Pop Art");
        this.cropped = true
    }
    b.prototype._kw9 = function (e, h, g, j, f) {
        var k, c, i, d;
        if (h == null) {
            h = 0
        }
        if (g == null) {
            g = 0
        }
        if (j == null) {
            j = 1
        }
        if (f == null) {
            f = 1
        }
        c = e.getContext("2d");
        new _kw21()._kw9(e);
        if (Math.max(e.width, e.height) > 500) {
            e = new _kw14()._kw9(e)
        }
        c = e.getContext("2d");
        h = (h * e.width) | 0;
        g = (g * e.height) | 0;
        j = (j * e.width) | 0;
        f = (f * e.height) | 0;
        k = c.getImageData(0, 0, e.width, e.height);
        d = this._kw22(e, k, h, g, j, f);
        i = this._kw24(e, k, h, g, j, f);
        c.clearRect(0, 0, e.width, e.height);
        c.fillStyle = "#FF8";
        c.fillRect(h, g, j * 0.5, f * 0.5);
        c.fillStyle = "#F8F";
        c.fillRect(h + j * 0.5, g, j * 0.5, f * 0.5);
        c.fillStyle = "#8F8";
        c.fillRect(h, g + f * 0.5, j * 0.5, f * 0.5);
        c.fillStyle = "#8FF";
        c.fillRect(h + j * 0.5, g + f * 0.5, j * 0.5, f * 0.5);
        c.drawImage(i, h, g, j * 0.5, f * 0.5);
        c.drawImage(i, h + j * 0.5, g, j * 0.5, f * 0.5);
        c.drawImage(i, h, g + f * 0.5, j * 0.5, f * 0.5);
        c.drawImage(i, h + j * 0.5, g + f * 0.5, j * 0.5, f * 0.5);
        c.drawImage(d, h, g, j * 0.5, f * 0.5);
        c.drawImage(d, h + j * 0.5, g, j * 0.5, f * 0.5);
        c.drawImage(d, h, g + f * 0.5, j * 0.5, f * 0.5);
        c.drawImage(d, h + j * 0.5, g + f * 0.5, j * 0.5, f * 0.5);
        return e
    };
    b.prototype._kw22 = function (q, g, f, e, h, t) {
        var D, y, z, C, w, v, B, A, s, r, x, m, k, u, p, o, l;
        D = KWC.createCanvas();
        D.width = h;
        D.height = t;
        z = D.getContext("2d");
        y = z.getImageData(0, 0, D.width, D.height);
        r = 64;
        s = Math.max(1, Math.max(q.width, q.height) / 400) | 0;
        v = s * 4;
        x = s * 4 * q.width;
        for (B = m = u = f + s, p = f + D.width - 1; u <= p ? m <= p : m >= p; B = u <= p ? ++m : --m) {
            for (A = k = o = e + s, l = e + D.height - 1; o <= l ? k <= l : k >= l; A = o <= l ? ++k : --k) {
                C = (B + A * q.width) * 4;
                w = Math.abs(g.data[C] - g.data[C - v]) + Math.abs(g.data[C + 1] - g.data[C - v + 1]) + Math.abs(g.data[C + 2] - g.data[C - v + 2]) + Math.abs(g.data[C] - g.data[C - x]) + Math.abs(g.data[C + 1] - g.data[C - x + 1]) + Math.abs(g.data[C + 2] - g.data[C - x + 2]);
                C = (B - f + (A - e) * h) * 4;
                if (w > r) {
                    y.data[C] = 0;
                    y.data[C + 1] = 0;
                    y.data[C + 2] = 0;
                    y.data[C + 3] = Math.min(255, (w - r) / r * 255)
                }
            }
        }
        z.putImageData(y, 0, 0);
        return D
    };
    b.prototype._kw24 = function (q, h, f, e, k, s) {
        var G, F, x, w, y, E, B, m, D, A, u, z, C, v, o, l, t, p;
        F = KWC.createCanvas();
        F.width = k;
        F.height = s;
        y = F.getContext("2d");
        w = y.getImageData(0, 0, F.width, F.height);
        m = 2 * Math.max(q.width, q.height) / 500;
        for (A = o = f, t = f + k - 1; f <= t ? o <= t : o >= t; A = f <= t ? ++o : --o) {
            for (z = l = e, p = e + s - 1; e <= p ? l <= p : l >= p; z = e <= p ? ++l : --l) {
                E = (A + z * q.width) * 4;
                v = h.data[E];
                B = h.data[E + 1];
                G = h.data[E + 2];
                D = v + B + G;
                if (D < 384) {
                    u = A * 0.71 + z * 0.71;
                    C = Math.abs(-A * 0.71 + z * 0.71);
                    x = (Math.abs(u % (2 * m) - m) + Math.abs(C % (2 * m) - m)) < D / (384 / 2 / m) ? 255 : 0;
                    if (x === 0) {
                        E = (A - f + (z - e) * k) * 4;
                        w.data[E] = x;
                        w.data[E + 1] = x;
                        w.data[E + 2] = x;
                        w.data[E + 3] = 255
                    }
                }
            }
        }
        y.putImageData(w, 0, 0);
        return F
    };
    return b
})(_kw7);
module.exports = this._kw23;
var CanvasRenderingContext2D, _kw7, __hasProp = {}.hasOwnProperty,
    __extends = function (d, b) {
        for (var a in b) {
            if (__hasProp.call(b, a)) {
                d[a] = b[a]
            }
        }

        function c() {
            this.constructor = d
        }
        c.prototype = b.prototype;
        d.prototype = new c();
        d.__super__ = b.prototype;
        return d
    };
_kw7 = require("./filter.coffee", _kw7);
CanvasRenderingContext2D = require("canvas", CanvasRenderingContext2D);
this._kw25 = (function (b) {
    __extends(a, b);

    function a() {
        var c, e, d;
        a.__super__.constructor.call(this, "snapshot", "Snapshot");
        this.parameters.push({
            type: "slider",
            value: 0.5,
            hidden: true,
            name: "Red emphasis"
        });
        this.parameters.push({
            type: "slider",
            value: 0.5,
            hidden: true,
            name: "Green emphasis"
        });
        this.parameters.push({
            type: "slider",
            value: 0.5,
            hidden: true,
            name: "Blue emphasis"
        });
        this.parameters.push({
            type: "slider",
            value: 0.5,
            hidden: true,
            name: "Saturation"
        });
        this.parameters.push({
            type: "slider",
            value: 0.5,
            hidden: true,
            name: "Vignette"
        });
        this.parameters.push({
            type: "slider",
            value: 0.5,
            hidden: true,
            name: "HDR"
        });
        this.presets = [{
            name: "Enhanced 1",
            values: [0.49, 0.49, 0.49, 0.52, 0, 0.25]
        }, {
            name: "Enhanced 2",
            values: [0.45, 0.45, 0.45, 0.54, 0, 0.75]
        }, {
            name: "Vintage 1",
            values: [0.92, 0.86, 0.86, 0.21, 0, 0.89]
        }, {
            name: "Vintage 2",
            values: [0.55, 0.63, 0.74, 0.45, 0, 0.41]
        }, {
            name: "Vintage 3",
            values: [0.79, 0.76, 0.78, 0.2, 0.7, 0.25]
        }, {
            name: "Hot 1",
            values: [0.79, 0.58, 0.36, 0.27, 0, 1]
        }, {
            name: "Hot 2",
            values: [0.68, 0.45, 0.36, 0.45, 0.46, 0.5]
        }, {
            name: "Hot 3",
            values: [0.79, 0.76, 0.73, 0.4, 0.22, 0.5]
        }, {
            name: "Lo-Fi 1",
            values: [0.34, 0.29, 0.22, 0.24, 0.46, 0.9]
        }, {
            name: "Lo-Fi 2",
            values: [0.35, 0.43, 0.25, 0.41, 0, 0.46]
        }, {
            name: "Lo-Fi 3",
            values: [0.86, 0.87, 0.92, 0.45, 0, 0.81]
        }, {
            name: "Black & white 1",
            values: [0.52, 0.33, 0.26, 0, 0, 0.23]
        }, {
            name: "Black & white 2",
            values: [0.67, 0.59, 0.19, 0, 0.62, 0.6]
        }, {
            name: "Black & white 3",
            values: [0.25, 0.25, 0.46, 0, 0.5, 0.28]
        }, {
            name: "Mono 1",
            values: [0.91, 0.48, 0, 0.12, 0.54, 0.7]
        }, {
            name: "Mono 2",
            values: [0.2, 0.6, 0.9, 0.07, 0.18, 0.3]
        }, {
            name: "Mono 3",
            values: [0.91, 0.48, 0, 0.12, 0.54, 0.7]
        }, {
            name: "Xtreme 1",
            values: [0.8, 0.8, 0.8, 0.1, 0.8, 0.5]
        }, {
            name: "Xtreme 2",
            values: [0.16, 0.14, 0.18, 0.45, 0.77, 1]
        }, {
            name: "Xtreme 3",
            values: [0.53, 0.42, 0.53, 0.46, 0.16, 0.72]
        }];
        for (c = e = 0, d = this.parameters.length - 1; 0 <= d ? e <= d : e >= d; c = 0 <= d ? ++e : --e) {
            this.parameters[c].value = this.presets[1].values[c]
        }
        this._kw10()
    }
    a.prototype._kw9 = function (y) {
        var ao, P, W, o, al, ac, Z, A, s, q, w, ak, l, h, D, X, u, aj, ah, af, p, z, am, aa, e, m, f, ar, S, L, B, aq, I, c, C, K, an, ap, x, ai, ag, ae, ad, ab, Y, V, U, T, R, N, t, Q, O, M, J, H, G, F, E;
        I = y.getContext("2d");
        aq = I.getImageData(0, 0, y.width, y.height);
        u = [];
        for (aj = ai = 0; ai <= 767; aj = ++ai) {
            u[aj] = 0
        }
        c = y.width * y.height * 0.0005;
        A = aq.data;
        C = y.width * y.height * 4;
        af = 0;
        while (af < C) {
            u[A[af] + A[af + 1] + A[af + 2]]++;
            af += 4
        }
        for (aj = ag = 0; ag <= 255; aj = ag += 1) {
            u[aj] = u[aj * 3] + u[aj * 3 + 1] + u[aj * 3 + 2]
        }
        for (aj = ae = 255; ae >= 0; aj = ae += -1) {
            if (u[aj] > c) {
                am = aj
            }
        }
        for (aj = ad = 0; ad <= 255; aj = ad += 1) {
            if (u[aj] > c) {
                z = aj
            }
        }
        an = [];
        for (aj = ab = 0; ab <= 255; aj = ++ab) {
            an[aj] = Math.max(0, Math.min(255, (aj - am) * 255 / (z - am))) | 0
        }
        p = y.width * 4;
        ap = (y.width * y.width + y.height * y.height) / 4 * (1 - this.parameters[4].value + 0.25) * 2;
        ap = 1 / ap;
        L = this.parameters[3].value * 2;
        B = [];
        h = [];
        P = [];
        ar = this.parameters[0].value > 0.5 ? (1 - this.parameters[0].value) * 2 : Math.pow((1 - this.parameters[0].value) * 2, 3);
        f = this.parameters[1].value > 0.5 ? (1 - this.parameters[1].value) * 2 : Math.pow((1 - this.parameters[1].value) * 2, 3);
        m = this.parameters[2].value > 0.5 ? (1 - this.parameters[2].value) * 2 : Math.pow((1 - this.parameters[2].value) * 2, 3);
        for (aj = Y = 0; Y <= 255; aj = Y += 1) {
            B[aj] = (255 * Math.pow(an[aj] / 255, ar)) | 0;
            h[aj] = (255 * Math.pow(an[aj] / 255, f)) | 0;
            P[aj] = (255 * Math.pow(an[aj] / 255, m)) | 0
        }
        u = [];
        for (aj = V = 0; V <= 767; aj = ++V) {
            u[aj] = 0
        }
        X = y.width * 0.5;
        D = y.height * 0.5;
        al = 0;
        ac = 1;
        Z = 2;
        for (ah = U = 0, N = y.height - 1; U <= N; ah = U += 1) {
            q = ah - D;
            w = q * q;
            for (aj = T = 0, t = y.width - 1; T <= t; aj = T += 1) {
                S = B[A[al]];
                ak = h[A[ac]];
                ao = P[A[Z]];
                s = aj - X;
                K = 1 - (s * s + w) * ap;
                l = (S + ak + ao) * 0.333333333;
                A[al] = (l + (S - l) * L) * K;
                A[ac] = (l + (ak - l) * L) * K;
                A[Z] = (l + (ao - l) * L) * K;
                u[A[al] + A[ac] + A[Z]]++;
                al += 4;
                ac += 4;
                Z += 4
            }
        }
        for (aj = R = 0; R <= 255; aj = R += 1) {
            u[aj] = u[aj * 3] + u[aj * 3 + 1] + u[aj * 3 + 2]
        }
        W = [];
        o = 0;
        for (aj = Q = 0; Q <= 255; aj = Q += 1) {
            o += u[aj];
            W[aj] = o
        }
        aa = y.width * y.height;
        an = [];
        for (aj = O = 0; O <= 255; aj = ++O) {
            an[aj] = (aj * (1 - this.parameters[5].value) + this.parameters[5].value * (255 * (W[aj] - W[0]) / (aa - W[0]))) | 0
        }
        e = [];
        for (aj = M = 0; M <= 255; aj = M += 1) {
            e[aj] = 0
        }
        for (aj = J = 0; J <= 255; aj = J += 1) {
            e[an[aj]] += u[aj]
        }
        for (aj = H = 255; H >= 0; aj = H += -1) {
            if (e[aj] > c) {
                am = aj
            }
        }
        for (aj = G = 0; G <= 255; aj = G += 1) {
            if (e[aj] > c) {
                z = aj
            }
        }
        K = [];
        for (aj = F = 0; F <= 255; aj = ++F) {
            K[aj] = Math.max(0, Math.min(255, (aj - am) * 255 / (z - am))) | 0
        }
        for (aj = E = 0; E <= 255; aj = ++E) {
            an[aj] = K[an[aj]]
        }
        C = y.width * y.height * 4 - 4;
        ac = 1;
        Z = 2;
        for (af = x = 0; x <= C; af = x += 4) {
            A[af] = an[A[af]];
            A[af + 1] = an[A[af + 1]];
            A[af + 2] = an[A[af + 2]]
        }
        I.putImageData(aq, 0, 0);
        return y
    };
    a.prototype._kw131 = function (g) {
        var h, d, f, e;
        e = (this.parameters[6].value * 0.1 * Math.min(g.width, g.height)) | 0;
        f = (this.parameters[7].value * 0.1 * Math.min(g.width, g.height)) | 0;
        h = KWC.createCanvas();
        h.width = g.width + 2 * e;
        h.height = g.height + 2 * e;
        d = h.getContext("2d");
        d.roundRect(e, e, h.width - 2 * e, h.height - 2 * e, f);
        d.fill();
        d.globalCompositeOperation = "source-in";
        d.drawImage(g, e, e, h.width - 2 * e, h.height - 2 * e);
        d.globalCompositeOperation = "destination-over";
        d.fillStyle = "rgb(" + ((this.parameters[8].value * 255) | 0) + "," + ((this.parameters[9].value * 255) | 0) + "," + ((this.parameters[10].value * 255) | 0) + ")";
        d.fillRect(0, 0, h.width, h.height);
        g = h;
        return g
    };
    return a
})(_kw7);
module.exports = this._kw25;
var _kw7, __hasProp = {}.hasOwnProperty,
    __extends = function (d, b) {
        for (var a in b) {
            if (__hasProp.call(b, a)) {
                d[a] = b[a]
            }
        }

        function c() {
            this.constructor = d
        }
        c.prototype = b.prototype;
        d.prototype = new c();
        d.__super__ = b.prototype;
        return d
    };
_kw7 = require("./filter.coffee", _kw7);
this._kw26 = (function (b) {
    __extends(a, b);

    function a() {
        a.__super__.constructor.call(this, "denoise", "Denoise")
    }
    a.prototype._kw9 = function (u) {
        var z, y, x, w, o, t, p, h, v, q, l, r, s, f, e, c, m, g;
        s = u.getContext("2d");
        r = s.getImageData(0, 0, u.width, u.height);
        o = u.width * 4;
        for (w = f = 0; f <= 3; w = ++f) {
            for (y = e = 1, m = u.width - 2; 1 <= m ? e <= m : e >= m; y = 1 <= m ? ++e : --e) {
                for (x = c = 1, g = u.height - 2; 1 <= g ? c <= g : c >= g; x = 1 <= g ? ++c : --c) {
                    z = (y + x * u.width) * 4;
                    h = r.data[z - 4];
                    l = r.data[z - 4];
                    p = r.data[z - 3];
                    q = r.data[z - 3];
                    t = r.data[z - 2];
                    v = r.data[z - 2];
                    h = Math.max(h, r.data[z + 4]);
                    l = Math.min(l, r.data[z + 4]);
                    p = Math.max(p, r.data[z + 5]);
                    q = Math.min(q, r.data[z + 5]);
                    t = Math.max(t, r.data[z + 6]);
                    v = Math.min(v, r.data[z + 6]);
                    h = Math.max(h, r.data[z - o]);
                    l = Math.min(l, r.data[z - o]);
                    p = Math.max(p, r.data[z - o + 1]);
                    q = Math.min(q, r.data[z - o + 1]);
                    t = Math.max(t, r.data[z - o + 2]);
                    v = Math.min(v, r.data[z - o + 2]);
                    h = Math.max(h, r.data[z + o]);
                    l = Math.min(l, r.data[z + o]);
                    p = Math.max(p, r.data[z + o + 1]);
                    q = Math.min(q, r.data[z + o + 1]);
                    t = Math.max(t, r.data[z + o + 2]);
                    v = Math.min(v, r.data[z + o + 2]);
                    r.data[z] = Math.max(l, Math.min(h, r.data[z]));
                    r.data[z + 1] = Math.max(q, Math.min(p, r.data[z + 1]));
                    r.data[z + 2] = Math.max(v, Math.min(t, r.data[z + 2]))
                }
            }
        }
        s.putImageData(r, 0, 0);
        return u
    };
    return a
})(_kw7);
module.exports = this._kw26;
var _kw7, __hasProp = {}.hasOwnProperty,
    __extends = function (d, b) {
        for (var a in b) {
            if (__hasProp.call(b, a)) {
                d[a] = b[a]
            }
        }

        function c() {
            this.constructor = d
        }
        c.prototype = b.prototype;
        d.prototype = new c();
        d.__super__ = b.prototype;
        return d
    };
_kw7 = require("./filter.coffee", _kw7);
this._kw30 = (function (b) {
    __extends(a, b);

    function a() {
        a.__super__.constructor.call(this, "hsl", "HSL");
        this.parameters.push({
            type: "slider",
            value: 0.5,
            name: "Hue"
        });
        this.parameters.push({
            type: "slider",
            value: 0.5,
            name: "Saturation"
        });
        this.parameters.push({
            type: "slider",
            value: 0.5,
            name: "Lightness"
        });
        this.demo = [0.75, 0.6, 0.5]
    }
    a.prototype._kw9 = function (x) {
        var E, k, D, A, C, B, w, u, s, z, y, h, p, q, l, m, t, v, e, c, o, f;
        v = x.getContext("2d");
        t = v.getImageData(0, 0, x.width, x.height);
        w = Math.sqrt(Math.max(0, Math.cos((this.parameters[0].value - 0.5) * Math.PI * 2)));
        u = Math.sqrt(Math.max(0, Math.cos((this.parameters[0].value - 0.5 - 0.3333333) * Math.PI * 2)));
        s = Math.sqrt(Math.max(0, Math.cos((this.parameters[0].value - 0.5 - 0.6666666) * Math.PI * 2)));
        p = x.width * 4;
        l = this.parameters[1].value * 2;
        if (this.parameters[1].value > 0.5) {
            l = 1 + (this.parameters[1].value - 0.5) * 3
        }
        h = (this.parameters[2].value - 0.5) * 510;
        for (z = e = 1, o = x.width - 2; 1 <= o ? e <= o : e >= o; z = 1 <= o ? ++e : --e) {
            for (y = c = 1, f = x.height - 2; 1 <= f ? c <= f : c >= f; y = 1 <= f ? ++c : --c) {
                D = (z + y * x.width) * 4;
                m = t.data[D];
                C = t.data[D + 1];
                k = t.data[D + 2];
                q = m * w + C * u + k * s;
                A = C * w + k * u + m * s;
                E = k * w + m * u + C * s;
                B = (q + A + E) * 0.333333333;
                q = Math.max(0, Math.min(255, B + (q - B) * l)) + h;
                A = Math.max(0, Math.min(255, B + (A - B) * l)) + h;
                E = Math.max(0, Math.min(255, B + (E - B) * l)) + h;
                t.data[D] = q;
                t.data[D + 1] = A;
                t.data[D + 2] = E
            }
        }
        v.putImageData(t, 0, 0);
        return x
    };
    return a
})(_kw7);
module.exports = this._kw30;
var _kw7, __hasProp = {}.hasOwnProperty,
    __extends = function (d, b) {
        for (var a in b) {
            if (__hasProp.call(b, a)) {
                d[a] = b[a]
            }
        }

        function c() {
            this.constructor = d
        }
        c.prototype = b.prototype;
        d.prototype = new c();
        d.__super__ = b.prototype;
        return d
    };
_kw7 = require("./filter.coffee", _kw7);
this.GenericFrameFilter = (function (a) {
    __extends(b, a);

    function b() {
        b.__super__.constructor.call(this, "genericframe", "_kw32");
        this.parameters.push({
            type: "slider",
            value: 0.5,
            name: "Thickness"
        });
        this.parameters.push({
            type: "slider",
            value: 0.5,
            name: "Roundness"
        });
        this.parameters.push({
            type: "slider",
            value: 0.5,
            name: "Shadow"
        });
        this.demo = [1]
    }
    b.prototype._kw9 = function (d) {
        var i, h, g, l, e, f, k, j;
        j = this.parameters[0].value * 40;
        f = this.parameters[1].value * 80;
        k = this.parameters[2].value * 40;
        i = KWC.createCanvas();
        i.width = 2 + d.width + (j + k) * 2;
        i.height = 2 + d.height + (j + k) * 2;
        l = i.getContext("2d");
        l.roundRect(i.width / 2 - d.width / 2, i.height / 2 - d.height / 2, d.width, d.height, f);
        l.fill();
        l.globalCompositeOperation = "source-in";
        l.drawImage(d, i.width / 2 - d.width / 2, i.height / 2 - d.height / 2, d.width, d.height);
        h = KWC.createCanvas();
        h.width = 2 + d.width + (j + k) * 2;
        h.height = 2 + d.height + (j + k) * 2;
        e = 0;
        if (f > 0) {
            e = f + j
        }
        g = h.getContext("2d");
        g.fillStyle = "#FFF";
        g.shadowColor = "#000";
        g.shadowBlur = k;
        g.fillStyle = "#FFF";
        g.roundRect(h.width / 2 - d.width / 2 - j, h.height / 2 - d.height / 2 - j, d.width + 2 * j, d.height + 2 * j, e);
        g.fill();
        g.drawImage(i, 0, 0);
        return h
    };
    return b
})(_kw7);
CanvasRenderingContext2D.prototype.roundRect = function (a, e, b, c, d) {
    if (b < 2 * d) {
        d = b / 2
    }
    if (c < 2 * d) {
        d = c / 2
    }
    this.beginPath();
    this.moveTo(a + d, e);
    this.arcTo(a + b, e, a + b, e + c, d);
    this.arcTo(a + b, e + c, a, e + c, d);
    this.arcTo(a, e + c, a, e, d);
    this.arcTo(a, e, a + b, e, d);
    this.closePath();
    return this
};
module.exports = this.GenericFrameFilter;
var CanvasRenderingContext2D, _kw7, KWC, __hasProp = {}.hasOwnProperty,
    __extends = function (d, b) {
        for (var a in b) {
            if (__hasProp.call(b, a)) {
                d[a] = b[a]
            }
        }

        function c() {
            this.constructor = d
        }
        c.prototype = b.prototype;
        d.prototype = new c();
        d.__super__ = b.prototype;
        return d
    };
KWC = require("../../wrapper.js", KWC);
_kw7 = require("./filter.coffee", _kw7);
CanvasRenderingContext2D = require("canvas", CanvasRenderingContext2D);
this._kw27 = (function (b) {
    __extends(a, b);

    function a() {
        var c, e, d;
        a.__super__.constructor.call(this, "printsnap", "Printsnap");
        this.parameters.push({
            type: "slider",
            value: 0.5,
            hidden: true,
            name: "Red emphasis"
        });
        this.parameters.push({
            type: "slider",
            value: 0.5,
            hidden: true,
            name: "Green emphasis"
        });
        this.parameters.push({
            type: "slider",
            value: 0.5,
            hidden: true,
            name: "Blue emphasis"
        });
        this.parameters.push({
            type: "slider",
            value: 0.5,
            hidden: true,
            name: "Saturation"
        });
        this.parameters.push({
            type: "slider",
            value: 0.5,
            hidden: true,
            name: "Vignette"
        });
        this.parameters.push({
            type: "slider",
            value: 0.5,
            hidden: true,
            name: "HDR"
        });
        this.parameters.push({
            type: "slider",
            value: 0.5,
            hidden: true,
            name: "Border width"
        });
        this.parameters.push({
            type: "slider",
            value: 0.5,
            hidden: true,
            name: "Border roundness"
        });
        this.parameters.push({
            type: "slider",
            value: 0.5,
            hidden: true,
            name: "Border Red"
        });
        this.parameters.push({
            type: "slider",
            value: 0.5,
            hidden: true,
            name: "Border Green"
        });
        this.parameters.push({
            type: "slider",
            value: 0.5,
            hidden: true,
            name: "Border Blue"
        });
        this.presets = [{
            name: "Enhanced",
            values: [0.5, 0.5, 0.5, 0.5, 0, 0, 0, 0, 0, 0, 0]
        }, {
            name: "Enhanced",
            values: [0.49, 0.49, 0.49, 0.52, 0, 0.25, 0, 0, 1, 1, 1]
        }, {
            name: "Enhanced",
            values: [0.45, 0.45, 0.45, 0.54, 0, 0.75, 0.5, 0, 0, 0, 0]
        }, {
            name: "Vintage",
            values: [0.92, 0.86, 0.86, 0.21, 0, 0.89, 1, 0.5, 1, 1, 1]
        }, {
            name: "Vintage",
            values: [0.55, 0.63, 0.74, 0.45, 0, 0.41, 0.52, 0.3, 0, 0, 0]
        }, {
            name: "Vintage",
            values: [0.79, 0.76, 0.78, 0.2, 0.7, 0.25, 0.49, 0.08, 1, 1, 1]
        }, {
            name: "Hot",
            values: [0.79, 0.58, 0.36, 0.27, 0, 1, 0.81, 0, 0, 0, 0]
        }, {
            name: "Hot",
            values: [0.68, 0.45, 0.36, 0.45, 0.46, 0.5, 0.5, 0, 1, 0.95, 0.9]
        }, {
            name: "Hot",
            values: [0.79, 0.76, 0.73, 0.4, 0.22, 0.5, 0.6, 0, 1, 0.98, 0.97]
        }, {
            name: "Lo-Fi",
            values: [0.34, 0.29, 0.22, 0.24, 0.46, 0.9, 0, 0, 0, 0, 0]
        }, {
            name: "Lo-Fi",
            values: [0.35, 0.43, 0.25, 0.41, 0, 0.46, 0.5, 0.41, 0, 0, 0]
        }, {
            name: "Lo-Fi",
            values: [0.86, 0.87, 0.92, 0.45, 0, 0.81, 0, 0, 1, 1, 1]
        }, {
            name: "Black & white",
            values: [0.52, 0.33, 0.26, 0, 0, 0.23, 0, 0, 0, 0, 0]
        }, {
            name: "Black & white",
            values: [0.67, 0.59, 0.19, 0, 0.62, 0.6, 0.5, 0.41, 0, 0, 0]
        }, {
            name: "Black & white",
            values: [0.25, 0.25, 0.46, 0, 0.5, 0.28, 0.6, 0, 1, 1, 1]
        }, {
            name: "Mono",
            values: [0.91, 0.48, 0, 0.12, 0.54, 0.7, 0, 0.19, 1, 1, 1]
        }, {
            name: "Mono",
            values: [0.2, 0.6, 0.9, 0.07, 0.18, 0.3, 0.52, 1, 1, 1, 1]
        }, {
            name: "Mono",
            values: [0.91, 0.48, 0, 0.12, 0.54, 0.7, 0.5, 0.19, 1, 1, 1]
        }, {
            name: "Xtreme",
            values: [0.8, 0.8, 0.8, 0.1, 0.8, 0.5, 0.5, 0, 0, 0, 0]
        }, {
            name: "Xtreme",
            values: [0.16, 0.14, 0.18, 0.45, 0.77, 1, 0.34, 0.28, 0, 0, 0]
        }, {
            name: "Xtreme",
            values: [0.53, 0.42, 0.53, 0.46, 0.16, 0.72, 0.6, 1, 0.68, 0.56, 0.68]
        }];
        for (c = e = 0, d = this.parameters.length - 1; 0 <= d ? e <= d : e >= d; c = 0 <= d ? ++e : --e) {
            this.parameters[c].value = this.presets[1].values[c]
        }
        this._kw10()
    }
    a.prototype.randomize = function () {
        var c, e, f, d;
        e = [];
        for (c = f = 0; f <= 4; c = ++f) {
            e[c] = ((Math.random() * 100) | 0) * 0.01
        }
        for (c = d = 0; d <= 4; c = ++d) {
            this.parameters[c].value = e[c]
        }
        return e
    };
    a.prototype._kw132 = function () {
        return this.parameters[6].value * 0.1
    };
    a.prototype._kw9 = function (B) {
        var au, T, aq, aa, A, p, ap, ag, ad, D, t, s, x, ao, m, l, H, ab, w, an, al, aj, q, C, ar, ae, f, o, h, ax, W, P, G, E, aw, M, z, e, F, O, at, av, y, am, ak, ai, ah, af, ac, Z, Y, X, V, R, u, U, S, Q, N, L, K, J, I;
        console.time("printsnap");
        if (this.parameters[0].value === 0.5 && this.parameters[1].value === 0.5 && this.parameters[2].value === 0.5 && this.parameters[3].value === 0.5 && this.parameters[4].value === 0 && this.parameters[5].value === 0 && this.parameters[6].value === 0 && this.parameters[7].value === 0 && this.parameters[8].value === 0 && this.parameters[9].value === 0 && this.parameters[10].value === 0) {
            return B
        }
        M = B.getContext("2d");
        aw = M.getImageData(0, 0, B.width, B.height);
        w = [];
        for (an = am = 0; am <= 767; an = ++am) {
            w[an] = 0
        }
        e = B.width * B.height * 0.0005;
        D = aw.data;
        F = B.width * B.height * 4;
        aj = 0;
        while (aj < F) {
            w[D[aj] + D[aj + 1] + D[aj + 2]]++;
            aj += 4
        }
        for (an = ak = 0; ak <= 255; an = ak += 1) {
            w[an] = w[an * 3] + w[an * 3 + 1] + w[an * 3 + 2]
        }
        for (an = ai = 255; ai >= 0; an = ai += -1) {
            if (w[an] > e) {
                ar = an
            }
        }
        for (an = ah = 0; ah <= 255; an = ah += 1) {
            if (w[an] > e) {
                C = an
            }
        }
        at = [];
        for (an = af = 0; af <= 255; an = ++af) {
            at[an] = Math.max(0, Math.min(255, (an - ar) * 255 / (C - ar))) | 0
        }
        q = B.width * 4;
        av = (B.width * B.width + B.height * B.height) / 4 * (1 - this.parameters[4].value + 0.25) * 2;
        av = 1 / av;
        P = this.parameters[3].value * 2;
        E = [];
        l = [];
        T = [];
        ax = this.parameters[0].value > 0.5 ? (1 - this.parameters[0].value) * 2 : Math.pow((1 - this.parameters[0].value) * 2, 3);
        h = this.parameters[1].value > 0.5 ? (1 - this.parameters[1].value) * 2 : Math.pow((1 - this.parameters[1].value) * 2, 3);
        o = this.parameters[2].value > 0.5 ? (1 - this.parameters[2].value) * 2 : Math.pow((1 - this.parameters[2].value) * 2, 3);
        for (an = ac = 0; ac <= 255; an = ac += 1) {
            E[an] = (255 * Math.pow(at[an] / 255, ax)) | 0;
            l[an] = (255 * Math.pow(at[an] / 255, h)) | 0;
            T[an] = (255 * Math.pow(at[an] / 255, o)) | 0
        }
        w = [];
        for (an = Z = 0; Z <= 767; an = ++Z) {
            w[an] = 0
        }
        ab = B.width * 0.5;
        H = B.height * 0.5;
        ap = 0;
        ag = 1;
        ad = 2;
        for (al = Y = 0, R = B.height - 1; Y <= R; al = Y += 1) {
            s = al - H;
            x = s * s;
            for (an = X = 0, u = B.width - 1; X <= u; an = X += 1) {
                W = E[D[ap]];
                ao = l[D[ag]];
                au = T[D[ad]];
                t = an - ab;
                O = 1 - (t * t + x) * av;
                m = (W + ao + au) * 0.333333333;
                D[ap] = (m + (W - m) * P) * O;
                D[ag] = (m + (ao - m) * P) * O;
                D[ad] = (m + (au - m) * P) * O;
                w[D[ap] + D[ag] + D[ad]]++;
                ap += 4;
                ag += 4;
                ad += 4
            }
        }
        for (an = V = 0; V <= 255; an = V += 1) {
            w[an] = w[an * 3] + w[an * 3 + 1] + w[an * 3 + 2]
        }
        aa = [];
        p = 0;
        for (an = U = 0; U <= 255; an = U += 1) {
            p += w[an];
            aa[an] = p
        }
        ae = B.width * B.height;
        at = [];
        for (an = S = 0; S <= 255; an = ++S) {
            at[an] = (an * (1 - this.parameters[5].value) + this.parameters[5].value * (255 * (aa[an] - aa[0]) / (ae - aa[0]))) | 0
        }
        f = [];
        for (an = Q = 0; Q <= 255; an = Q += 1) {
            f[an] = 0
        }
        for (an = N = 0; N <= 255; an = N += 1) {
            f[at[an]] += w[an]
        }
        for (an = L = 255; L >= 0; an = L += -1) {
            if (f[an] > e) {
                ar = an
            }
        }
        for (an = K = 0; K <= 255; an = K += 1) {
            if (f[an] > e) {
                C = an
            }
        }
        O = [];
        for (an = J = 0; J <= 255; an = ++J) {
            O[an] = Math.max(0, Math.min(255, (an - ar) * 255 / (C - ar))) | 0
        }
        for (an = I = 0; I <= 255; an = ++I) {
            at[an] = O[at[an]]
        }
        F = B.width * B.height * 4 - 4;
        ag = 1;
        ad = 2;
        for (aj = y = 0; y <= F; aj = y += 4) {
            D[aj] = at[D[aj]];
            D[aj + 1] = at[D[aj + 1]];
            D[aj + 2] = at[D[aj + 2]]
        }
        M.putImageData(aw, 0, 0);
        if (this.parameters[6].value > 0) {
            z = (this.parameters[6].value * 0.1 * Math.min(B.width, B.height)) | 0;
            G = (this.parameters[7].value * 0.1 * Math.min(B.width, B.height)) | 0;
            aq = KWC.createCanvas();
            aq.width = B.width + 2 * z;
            aq.height = B.height + 2 * z;
            A = aq.getContext("2d");
            A.roundRect(z, z, aq.width - 2 * z, aq.height - 2 * z, G);
            A.fill();
            A.globalCompositeOperation = "source-in";
            A.drawImage(B, z, z, aq.width - 2 * z, aq.height - 2 * z);
            A.globalCompositeOperation = "destination-over";
            A.fillStyle = "rgb(" + ((this.parameters[8].value * 255) | 0) + "," + ((this.parameters[9].value * 255) | 0) + "," + ((this.parameters[10].value * 255) | 0) + ")";
            A.fillRect(0, 0, aq.width, aq.height);
            B = aq
        }
        console.timeEnd("printsnap");
        return B
    };
    a.prototype._kw131 = function (g) {
        var h, d, f, e;
        e = (this.parameters[6].value * 0.1 * Math.min(g.width, g.height)) | 0;
        f = (this.parameters[7].value * 0.1 * Math.min(g.width, g.height)) | 0;
        h = KWC.createCanvas();
        h.width = g.width + 2 * e;
        h.height = g.height + 2 * e;
        d = h.getContext("2d");
        d.roundRect(e, e, h.width - 2 * e, h.height - 2 * e, f);
        d.fill();
        d.globalCompositeOperation = "source-in";
        d.drawImage(g, e, e, h.width - 2 * e, h.height - 2 * e);
        d.globalCompositeOperation = "destination-over";
        d.fillStyle = "rgb(" + ((this.parameters[8].value * 255) | 0) + "," + ((this.parameters[9].value * 255) | 0) + "," + ((this.parameters[10].value * 255) | 0) + ")";
        d.fillRect(0, 0, h.width, h.height);
        g = h;
        return g
    };
    return a
})(_kw7);
CanvasRenderingContext2D.prototype.roundRect = function (a, e, b, c, d) {
    if (b < 2 * d) {
        d = b / 2
    }
    if (c < 2 * d) {
        d = c / 2
    }
    this.beginPath();
    this.moveTo(a + d, e);
    this.arcTo(a + b, e, a + b, e + c, d);
    this.arcTo(a + b, e + c, a, e + c, d);
    this.arcTo(a, e + c, a, e, d);
    this.arcTo(a, e, a + b, e, d);
    this.closePath();
    return this
};
module.exports = this._kw27;
var _kw7, __hasProp = {}.hasOwnProperty,
    __extends = function (d, b) {
        for (var a in b) {
            if (__hasProp.call(b, a)) {
                d[a] = b[a]
            }
        }

        function c() {
            this.constructor = d
        }
        c.prototype = b.prototype;
        d.prototype = new c();
        d.__super__ = b.prototype;
        return d
    };
_kw7 = require("./filter.coffee", _kw7);
this.MosaicFilter = (function (b) {
    __extends(a, b);

    function a() {
        a.__super__.constructor.call(this, "mosaic", "Mosaic");
        this.pushParameter("slider", 0.75, "Size", false);
        this.pushParameter("opacity", 0.75, "Opacity", false);
        this.pushParameter("scontrast", 0.5, "Source contrast", false);
        this.pushParameter("tcontrast", 0.5, "Tile contrast", false);
        this.demo = [1]
    }
    a.prototype._kw9 = function (F) {
        var ay, Z, M, C, L, at, K, G, ax, l, av, c, I, J, q, ar, ap, an, A, t, E, ai, ag, S, au, ae, ab, Y, ak, m, az, R, h, y, e, aw, H, D, w, f, z, aq, ao, am, al, B, u, aj, ah, af, ad, ac, aa, V, x, v, X, W, U, T, Q, P, O, N;
        R = F.getContext("2d");
        az = R.getImageData(0, 0, F.width, F.height);
        m = 10 + this.parameters[0].value * 70;
        f = Math.max(1, Math.round(F.width / m));
        q = Math.max(1, Math.round(F.height / m));
        t = F.width * 4;
        au = this.parameters[1].value;
        E = manager.getImageList();
        R.save();
        R.globalAlpha = au;
        J = [];
        I = [];
        c = [];
        for (ar = aq = 0; aq <= 255; ar = ++aq) {
            J[ar] = 0
        }
        for (ar = ao = 0; ao <= 255; ar = ++ao) {
            I[ar] = 0
        }
        for (ar = am = 0; am <= 255; ar = ++am) {
            c[ar] = 0
        }
        for (an = al = 0, V = F.width * F.height * 4 - 4; al <= V; an = al += 4) {
            J[az.data[an]]++;
            I[az.data[an + 1]]++;
            c[az.data[an + 2]]++
        }
        G = [];
        at = [];
        C = [];
        K = 0;
        L = 0;
        M = 0;
        for (ar = aj = 0; aj <= 255; ar = ++aj) {
            K += J[ar];
            L += I[ar];
            M += c[ar];
            G[ar] = K;
            at[ar] = L;
            C[ar] = M
        }
        ak = this.parameters[2].value;
        ai = F.width * F.height;
        w = [];
        D = [];
        H = [];
        for (ar = ah = 0; ah <= 255; ar = ++ah) {
            w[ar] = (ar * (1 - ak) + ak * (255 * (G[ar] - G[0]) / ai)) | 0
        }
        for (ar = af = 0; af <= 255; ar = ++af) {
            D[ar] = (ar * (1 - ak) + ak * (255 * (at[ar] - at[0]) / ai)) | 0
        }
        for (ar = ad = 0; ad <= 255; ar = ++ad) {
            H[ar] = (ar * (1 - ak) + ak * (255 * (C[ar] - C[0]) / ai)) | 0
        }
        for (ar = ac = 0; ac <= 255; ar = ++ac) {
            J[ar] = 0
        }
        for (ar = aa = 0; aa <= 255; ar = ++aa) {
            I[ar] = 0
        }
        for (ar = X = 0; X <= 255; ar = ++X) {
            c[ar] = 0
        }
        for (W = 0, B = E.length; W < B; W++) {
            ae = E[W];
            J[ae.stats.red | 0]++;
            I[ae.stats.green | 0]++;
            c[ae.stats.blue | 0]++
        }
        K = 0;
        L = 0;
        M = 0;
        for (ar = U = 0; U <= 255; ar = ++U) {
            K += J[ar];
            L += I[ar];
            M += c[ar];
            G[ar] = K;
            at[ar] = L;
            C[ar] = M
        }
        y = this.parameters[3].value;
        ai = E.length;
        aw = [];
        e = [];
        h = [];
        for (ar = T = 0; T <= 255; ar = ++T) {
            aw[ar] = (ar * (1 - y) + y * (255 * (G[ar] - G[0]) / ai)) | 0
        }
        for (ar = Q = 0; Q <= 255; ar = ++Q) {
            e[ar] = (ar * (1 - y) + y * (255 * (at[ar] - at[0]) / ai)) | 0
        }
        for (ar = P = 0; P <= 255; ar = ++P) {
            h[ar] = (ar * (1 - y) + y * (255 * (C[ar] - C[0]) / ai)) | 0
        }
        A = null;
        S = Math.round(f / 2);
        ag = 0;
        for (ap = O = 1, x = F.height - 2; q > 0 ? O <= x : O >= x; ap = O += q) {
            ag = ag === 0 ? S : 0;
            for (ar = N = 1, v = F.width - 2; f > 0 ? N <= v : N >= v; ar = N += f) {
                ax = (ar + ag + ap * F.width) * 4;
                ab = w[az.data[ax]];
                av = D[az.data[ax + 1]];
                ay = H[az.data[ax + 2]];
                Z = null;
                l = 1000000;
                for (z = 0, u = E.length; z < u; z++) {
                    Y = E[z];
                    ax = Math.abs(h[Y.stats.blue | 0] - ay) + Math.abs(aw[Y.stats.red | 0] - ab) + Math.abs(e[Y.stats.green | 0] - av);
                    if (ax < l && A !== Y) {
                        l = ax;
                        Z = Y
                    }
                }
                if (Z) {
                    R.drawImage(Z.thumbs._kw39(20), ar + ag - f * 0.5, ap - q * 0.5, f, q);
                    A = Z
                }
            }
        }
        R.restore();
        return F
    };
    return a
})(_kw7);
module.exports = this.MosaicFilter;
var _kw13, _kw14, _kw15, _kw16, _kw26, _kw21, HDRFilter, _kw30, MosaicFilter, _kw18, _kw23, _kw27, _kw28, _kw29, _kw25;
_kw21 = require("./enhance.coffee", _kw21);
_kw15 = require("./brightnesscontrast.coffee", _kw15);
HDRFilter = require("./hdr.coffee", HDRFilter);
_kw29 = require("./sepia.coffee", _kw29);
_kw13 = require("./blackwhite.coffee", _kw13);
_kw28 = require("./saturation.coffee", _kw28);
_kw14 = require("./blur.coffee", _kw14);
_kw18 = require("./noise.coffee", _kw18);
_kw23 = require("./popart.coffee", _kw23);
_kw25 = require("./snapshot.coffee", _kw25);
_kw30 = require("./hsl.coffee", _kw30);
_kw26 = require("./denoise.coffee", _kw26);
_kw16 = require("./comicstrip.coffee", _kw16);
_kw27 = require("./printsnap.coffee", _kw27);
MosaicFilter = require("./mosaic.coffee", MosaicFilter);
this.Filters = [];
this._kw31 = function (a) {
    if ((typeof KWP_CONF === "undefined" || KWP_CONF === null) || KWP_CONF.filters.indexOf(a.id) >= 0) {
        return this.Filters[a.id] = a
    }
};
this.registerFilters = function () {
    this._kw31(new _kw15());
    this._kw31(new HDRFilter());
    this._kw31(new _kw29());
    this._kw31(new _kw13());
    this._kw31(new _kw28());
    this._kw31(new _kw14());
    this._kw31(new _kw18());
    this._kw31(new _kw23());
    this._kw31(new _kw25());
    this._kw31(new _kw30());
    this._kw31(new _kw16());
    this._kw31(new _kw27());
    return this._kw31(new MosaicFilter())
};
if (typeof KWP_CONF === "undefined" || KWP_CONF === null) {
    this._kw31(new _kw15());
    this._kw31(new HDRFilter());
    this._kw31(new _kw29());
    this._kw31(new _kw13());
    this._kw31(new _kw28());
    this._kw31(new _kw14());
    this._kw31(new _kw18());
    this._kw31(new _kw23());
    this._kw31(new _kw25());
    this._kw31(new _kw30());
    this._kw31(new _kw16());
    this._kw31(new _kw27());
    this._kw31(new MosaicFilter())
}
module.exports = this.Filters;
this._kw134 = (function () {
    function a(c, b) {
        this.page = c;
        this.border = b
    }
    a.prototype.draw = function (b, d) {
        var c;
        c = b.getContext("2d");
        c.save();
        c.strokeStyle = "#000";
        c.lineWidth = 2;
        c.beginPath();
        c.moveTo(b.width / 2 - this.page.width / 2 * d + this.border.left * d, b.height / 2 - this.page.height / 2 * d);
        c.lineTo(b.width / 2 - this.page.width / 2 * d + this.border.left * d, b.height / 2 + this.page.height / 2 * d);
        c.stroke();
        c.beginPath();
        c.moveTo(b.width / 2 + this.page.width / 2 * d - this.border.right * d, b.height / 2 - this.page.height / 2 * d);
        c.lineTo(b.width / 2 + this.page.width / 2 * d - this.border.right * d, b.height / 2 + this.page.height / 2 * d);
        c.stroke();
        c.beginPath();
        c.moveTo(b.width / 2 - this.page.width / 2 * d, b.height / 2 - this.page.height / 2 * d + this.border.top * d);
        c.lineTo(b.width / 2 + this.page.width / 2 * d, b.height / 2 - this.page.height / 2 * d + this.border.top * d);
        c.stroke();
        c.beginPath();
        c.moveTo(b.width / 2 - this.page.width / 2 * d, b.height / 2 + this.page.height / 2 * d - this.border.bottom * d);
        c.lineTo(b.width / 2 + this.page.width / 2 * d, b.height / 2 + this.page.height / 2 * d - this.border.bottom * d);
        c.stroke();
        c.globalAlpha = 0.5;
        c.fillStyle = "#000";
        c.fillRect(b.width / 2 - this.page.width / 2 * d, b.height / 2 - this.page.height / 2 * d, this.border.left * d, this.border.top * d);
        c.fillRect(b.width / 2 + this.page.width / 2 * d - this.border.right * d, b.height / 2 - this.page.height / 2 * d, this.border.left * d, this.border.top * d);
        c.fillRect(b.width / 2 + this.page.width / 2 * d - this.border.right * d, b.height / 2 + this.page.height / 2 * d - this.border.bottom * d, this.border.left * d, this.border.top * d);
        c.fillRect(b.width / 2 - this.page.width / 2 * d, b.height / 2 + this.page.height / 2 * d - this.border.bottom * d, this.border.left * d, this.border.top * d);
        return c.restore()
    };
    return a
})();
this._kw133 = (function () {
    function a(b) {
        this.page = b
    }
    a.prototype.draw = function (d, g) {
        var e, c, f, b;
        e = d.getContext("2d");
        e.save();
        b = d.width;
        f = d.height;
        c = e.createLinearGradient(b * 0.5, f * 0.5, b * 0.5 - b * 0.075, f * 0.5);
        c.addColorStop(0, "rgba(0,0,0,.2)");
        c.addColorStop(0.95, "rgba(0,0,0,0)");
        e.fillStyle = c;
        e.fillRect(b * 0.5 - b * 0.075, 0, b * 0.075, f);
        c = e.createLinearGradient(b * 0.5, f * 0.5, b * 0.5 + b * 0.0375, f * 0.5);
        c.addColorStop(0, "rgba(0,0,0,.5)");
        c.addColorStop(1, "rgba(255,255,255,0)");
        e.fillStyle = c;
        e.fillRect(b * 0.5, 0, b * 0.0375, f);
        return e.restore()
    };
    return a
})();
var _kw33;
_kw33 = require("../settings.coffee", _kw33);
this._kw135 = (function () {
    function a(b, f, g, j) {
        var e, k, c, h, d;
        this.canvas = b;
        this.creation = f;
        this.bookview_width = g;
        this.bookview_height = j;
        this.views = this.creation.views;
        this.total_views = this.views.length;
        d = this.views;
        for (e = c = 0, h = d.length; c < h; e = ++c) {
            k = d[e];
            if (k.selected) {
                this.current_page = e
            }
        }
        this.turning = false;
        this.pos = 0;
        this.bufferdone = false;
        this.pagestart_time = new Date().getTime();
        this.duration = KWP_CONF.page_flip_time ? KWP_CONF.page_flip_time : 1000;
        if (this.creation.product.properties.has_cover) {
            this.creation.pages[0].addUpdateListener((function (i) {
                return function () {
                    return i.refresh(true)
                }
            })(this))
        }
    }
    a.prototype.getViewSize = function (e, d, j) {
        var c, b, g, f, i;
        this.views = this.creation.views;
        this.total_views = this.views.length;
        this.full_width = d;
        this.full_height = j;
        j = j - 40;
        f = this.views[1];
        if (creation.product.properties.right_to_left) {
            f = this.views[this.views.length - 2]
        }
        this.ratio = Math.min(d / f.page.width, j / f.page.height);
        c = 1;
        if (e.crop) {
            c = e.crop.width
        }
        i = Math.floor(this.ratio * e.page.width * c / 2) * 2;
        b = Math.floor(this.ratio * e.page.height / 2) * 2;
        this.bookview_width = Math.floor(this.ratio * e.page.width / 4) * 4;
        this.bookview_height = Math.floor(this.ratio * e.page.height / 2) * 2;
        return g = {
            width: i,
            height: b
        }
    };
    a.prototype.refresh = function (c, b) {
        if (c == null) {
            c = false
        }
        if (b == null) {
            b = this.current_page
        }
        this.current_page = b;
        if (c) {
            this.bufferdone = false
        }
        return this.update()
    };
    a.prototype.turn = function (c, b, d) {
        this.callback = d;
        this.current_page = b;
        if (this.views[c] instanceof _kw159 && this.views[b] instanceof _kw159) {
            this.img1 = this.views[c].page.screenview;
            this.img2 = this.views[b].page.screenview;
            this.leftturn = b < c;
            this.pos = 0;
            this.pagestart_time = new Date().getTime();
            this.turning = true;
            this.bufferdone = false;
            return this.update()
        } else {
            this.bufferdone = false;
            this.getViewSize(this.views[b], this.full_width, this.full_height);
            this.update();
            if (this.callback) {
                return this.callback()
            }
        }
    };
    a.prototype._kw130 = function (b) {
        if (window.requestAnimationFrame != null) {
            return window.requestAnimationFrame(b)
        } else {
            if (window.webkitRequestAnimationFrame != null) {
                return window.webkitRequestAnimationFrame(b)
            } else {
                if (window.mozRequestAnimationFrame != null) {
                    return window.mozRequestAnimationFrame(b)
                } else {
                    if (window.oRequestAnimationFrame != null) {
                        return window.oRequestAnimationFrame(b)
                    } else {
                        if (window.msRequestAnimationFrame != null) {
                            return window.msRequestAnimationFrame(b)
                        } else {
                            return setTimeout(b, 1000 / 60)
                        }
                    }
                }
            }
        }
    };
    a.prototype._kw149 = function () {
        var q, g, k, j, f, w, p, t, u, r, y, l, x, s, m, v, h, e, c, b, o;
        if (!this.buffer) {
            this.buffer = document.createElement("canvas")
        }
        if (this.buffer.width !== this.canvas.width || this.buffer.height !== this.canvas.height) {
            this.buffer.width = this.canvas.width;
            this.buffer.height = this.canvas.height
        } else {
            this.buffer.getContext("2d").clearRect(0, 0, this.buffer.width, this.buffer.height)
        }
        g = this.buffer.getContext("2d");
        if (!(this.views[this.current_page] instanceof _kw159)) {
            g.save();
            g.clearRect(0, 0, this.canvas.width, this.canvas.height);
            g.shadowColor = "#000";
            g.shadowBlur = 15;
            g.fillStyle = "#FFF";
            k = Math.floor(this.ratio * this.creation.pages[0].width / 4) * 4;
            q = Math.floor(this.ratio * this.creation.pages[0].height / 2) * 2;
            if (this.views[this.current_page].crop != null) {
                k *= this.views[this.current_page].crop.width
            }
            g.fillRect(this.buffer.width / 2 - k / 2, this.buffer.height / 2 - q / 2, k, q);
            g.fillRect(this.buffer.width / 2 - k / 2, this.buffer.height / 2 - q / 2, k, q);
            g.restore();
            if (this.creation.product.properties.wired && !this.creation.product.hasCover()) {
                if (_kw33.image_bookwireleft.complete) {
                    g.save();
                    g.translate(this.buffer.width / 2 - k / 2, this.buffer.height / 2);
                    m = this.ratio;
                    g.scale(m, m);
                    for (w = e = 5, o = this.creation.pages[0].height / 2 - 5; e <= o; w = e += 10) {
                        r = 15 * _kw33.image_bookwireleft.height / _kw33.image_bookwireleft.width;
                        g.drawImage(_kw33.image_bookwireleft, -7.5, w - r * 0.5, 15, r);
                        g.drawImage(_kw33.image_bookwireleft, -7.5, -w - r * 0.5, 15, r)
                    }
                    g.restore()
                } else {
                    _kw33.image_bookwireleft.onload = (function (d) {
                        return function () {
                            return d.creation.pages[0].updated()
                        }
                    })(this)
                }
            }
            return
        }
        p = (0.5 - (this.current_page - 3) / (this.total_views - 4)) * this.creation.product.spine_width * this.ratio;
        if (this.creation.product.properties.right_to_left) {
            p = (0.5 - this.current_page / (this.total_views - 4)) * this.creation.product.spine_width * this.ratio
        }
        v = 0.5 * this.creation.product.spine_width * this.ratio;
        h = 0.5 * this.creation.product.spine_width * this.ratio;
        g.save();
        g.translate(p, 0);
        y = this.creation.pages[0].screenview;
        if (y) {
            g.save();
            g.translate(this.buffer.width / 2, this.buffer.height / 2);
            g.shadowColor = "#000";
            g.shadowBlur = 15;
            g.fillStyle = "#000";
            k = this.ratio * this.creation.pages[0].width;
            q = this.ratio * this.creation.pages[0].height;
            g.fillRect(-k / 2, -q / 2, k, q);
            g.scale(-1, 1);
            g.drawImage(y, -k / 2, -q / 2, k, q);
            g.restore()
        }
        g.save();
        j = this.canvas.width * 0.5;
        f = this.canvas.height * 0.5;
        s = this.bookview_width * 0.5;
        x = this.bookview_height;
        q = this.ratio * this.creation.pages[0].height;
        g.fillStyle = "rgba(0,0,0,.4)";
        g.shadowBlur = 0;
        g.fillRect(j - v, f - q * 0.5, v + h, q);
        g.fillRect(j - v - 1, f - q * 0.5, 2, q);
        g.fillRect(j + h - 1, f - q * 0.5, 2, q);
        v = (this.current_page - 3) / (this.total_views - 4) * this.creation.product.spine_width * this.ratio;
        h = (this.total_views - this.current_page - 1) / (this.total_views - 4) * this.creation.product.spine_width * this.ratio;
        g.translate(-p, 0);
        g.shadowColor = "#000";
        g.shadowBlur = 2 + v * 2;
        g.beginPath();
        g.moveTo(j - s, f - x * 0.5);
        g.lineTo(j - s, f + x * 0.5);
        g.lineTo(j, f + x * 0.5);
        g.lineTo(j, f - x * 0.5);
        g.fillStyle = "#FFF";
        g.fill();
        g.shadowBlur = 2 + h * 2;
        g.beginPath();
        g.moveTo(j, f + x * 0.5);
        g.lineTo(j + s, f + x * 0.5);
        g.lineTo(j + s, f - x * 0.5);
        g.lineTo(j, f - x * 0.5);
        g.fillStyle = "#FFF";
        g.fill();
        g.shadowBlur = 2;
        g.beginPath();
        g.moveTo(j - s, f - x * 0.5);
        g.lineTo(j - s - v, f - x * 0.5);
        g.lineTo(j - s - v, f + x * 0.5);
        g.lineTo(j - s, f + x * 0.5);
        g.lineTo(j + s, f + x * 0.5);
        g.lineTo(j + s + h, f + x * 0.5);
        g.lineTo(j + s + h, f - x * 0.5);
        g.lineTo(j + s, f - x * 0.5);
        g.lineTo(j - s, f - x * 0.5);
        g.fillStyle = "#FFF";
        g.fill();
        g.restore();
        g.translate(-p, 0);
        if (this.img1) {
            g.drawImage(this.img1, j - s, f - x * 0.5, 2 * s, x)
        }
        for (u = c = 0; c <= v; u = c += 0.75) {
            g.strokeStyle = "rgba(0,0,0,.15)";
            g.beginPath();
            g.moveTo(j - s - u, f - x * 0.5);
            g.lineTo(j - s - u, f + x * 0.5);
            g.stroke()
        }
        for (u = b = 0; b <= h; u = b += 0.75) {
            g.strokeStyle = "rgba(0,0,0,.15)";
            g.beginPath();
            g.moveTo(j + s + u, f - x * 0.5);
            g.lineTo(j + s + u, f + x * 0.5);
            g.stroke()
        }
        l = this.creation.pages[1];
        if (!l.spec.shading || l.spec.shading === "shadows") {
            t = g.createLinearGradient(j, f, j - s * 0.15, f);
            t.addColorStop(0, "rgba(0,0,0,.2)");
            t.addColorStop(0.95, "rgba(0,0,0,0)");
            g.fillStyle = t;
            g.fillRect(j - s * 0.15, f - x * 0.5, s * 0.15, x);
            t = g.createLinearGradient(j, f, j + s * 0.075, f);
            t.addColorStop(0, "rgba(0,0,0,.5)");
            t.addColorStop(1, "rgba(255,255,255,0)");
            g.fillStyle = t;
            g.fillRect(j, f - x * 0.5, s * 0.075, x)
        } else {
            g.fillStyle = "rgba(0,0,0,.1)";
            g.fillRect(j - 0.5, f - x * 0.5, 1, x)
        }
        this.bufferdone = true;
        return g.restore()
    };
    a.prototype.update = function () {
        var d, c, e, b;
        if (this.stop) {
            return
        }
        if (!this.bufferdone || this.buffer.width !== this.canvas.width || this.buffer.height !== this.canvas.height) {
            this._kw149()
        }
        c = this.canvas.getContext("2d");
        c.clearRect(0, 0, this.canvas.width, this.canvas.height);
        if (this.buffer) {
            c.drawImage(this.buffer, 0, 0)
        }
        if (this.current_page < 3 && this.creation.product.properties.has_cover && !this.creation.product.properties.right_to_left) {
            return
        }
        if (this.current_page >= this.views.length - 3 && this.creation.product.properties.has_cover && this.creation.product.properties.right_to_left) {
            return
        }
        d = 0.0001 + (0.5 - Math.cos(this.pos * Math.PI * 2) * 0.5) * 0.3;
        e = this.pos;
        if (!(this.creation.product.properties.wired && this.current_page === 0)) {
            this.paintFlip(c, d, e)
        }
        if (this.turning) {
            b = new Date().getTime();
            this.pos = Math.min(1, (b - this.pagestart_time) / this.duration);
            if (this.pos === 1) {
                this.turning = false;
                this.bufferdone = false;
                this.update();
                if (this.callback) {
                    return this.callback()
                }
            } else {
                return this._kw130((function (f) {
                    return function () {
                        return f.update()
                    }
                })(this))
            }
        }
    };
    a.prototype.paintFlip = function (e, g, j) {
        var h, f, c, x, v, u, m, i, y, z, q, o, k, s, w, t, p, b, l;
        if (j === 0) {
            return
        }
        j = ((j * 10000) | 0) * 0.0001;
        f = this.canvas.width * 0.5;
        c = this.canvas.height * 0.5;
        q = this.bookview_width * 0.5;
        y = this.bookview_height;
        h = Math.cos(g);
        s = Math.sin(g);
        o = 0.25 + j * 0.75;
        v = (c - y * 0.5 + j * q * s * o + h * y - c - y * 0.5) * h / s;
        e.save();
        if (this.leftturn) {
            e.translate(f, 0);
            e.scale(-1, 1);
            e.translate(-f, 0)
        }
        z = [
            [f + (1 - j) * q, c - y * 0.5],
            [f + (1 - j) * q - j * q * h * o, c - y * 0.5 + j * q * s * o],
            [Math.min(f + q, f + (1 - j) * q - j * q * h * o + s * y), c - y * 0.5 + j * q * s * o + h * y],
            [Math.min(f + q, f + (1 - j) * q - j * q * h * o + s * y + v), c + y * 0.5]
        ];
        e.save();
        e.beginPath();
        e.moveTo(z[0][0], z[0][1]);
        e.lineTo(z[3][0], z[3][1]);
        e.lineTo(f + q, c + y * 0.5);
        e.lineTo(f + q, c - y * 0.5);
        e.lineTo(z[0][0], z[0][1]);
        e.clip();
        if (this.img2) {
            if (this.leftturn) {
                e.translate(f + q, 0);
                e.scale(-1, 1);
                e.drawImage(this.img2, 0, c - y * 0.5, 2 * q, y);
                e.scale(-1, 1);
                e.translate(-f - q, 0)
            } else {
                e.drawImage(this.img2, f - q, c - y * 0.5, 2 * q, y)
            }
        } else {
            e.fillStyle = "#FFF";
            e.fillRect(f - q, c - y * 0.5, 2 * q, y)
        }
        e.restore();
        e.save();
        u = e.createLinearGradient((z[0][0] + z[3][0]) * 0.5, (z[0][1] + z[3][1]) * 0.5, f + q, c);
        u.addColorStop(0, "rgba(0,0,0," + (0.2 * (1 - j)) + ")");
        u.addColorStop(1, "rgba(0,0,0," + 0 + ")");
        e.fillStyle = u;
        e.beginPath();
        e.moveTo(z[0][0], z[0][1]);
        e.lineTo(z[3][0], z[3][1]);
        e.lineTo(f + q, c + y * 0.5);
        e.lineTo(f + q, c - y * 0.5);
        e.fill();
        e.strokeStyle = "#000";
        e.beginPath();
        e.moveTo(z[0][0], z[0][1]);
        e.lineTo(z[1][0], z[1][1]);
        e.lineTo(z[2][0], z[2][1]);
        e.lineTo(z[3][0], z[3][1]);
        e.lineTo(z[0][0], z[0][1]);
        e.fillStyle = "#FFF";
        e.shadowBlur = 100 * (1 - (j * 2 - 1) * (j * 2 - 1));
        e.shadowColor = "#000";
        e.fill();
        if (this.creation.product.properties.wired && !this.creation.product.hasCover()) {
            if (_kw33.image_bookwire.complete) {
                e.save();
                e.translate(f, c);
                i = this.creation.pages[1];
                k = y / i.height;
                e.scale(k, k);
                for (x = b = 5, l = i.height / 2 - 5; b <= l; x = b += 10) {
                    m = 15 * _kw33.image_bookwire.height / _kw33.image_bookwire.width;
                    e.drawImage(_kw33.image_bookwire, -7.5, x - m * 0.5, 15, m);
                    e.drawImage(_kw33.image_bookwire, -7.5, -x - m * 0.5, 15, m)
                }
                e.restore()
            }
        }
        e.save();
        e.shadowBlur = 0;
        e.shadowColor = null;
        e.beginPath();
        e.moveTo(z[0][0], z[0][1]);
        e.lineTo(z[1][0], z[1][1]);
        e.lineTo(z[2][0], z[2][1]);
        e.lineTo(z[3][0], z[3][1]);
        e.lineTo(z[0][0], z[0][1]);
        e.clip();
        e.translate(z[1][0], z[1][1]);
        e.rotate(-g);
        if (this.img2) {
            if (this.leftturn) {
                e.translate(q * 0.5 + q * j * 1.5, 0);
                e.scale(-1, 1);
                e.drawImage(this.img2, 0, 0, q * 0.5 + q * j * 1.5, y);
                e.scale(-1, 1);
                e.translate(-q * 0.5 - q * j * 1.5, 0)
            } else {
                e.drawImage(this.img2, 0, 0, q * 0.5 + q * j * 1.5, y)
            }
        }
        e.restore();
        t = -(z[3][1] - z[0][1]);
        p = z[3][0] - z[0][0];
        w = Math.sqrt(t * t + p * p);
        t = t / w;
        p = p / w;
        u = e.createLinearGradient((z[0][0] + z[3][0]) * 0.5, (z[0][1] + z[3][1]) * 0.5, (z[0][0] + z[3][0]) * 0.5 + t * q * 0.15, (z[0][1] + z[3][1]) * 0.5 + p * q * 0.15);
        u.addColorStop(0, "rgba(255,255,255,1)");
        u.addColorStop(0.4 * (1 - j), "rgba(0,0,0,.2)");
        u.addColorStop(1, "rgba(0,0,0,0)");
        e.fillStyle = u;
        e.shadowBlur = 0;
        e.shadowColor = null;
        e.fill();
        e.restore();
        return e.restore()
    };
    return a
})();
this._kw136 = (function () {
    function a(d, c, b, e) {
        this.canvas = d;
        this.creation = c;
        this.bookview_width = b;
        this.bookview_height = e;
        this.views = this.creation.views;
        this.total_views = this.views.length;
        this.current_page = 0;
        this.turning = false;
        this.pos = 0;
        this.pagestart_time = new Date().getTime();
        this.duration = 500
    }
    a.prototype.turn = function (c, b, d) {
        this.callback = d;
        this.current_page = b;
        this.img1 = this.views[c].page.screenview;
        this.img2 = this.views[b].page.screenview;
        this.leftturn = b < c;
        this.pos = 0;
        this.pagestart_time = new Date().getTime();
        this.turning = true;
        return this.update()
    };
    a.prototype.getViewSize = function (e, d, j) {
        var c, b, i, f, g;
        j = j - 80;
        i = Math.min(d / e.page.width, j / e.page.height);
        c = 1;
        if (e.crop) {
            c = e.crop.width
        }
        g = Math.floor(i * e.page.width * c / 2) * 2;
        b = Math.floor(i * e.page.height / 2) * 2;
        this.bookview_width = Math.floor(i * e.page.width / 2) * 2;
        this.bookview_height = Math.floor(i * e.page.height / 2) * 2;
        return f = {
            width: g,
            height: b
        }
    };
    a.prototype.refresh = function () {
        return this.update()
    };
    a.prototype._kw130 = function (b) {
        if (window.requestAnimationFrame != null) {
            return window.requestAnimationFrame(b)
        } else {
            if (window.webkitRequestAnimationFrame != null) {
                return window.webkitRequestAnimationFrame(b)
            } else {
                if (window.mozRequestAnimationFrame != null) {
                    return window.mozRequestAnimationFrame(b)
                } else {
                    if (window.oRequestAnimationFrame != null) {
                        return window.oRequestAnimationFrame(b)
                    } else {
                        if (window.msRequestAnimationFrame != null) {
                            return window.msRequestAnimationFrame(b)
                        } else {
                            return setTimeout(b, 1000 / 60)
                        }
                    }
                }
            }
        }
    };
    a.prototype.update = function () {
        var q, h, d, s, o, l, k, g, e, c, b, r, p, j, f, m = this;
        if (this.stop) {
            return
        }
        d = this.canvas.getContext("2d");
        d.clearRect(0, 0, this.canvas.width, this.canvas.height);
        if (!this.turning) {
            d.save();
            d.fillStyle = "#FFF";
            d.shadowColor = "#000";
            d.shadowBlur = 10;
            d.beginPath();
            d.rect(this.canvas.width / 2 - this.bookview_width / 2, this.canvas.height / 2 - this.bookview_height / 2, this.bookview_width, this.bookview_height);
            d.fill();
            return d.restore()
        } else {
            r = new Date().getTime();
            this.pos = Math.min(1, (r - this.pagestart_time) / this.duration);
            if (this.pos === 1) {
                this.turning = false;
                this.update();
                if (this.callback) {
                    this.callback()
                }
            } else {
                if (!this.leftturn) {
                    this.pos = 1 - this.pos;
                    g = this.img2;
                    e = this.img1
                } else {
                    g = this.img1;
                    e = this.img2
                }
                this._kw130(function () {
                    return m.update()
                })
            } if (this.pos < 0.5) {
                c = this.canvas.width / 2 - this.bookview_width / 2 + (this.pos * this.bookview_width) | 0;
                o = this.canvas.width / 2 - this.bookview_width / 2 + ((1 - this.pos) * this.bookview_width) | 0;
                s = Math.sin(this.pos * Math.PI) * this.bookview_height * 0.1;
                b = this.bookview_height + s;
                l = this.bookview_height - s;
                d.save();
                d.fillStyle = "#FFF";
                d.shadowColor = "#000";
                d.shadowBlur = 1;
                d.beginPath();
                d.moveTo(c, this.canvas.height / 2 - b / 2);
                d.lineTo(o, this.canvas.height / 2 - l / 2);
                d.lineTo(o, this.canvas.height / 2 + l / 2);
                d.lineTo(c, this.canvas.height / 2 + b / 2);
                d.fill();
                d.restore();
                for (k = j = c; j <= o; k = j += 1) {
                    q = (k - c) / (o - c);
                    d.save();
                    d.beginPath();
                    d.rect(k, 0, 1, this.canvas.height);
                    d.clip();
                    p = b + q * (l - b);
                    if (g) {
                        d.drawImage(g, k - q * g.width, this.canvas.height / 2 - p / 2, g.width, p)
                    }
                    d.restore()
                }
                h = 0.5 - Math.abs(this.pos - 0.5);
                d.save();
                d.globalAlpha = h;
                d.fillStyle = "#000";
                d.beginPath();
                d.moveTo(c, this.canvas.height / 2 - b / 2);
                d.lineTo(o, this.canvas.height / 2 - l / 2);
                d.lineTo(o, this.canvas.height / 2 + l / 2);
                d.lineTo(c, this.canvas.height / 2 + b / 2);
                d.fill();
                return d.restore()
            } else {
                c = this.canvas.width / 2 - this.bookview_width / 2 + ((1 - this.pos) * this.bookview_width) | 0;
                o = this.canvas.width / 2 - this.bookview_width / 2 + (this.pos * this.bookview_width) | 0;
                s = Math.sin(this.pos * Math.PI) * this.bookview_height * 0.1;
                b = this.bookview_height - s;
                l = this.bookview_height + s;
                d.save();
                d.fillStyle = "#FFF";
                d.shadowColor = "#000";
                d.shadowBlur = 1;
                d.beginPath();
                d.moveTo(c, this.canvas.height / 2 - b / 2);
                d.lineTo(o, this.canvas.height / 2 - l / 2);
                d.lineTo(o, this.canvas.height / 2 + l / 2);
                d.lineTo(c, this.canvas.height / 2 + b / 2);
                d.fill();
                d.restore();
                for (k = f = c; f <= o; k = f += 1) {
                    q = (k - c) / (o - c);
                    d.save();
                    d.beginPath();
                    d.rect(k, 0, 1, this.canvas.height);
                    d.clip();
                    p = b + q * (l - b);
                    if (e) {
                        d.drawImage(e, k - q * e.width, this.canvas.height / 2 - p / 2, e.width, p)
                    }
                    d.restore()
                }
                h = 0.5 - Math.abs(this.pos - 0.5);
                d.save();
                d.globalAlpha = h;
                d.fillStyle = "#000";
                d.beginPath();
                d.moveTo(c, this.canvas.height / 2 - b / 2);
                d.lineTo(o, this.canvas.height / 2 - l / 2);
                d.lineTo(o, this.canvas.height / 2 + l / 2);
                d.lineTo(c, this.canvas.height / 2 + b / 2);
                d.fill();
                return d.restore()
            }
        }
    };
    return a
})();
this._kw137 = (function () {
    function a(d, c, b, e) {
        this.canvas = d;
        this.creation = c;
        this.bookview_width = b;
        this.bookview_height = e;
        this.views = this.creation.views;
        this.total_views = this.views.length;
        this.current_page = 0;
        this.turning = false;
        this.pos = 0;
        this.pagestart_time = new Date().getTime();
        this.duration = 1000;
        this.openangle = 0.2 * Math.PI;
        this.openx = Math.cos(this.openangle);
        this.openy = Math.sin(this.openangle) * 0.1
    }
    a.prototype.getViewSize = function (e, d, j) {
        var c, b, i, f, g;
        j = j - 80;
        i = Math.min(d / e.page.width, j / e.page.height);
        c = 1;
        if (e.crop) {
            c = e.crop.width
        }
        g = Math.floor(i * e.page.width * c / 2) * 2;
        b = Math.floor(i * e.page.height / 2) * 2;
        this.bookview_width = Math.floor(i * e.page.width / 4) * 4;
        this.bookview_height = Math.floor(i * e.page.height / 2) * 2;
        return f = {
            width: g,
            height: b
        }
    };
    a.prototype.refresh = function () {
        return this.update()
    };
    a.prototype.turn = function (c, b, d) {
        this.callback = d;
        this.start_page = c;
        this.current_page = b;
        this.start_time = new Date().getTime();
        this.turning = true;
        return this.update()
    };
    a.prototype._kw130 = function (b) {
        if (window.requestAnimationFrame != null) {
            return window.requestAnimationFrame(b)
        } else {
            if (window.webkitRequestAnimationFrame != null) {
                return window.webkitRequestAnimationFrame(b)
            } else {
                if (window.mozRequestAnimationFrame != null) {
                    return window.mozRequestAnimationFrame(b)
                } else {
                    if (window.oRequestAnimationFrame != null) {
                        return window.oRequestAnimationFrame(b)
                    } else {
                        if (window.msRequestAnimationFrame != null) {
                            return window.msRequestAnimationFrame(b)
                        } else {
                            return setTimeout(b, 1000 / 60)
                        }
                    }
                }
            }
        }
    };
    a.prototype.dropShadow = function (f, c) {
        var b, e, d;
        c.save();
        c.shadowColor = "#000";
        c.shadowBlur = 10;
        c.shadowOpacity = 1;
        c.fillStyle = "#FFF";
        c.beginPath();
        c.moveTo(f[0][0], f[0][1]);
        for (b = e = 1, d = f.length - 1; 1 <= d ? e <= d : e >= d; b = 1 <= d ? ++e : --e) {
            c.lineTo(f[b][0], f[b][1])
        }
        c.fill();
        return c.restore()
    };
    a.prototype.drawGradient = function (j, f, e, d) {
        var b, c, h, g;
        d.save();
        b = d.createLinearGradient(j[0][0], j[0][1], j[1][0], j[0][1]);
        b.addColorStop(0, f);
        b.addColorStop(1, e);
        d.fillStyle = b;
        d.beginPath();
        d.moveTo(j[0][0], j[0][1]);
        for (c = h = 1, g = j.length - 1; 1 <= g ? h <= g : h >= g; c = 1 <= g ? ++h : --h) {
            d.lineTo(j[c][0], j[c][1])
        }
        d.fill();
        return d.restore()
    };
    a.prototype.update = function () {
        var b, c, e, d, p, k, o, f, g, j, l, i, m, h = this;
        if (this.stop) {
            return
        }
        e = this.canvas.width * 0.5;
        d = this.canvas.height * 0.5;
        l = this.bookview_width * 0.5;
        g = this.bookview_height;
        j = this.current_page;
        c = this.canvas.getContext("2d");
        c.clearRect(0, 0, this.canvas.width, this.canvas.height);
        if (this.turning) {
            m = (new Date().getTime() - this.start_time) / this.duration;
            if (m >= 1) {
                j = this.current_page
            } else {
                j = this.start_page + m * (this.current_page - this.start_page)
            }
        }
        c.save();
        if (j === 0) {
            i = this.views[1].page.screenview;
            this.dropShadow([
                [e - l * 0.5, d - g * 0.5],
                [e - l * 0.5 + l * this.openx, d - g * (0.5 + this.openy)],
                [e - l * 0.5 + l * this.openx, d - g * (0.5 + this.openy) + g],
                [e - l * 0.5, d - g * 0.5 + g]
            ], c);
            if (i) {
                _kw146.projectSimpleRect(i, 0.5, 0, 0.5, 1, e - l * 0.5, d - g * 0.5, e - l * 0.5 + l * this.openx, d - g * (0.5 + this.openy), g, g, c)
            }
            i = this.views[0].page.screenview;
            this.dropShadow([
                [e - l * 0.5, d - g * 0.5],
                [e - l * 0.5 + l, d - g * 0.5],
                [e - l * 0.5 + l, d - g * 0.5 + g],
                [e - l * 0.5, d - g * 0.5 + g]
            ], c);
            c.beginPath();
            c.rect(e - l * 0.5, d - g * 0.5, l, g);
            c.clip();
            if (i) {
                c.drawImage(i, e - l * 1.5, d - g * 0.5, l * 2, g)
            }
        } else {
            if (j < 1) {
                b = e - l * 0.5 * (1 - j);
                if (j < 0.5) {
                    i = this.views[1].page.screenview;
                    p = l * Math.cos(this.openangle * (1 - j));
                    o = g * 0.1 * Math.sin(this.openangle * (1 - j));
                    this.dropShadow([
                        [b, d - g * 0.5],
                        [b + p, d - g * 0.5 - o],
                        [b + p, d + g * 0.5 - o],
                        [b, d + g * 0.5]
                    ], c);
                    if (i) {
                        _kw146.projectSimpleRect(i, 0.5, 0, 0.5, 1, b, d - g * 0.5, b + p, d - g * 0.5 - o, g, g, c)
                    }
                    this.drawGradient([
                        [b, d - g * 0.5],
                        [b + p, d - g * 0.5 - o],
                        [b + p, d + g * 0.5 - o],
                        [b, d + g * 0.5]
                    ], "rgba(255,255,255,.1)", "rgba(255,255,255,0)", c);
                    p = l * Math.cos(j * Math.PI);
                    o = g * 0.1 * Math.sin(j * Math.PI);
                    this.dropShadow([
                        [b, d - g * 0.5],
                        [b + p, d - g * 0.5 - o],
                        [b + p, d - g * 0.5 + g + o],
                        [b, d - g * 0.5 + g]
                    ], c);
                    i = this.views[0].page.screenview;
                    if (i) {
                        _kw146.projectSimpleRect(i, 0.5, 0, 0.5, 1, b, d - g * 0.5, b + p, d - g * 0.5 - o, g, g + 2 * o, c)
                    }
                } else {
                    i = this.views[1].page.screenview;
                    p = l * Math.cos(this.openangle * (1 - j));
                    o = g * 0.1 * Math.sin(this.openangle * (1 - j));
                    k = l * Math.cos(j * Math.PI);
                    f = g * 0.1 * Math.sin(j * Math.PI);
                    this.dropShadow([
                        [b, d - g * 0.5],
                        [b + p, d - g * 0.5 - o],
                        [b + p, d + g * 0.5 - o],
                        [b, d + g * 0.5],
                        [b + k, d + g * 0.5 + f],
                        [b + k, d - g * 0.5 - f],
                        [b, d - g * 0.5]
                    ], c);
                    if (i) {
                        _kw146.projectSimpleRect(i, 0.5, 0, 0.5, 1, b, d - g * 0.5, b + p, d - g * 0.5 - o, g, g, c)
                    }
                    this.drawGradient([
                        [b, d - g * 0.5],
                        [b + p, d - g * 0.5 - o],
                        [b + p, d + g * 0.5 - o],
                        [b, d + g * 0.5]
                    ], "rgba(255,255,255,.1)", "rgba(255,255,255,0)", c);
                    p = l * Math.cos(j * Math.PI);
                    o = g * 0.1 * Math.sin(j * Math.PI);
                    i = this.views[1].page.screenview;
                    if (i) {
                        _kw146.projectSimpleRect(i, 0, 0, 0.5, 1, b + p, d - g * 0.5 - o, b, d - g * 0.5, g + 2 * o, g, c)
                    }
                    this.drawGradient([
                        [b, d - g * 0.5],
                        [b + p, d - g * 0.5 - o],
                        [b + p, d - g * 0.5 + g + o],
                        [b, d - g * 0.5 + g]
                    ], "rgba(0,0,0,.1)", "rgba(0,0,0,0)", c)
                }
            } else {
                if (j === 1) {
                    i = this.views[1].page.screenview;
                    this.dropShadow([
                        [e - l, d - g * 0.5],
                        [e - l + l * 2, d - g * 0.5],
                        [e - l + l * 2, d - g * 0.5 + g],
                        [e - l, d - g * 0.5 + g]
                    ], c);
                    if (i) {
                        c.drawImage(i, e - l, d - g * 0.5, l * 2, g)
                    }
                } else {
                    if (j < 2) {
                        j -= 1;
                        b = e + l * 0.5 * j;
                        i = this.views[1].page.screenview;
                        if (j < 0.5) {
                            p = l * Math.cos(this.openangle * j);
                            o = g * 0.1 * Math.sin(this.openangle * j);
                            k = l * Math.cos(j * Math.PI);
                            f = g * 0.1 * Math.sin(j * Math.PI);
                            this.dropShadow([
                                [b, d - g * 0.5],
                                [b - p, d - g * 0.5 - o],
                                [b - p, d + g * 0.5 - o],
                                [b, d + g * 0.5],
                                [b + k, d - g * 0.5 + g + f],
                                [b + k, d - g * 0.5 - f],
                                [b, d - g * 0.5]
                            ], c);
                            if (i) {
                                _kw146.projectSimpleRect(i, 0, 0, 0.5, 1, b - p, d - g * 0.5 - o, b, d - g * 0.5, g, g, c)
                            }
                            this.drawGradient([
                                [b, d - g * 0.5],
                                [b - p, d - g * 0.5 - o],
                                [b - p, d + g * 0.5 - o],
                                [b, d + g * 0.5]
                            ], "rgba(0,0,0,.1)", "rgba(0,0,0,0)", c);
                            p = l * Math.cos(j * Math.PI);
                            o = g * 0.1 * Math.sin(j * Math.PI);
                            i = this.views[1].page.screenview;
                            if (i) {
                                _kw146.projectSimpleRect(i, 0.5, 0, 0.5, 1, b, d - g * 0.5, b + p, d - g * 0.5 - o, g, g + 2 * o, c)
                            }
                            this.drawGradient([
                                [b, d - g * 0.5],
                                [b + p, d - g * 0.5 - o],
                                [b + p, d - g * 0.5 + g + o],
                                [b, d - g * 0.5 + g]
                            ], "rgba(255,255,255,.1)", "rgba(255,255,255,0)", c)
                        } else {
                            p = l * Math.cos(this.openangle * j);
                            o = g * 0.1 * Math.sin(this.openangle * j);
                            this.dropShadow([
                                [b, d - g * 0.5],
                                [b - p, d - g * 0.5 - o],
                                [b - p, d + g * 0.5 - o],
                                [b, d + g * 0.5]
                            ], c);
                            if (i) {
                                _kw146.projectSimpleRect(i, 0, 0, 0.5, 1, b - p, d - g * 0.5 - o, b, d - g * 0.5, g, g, c)
                            }
                            this.drawGradient([
                                [b, d - g * 0.5],
                                [b - p, d - g * 0.5 - o],
                                [b - p, d + g * 0.5 - o],
                                [b, d + g * 0.5]
                            ], "rgba(0,0,0,.1)", "rgba(0,0,0,0)", c);
                            p = l * Math.cos(j * Math.PI);
                            o = g * 0.1 * Math.sin(j * Math.PI);
                            this.dropShadow([
                                [b, d - g * 0.5],
                                [b + p, d - g * 0.5 - o],
                                [b + p, d - g * 0.5 + g + o],
                                [b, d - g * 0.5 + g]
                            ], c);
                            i = this.views[0].page.screenview;
                            if (i) {
                                _kw146.projectSimpleRect(i, 0, 0, 0.5, 1, b + p, d - g * 0.5 - o, b, d - g * 0.5, g + 2 * o, g, c)
                            }
                        }
                    } else {
                        if (j === 2) {
                            i = this.views[1].page.screenview;
                            this.dropShadow([
                                [e + l * 0.5 - this.openx * l, d - g * 0.5 - this.openy * g],
                                [e + l * 0.5, d - g * 0.5],
                                [e + l * 0.5, d + g * 0.5],
                                [e + l * 0.5 - this.openx * l, d + g * 0.5 - this.openy * g]
                            ], c);
                            if (i) {
                                _kw146.projectSimpleRect(i, 0, 0, 0.5, 1, e + l * 0.5 - this.openx * l, d - g * 0.5 - this.openy * g, e + l * 0.5, d - g * 0.5, g, g, c)
                            }
                            i = this.views[0].page.screenview;
                            this.dropShadow([
                                [e - l * 0.5, d - g * 0.5],
                                [e - l * 0.5 + l, d - g * 0.5],
                                [e - l * 0.5 + l, d - g * 0.5 + g],
                                [e - l * 0.5, d - g * 0.5 + g]
                            ], c);
                            c.beginPath();
                            c.rect(e - l * 0.5, d - g * 0.5, l, g);
                            c.clip();
                            if (i) {
                                c.drawImage(i, e - l * 0.5, d - g * 0.5, l * 2, g)
                            }
                        } else {
                            if (j < 3) {
                                j -= 2;
                                b = e + l * 0.5 * (1 - j);
                                o = g * 0.1 * Math.sin((0.8 - j * 0.8) * Math.PI);
                                p = l * Math.cos((0.8 - j * 0.8) * Math.PI);
                                if (p < 0) {
                                    this.dropShadow([
                                        [b, d - g * 0.5],
                                        [b + p, d - g * 0.5 - o],
                                        [b + p, d + g * 0.5 - o],
                                        [b, d + g * 0.5]
                                    ], c);
                                    i = this.views[1].page.screenview;
                                    if (i) {
                                        _kw146.projectSimpleRect(i, 0, 0, 0.5, 1, b + p, d - g * 0.5 - o, b, d - g * 0.5, g, g, c)
                                    }
                                    i = this.views[0].page.screenview;
                                    this.dropShadow([
                                        [b, d - g * 0.5],
                                        [b - l, d - g * 0.5],
                                        [b - l, d + g * 0.5],
                                        [b, d + g * 0.5]
                                    ], c);
                                    c.beginPath();
                                    c.rect(b - l, d - g * 0.5, l, g);
                                    c.clip();
                                    if (i) {
                                        c.drawImage(i, b - l, d - g * 0.5, l * 2, g)
                                    }
                                    this.drawGradient([
                                        [b - l, d - g * 0.5],
                                        [b, d - g * 0.5],
                                        [b, d + g * 0.5],
                                        [b - l, d + g * 0.5]
                                    ], "rgba(255,255,255,0)", "rgba(255,255,255," + (j * 0.1) + ")", c)
                                } else {
                                    this.dropShadow([
                                        [b, d - g * 0.5],
                                        [b + p, d - g * 0.5 - o],
                                        [b + p, d + g * 0.5 - o],
                                        [b, d + g * 0.5],
                                        [b - l, d + g * 0.5],
                                        [b - l, d - g * 0.5],
                                        [b, d - g * 0.5]
                                    ], c);
                                    i = this.views[0].page.screenview;
                                    if (i) {
                                        _kw146.projectSimpleRect(i, 0.5, 0, 0.5, 1, b, d - g * 0.5, b + p, d - g * 0.5 - o, g, g, c)
                                    }
                                    this.drawGradient([
                                        [b, d - g * 0.5],
                                        [b + p, d - g * 0.5 - o],
                                        [b + p, d + g * 0.5 - o],
                                        [b, d + g * 0.5]
                                    ], "rgba(0,0,0,.1)", "rgba(0,0,0,0)", c);
                                    i = this.views[0].page.screenview;
                                    c.beginPath();
                                    c.rect(b - l, d - g * 0.5, l, g);
                                    c.clip();
                                    if (i) {
                                        c.drawImage(i, b - l, d - g * 0.5, l * 2, g)
                                    }
                                    this.drawGradient([
                                        [b - l, d - g * 0.5],
                                        [b, d - g * 0.5],
                                        [b, d + g * 0.5],
                                        [b - l, d + g * 0.5]
                                    ], "rgba(255,255,255,0)", "rgba(255,255,255," + (j * 0.1) + ")", c)
                                }
                            } else {
                                if (j === 3) {
                                    i = this.views[0].page.screenview;
                                    this.dropShadow([
                                        [e - l, d - g * 0.5],
                                        [e - l + l * 2, d - g * 0.5],
                                        [e - l + l * 2, d - g * 0.5 + g],
                                        [e - l, d - g * 0.5 + g]
                                    ], c);
                                    if (i) {
                                        c.drawImage(i, e - l, d - g * 0.5, l * 2, g)
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        c.restore();
        if (this.turning) {
            if (m >= 1) {
                this.turning = false;
                if (this.callback) {
                    return this.callback()
                }
            } else {
                return this._kw130(function () {
                    return h.update()
                })
            }
        }
    };
    return a
})();
this.GiftUnderlay = (function () {
    function a(d, c, b, e) {
        this.canvas = d;
        this.creation = c;
        this.bookview_width = b;
        this.bookview_height = e;
        this.views = this.creation.views;
        this.total_views = this.views.length;
        this.current_page = 0;
        this.turning = false;
        this.pos = 0;
        this.pagestart_time = new Date().getTime();
        this.duration = 500
    }
    a.prototype.turn = function (c, b, d) {
        this.callback = d;
        this.update();
        if (this.callback != null) {
            return this.callback()
        }
    };
    a.prototype.getViewSize = function (i, j, d) {
        var g, m, c, k, f, e, l, b;
        d = d - 20;
        f = i.page;
        if (f.spec.preview && !f.spec.preview.position.radius > 0) {
            c = f.width / f.spec.preview.position.width;
            m = f.height / f.spec.preview.position.height;
            e = Math.min(j / c, d / m);
            g = 1;
            if (i.crop) {
                g = i.crop.width
            }
            b = Math.round(e * i.page.width * g / 2) * 2;
            k = Math.round(e * i.page.height / 2) * 2;
            this.bookview_width = Math.floor(e * c / 2) * 2;
            this.bookview_height = Math.floor(e * m / 2) * 2
        } else {
            e = Math.min(j / i.page.width, d / i.page.height);
            g = 1;
            if (i.crop) {
                g = i.crop.width
            }
            b = Math.floor(e * i.page.width * g / 2) * 2;
            k = Math.floor(e * i.page.height / 2) * 2;
            this.bookview_width = Math.floor(e * i.page.width / 2) * 2;
            this.bookview_height = Math.floor(e * i.page.height / 2) * 2
        }
        return l = {
            width: b,
            height: k
        }
    };
    a.prototype.refresh = function () {
        return this.update()
    };
    a.prototype.update = function () {
        var c, d, b, e;
        d = this.creation.pages[0];
        c = this.canvas.getContext("2d");
        c.clearRect(0, 0, this.canvas.width, this.canvas.height);
        if ((!d.spec.preview) || d.spec.preview.position.radius > 0) {
            c.save();
            c.fillStyle = "#FFF";
            c.shadowColor = "#000";
            c.shadowBlur = 10;
            c.beginPath();
            c.rect(this.canvas.width / 2 - this.bookview_width / 2, this.canvas.height / 2 - this.bookview_height / 2, this.bookview_width, this.bookview_height);
            c.fill();
            c.restore();
            return
        }
        if (d.spec.preview.background && !d.spec.preview.background_image) {
            d.spec.preview.background_image = KWC.createImage();
            d.spec.preview.background_image.crossOrigin = "Anonymous";
            d.spec.preview.background_image.onload = ((function (f) {
                return function () {
                    f.update();
                    return d.updated()
                }
            })(this));
            d.spec.preview.background_image.src = d.spec.preview.background.replace("http://", "//")
        }
        if (d.spec.preview.foreground && !d.spec.preview.foreground_image) {
            d.spec.preview.foreground_image = KWC.createImage();
            d.spec.preview.foreground_image.crossOrigin = "Anonymous";
            d.spec.preview.foreground_image.onload = ((function (f) {
                return function () {
                    f.update();
                    return d.updated()
                }
            })(this));
            d.spec.preview.foreground_image.src = d.spec.preview.foreground.replace("http://", "//")
        }
        if (d.spec.preview.background_image && d.spec.preview.background_image.complete && d.spec.preview.background_image.width > 0 && d.spec.preview.background_image.height > 0) {
            b = this.bookview_width * (d.spec.preview.position.x + d.spec.preview.position.width / 2);
            e = this.bookview_height * (d.spec.preview.position.y + d.spec.preview.position.height / 2);
            c.drawImage(d.spec.preview.background_image, this.canvas.width / 2 - b, this.canvas.height / 2 - e, this.bookview_width, this.bookview_height)
        }
        if (d.spec.preview.foreground_image && d.spec.preview.foreground_image.complete && d.spec.preview.foreground_image.width > 0 && d.spec.preview.foreground_image.height > 0) {
            b = this.bookview_width * (d.spec.preview.position.x + d.spec.preview.position.width / 2);
            e = this.bookview_height * (d.spec.preview.position.y + d.spec.preview.position.height / 2);
            return c.drawImage(d.spec.preview.foreground_image, this.canvas.width / 2 - b, this.canvas.height / 2 - e, this.bookview_width, this.bookview_height)
        }
    };
    return a
})();
this.CanvasUnderlay = (function () {
    function a(d, c, b, e) {
        this.canvas = d;
        this.creation = c;
        this.bookview_width = b;
        this.bookview_height = e;
        this.views = this.creation.views;
        this.total_views = this.views.length;
        this.current_page = 0;
        this.turning = false;
        this.pos = 0;
        this.pagestart_time = new Date().getTime();
        this.duration = 500
    }
    a.prototype.turn = function (c, b, d) {
        this.callback = d;
        this.update();
        if (this.callback != null) {
            return this.callback()
        }
    };
    a.prototype.getViewSize = function (e, d, j) {
        var c, b, i, f, g;
        j = j - 80;
        i = Math.min(d / e.page.width, j / e.page.height);
        c = 1;
        if (e.crop) {
            c = e.crop.width
        }
        g = Math.floor(i * e.page.width * c / 2) * 2;
        b = Math.floor(i * e.page.height / 2) * 2;
        this.bookview_width = Math.floor(i * e.page.width / 2) * 2;
        this.bookview_height = Math.floor(i * e.page.height / 2) * 2;
        return f = {
            width: g,
            height: b
        }
    };
    a.prototype.refresh = function () {
        return this.update()
    };
    a.prototype._kw130 = function (b) {
        if (window.requestAnimationFrame != null) {
            return window.requestAnimationFrame(b)
        } else {
            if (window.webkitRequestAnimationFrame != null) {
                return window.webkitRequestAnimationFrame(b)
            } else {
                if (window.mozRequestAnimationFrame != null) {
                    return window.mozRequestAnimationFrame(b)
                } else {
                    if (window.oRequestAnimationFrame != null) {
                        return window.oRequestAnimationFrame(b)
                    } else {
                        if (window.msRequestAnimationFrame != null) {
                            return window.msRequestAnimationFrame(b)
                        } else {
                            return setTimeout(b, 1000 / 60)
                        }
                    }
                }
            }
        }
    };
    a.prototype.update = function () {
        var b, c;
        c = this.canvas.getContext("2d");
        c.save();
        c.fillStyle = "#000";
        c.shadowBlur = 10;
        c.shadowOpacity = 1;
        c.shadowColor = "#000";
        if (this.creation.pages[0].spec.border && this.creation.pages[0].spec.border > 0) {
            b = this.creation.pages[0].spec.border / this.creation.pages[0].width * this.bookview_width;
            c.fillRect(this.canvas.width / 2 - this.bookview_width / 2 + b, this.canvas.height / 2 - this.bookview_height / 2, this.bookview_width - 2 * b, this.bookview_height);
            c.fillRect(this.canvas.width / 2 - this.bookview_width / 2, this.canvas.height / 2 - this.bookview_height / 2 + b, this.bookview_width, this.bookview_height - 2 * b)
        } else {
            c.fillRect(this.canvas.width / 2 - this.bookview_width / 2, this.canvas.height / 2 - this.bookview_height / 2, this.bookview_width, this.bookview_height)
        }
        return c.restore()
    };
    return a
})();
this.CalendarUnderlay = (function () {
    function a(d, c, b, e) {
        this.canvas = d;
        this.creation = c;
        this.bookview_width = b;
        this.bookview_height = e;
        this.views = this.creation.views;
        this.total_views = this.views.length;
        this.current_page = 0;
        this.turning = false;
        this.pos = 0;
        this.pagestart_time = new Date().getTime();
        this.duration = 500;
        this.page = this.creation.pages[0];
        if ((_kw33.image_bookwireleft == null) && (typeof KWP_CONF !== "undefined" && KWP_CONF !== null)) {
            _kw33.image_bookwireleft = _kw33.createImage(KWP_CONF.static_serv + "img/creator/bookwireleft.png")
        }
    }
    a.prototype.turn = function (c, b, d) {
        this.callback = d;
        this.current_page = b;
        this.update();
        if (this.callback != null) {
            return this.callback()
        }
    };
    a.prototype.getViewSize = function (e, d, j) {
        var c, b, i, f, g;
        j = j - 80;
        i = Math.min(d / e.page.width, j / e.page.height);
        c = 1;
        if (e.crop) {
            c = e.crop.width
        }
        g = Math.floor(i * e.page.width * c / 2) * 2;
        b = Math.floor(i * e.page.height / 2) * 2;
        this.bookview_width = Math.floor(i * e.page.width / 2) * 2;
        this.bookview_height = Math.floor(i * e.page.height / 2) * 2;
        return f = {
            width: g,
            height: b
        }
    };
    a.prototype.refresh = function () {
        return this.update()
    };
    a.prototype.update = function () {
        var b, g, f, l, i, j, k, c, e;
        i = this.creation.pages[this.current_page];
        b = this.canvas.getContext("2d");
        b.save();
        b.clearRect(0, 0, this.canvas.width, this.canvas.height);
        b.fillStyle = "#FFF";
        b.shadowBlur = 10;
        b.shadowOpacity = 1;
        b.shadowColor = "#000";
        b.fillRect(this.canvas.width / 2 - this.bookview_width / 2, this.canvas.height / 2 - this.bookview_height / 2, this.bookview_width, this.bookview_height);
        b.shadowBlur = 0;
        b.shadowOpacity = 0;
        if ((i != null) && (i.screenview != null)) {
            b.drawImage(i.screenview, this.canvas.width / 2 - this.bookview_width / 2, this.canvas.height / 2 - this.bookview_height / 2, this.bookview_width, this.bookview_height)
        }
        if (this.creation.product.properties.wired) {
            if (_kw33.image_bookwireleft.complete) {
                k = this.bookview_width;
                f = this.bookview_height;
                j = k / this.creation.product.units[0].width;
                b.translate(this.canvas.width / 2, this.canvas.height / 2);
                b.rotate(Math.PI / 2);
                b.translate(-f / 2, 0);
                b.scale(j, j);
                for (g = c = 5, e = this.page.width / 2 - 5; c <= e; g = c += 10) {
                    l = 15 * _kw33.image_bookwireleft.height / _kw33.image_bookwireleft.width;
                    b.drawImage(_kw33.image_bookwireleft, -7.5, g - l * 0.5, 15, l);
                    b.drawImage(_kw33.image_bookwireleft, -7.5, -g - l * 0.5, 15, l)
                }
            }
        }
        return b.restore()
    };
    return a
})();
var Utils;
Utils = require("../utils/utils.coffee", Utils);
this.LayoutComponent = (function () {
    function a(b, g, c, e, f, d) {
        this.x = b != null ? b : 0;
        this.y = g != null ? g : 0;
        this.w = c != null ? c : 1;
        this.h = e != null ? e : 1;
        this.content = f != null ? f : null;
        this.style = d != null ? d : null;
        this.children = [];
        this.px = 0;
        this.py = 0;
        this.pw = 0;
        this.ph = 0
    }
    a.prototype.add = function (b) {
        return this.children.push(b)
    };
    a.prototype.doLayout = function (j, h, k, f) {
        var g, d, i, e, b;
        this.px = j;
        this.py = h;
        this.pw = k;
        this.ph = f;
        e = this.children;
        b = [];
        for (d = 0, i = e.length; d < i; d++) {
            g = e[d];
            b.push(g.doLayout(this.px + this.pw * g.x, this.py + this.ph * g.y, this.pw * g.w, this.ph * g.h))
        }
        return b
    };
    a.prototype.drawChildren = function (e) {
        var h, g, d, f, b;
        f = this.children;
        b = [];
        for (g = 0, d = f.length; g < d; g++) {
            h = f[g];
            b.push(h.draw(e))
        }
        return b
    };
    a.prototype.draw = function (d) {
        var e, b, c;
        if (this.style != null) {
            if (this.style.background != null) {
                d.fillStyle = this.style.background.fillColor || "rgba(255,255,255,0)";
                d.strokeStyle = this.style.background.strokeColor || "rgba(0,0,0,0)";
                d.lineWidth = this.style.background.lineWidth * Math.sqrt(this.pw * this.pw + this.ph * this.ph);
                b = this.style.background.round || 0;
                b = b * Math.sqrt(this.pw * this.pw + this.ph * this.ph);
                Utils.roundRect(d, this.px, this.py, this.pw, this.ph, b);
                d.fill();
                d.stroke()
            }
            if (this.style.underline != null) {
                d.strokeStyle = this.style.underline.color || "rgba(0,0,0,0)";
                e = this.style.underline.width || 0.01;
                e = e * Math.sqrt(this.pw * this.pw + this.ph * this.ph);
                d.lineWidth = e;
                d.beginPath();
                d.moveTo(this.px, this.py + this.ph);
                d.lineTo(this.px + this.pw, this.py + this.ph);
                d.stroke()
            }
            if (this.style.overline != null) {
                d.strokeStyle = this.style.overline.color || "rgba(0,0,0,0)";
                e = this.style.overline.width || 0.01;
                e = e * Math.sqrt(this.pw * this.pw + this.ph * this.ph);
                d.lineWidth = e;
                d.beginPath();
                d.moveTo(this.px, this.py);
                d.lineTo(this.px + this.pw, this.py);
                d.stroke()
            }
            if ((this.content != null) && (this.style.content != null)) {
                d.fillStyle = this.style.content.color || "#000";
                c = Math.round(this.ph / 2);
                if (c > 4) {
                    d.font = c + "pt " + this.style.content.font || "Verdana";
                    switch (this.style.content.align || "left") {
                        case "center":
                            d.textAlign = "center";
                            d.fillText(this.content, this.px + this.pw / 2, this.py + this.ph / 2 + c / 2);
                            break;
                        case "right":
                            d.textAlign = "right";
                            d.fillText(this.content, this.px + this.pw - this.ph / 4, this.py + this.ph / 2 + c / 2);
                            break;
                        default:
                            d.textAlign = "left";
                            d.fillText(this.content, this.px + this.ph / 4, this.py + this.ph / 2 + c / 2)
                    }
                }
            }
        }
        return this.drawChildren(d)
    };
    return a
})();
module.exports = this.LayoutComponent;
var CalendarRenderer, CalendarStyle, KWC, LayoutComponent, __hasProp = {}.hasOwnProperty,
    __extends = function (d, b) {
        for (var a in b) {
            if (__hasProp.call(b, a)) {
                d[a] = b[a]
            }
        }

        function c() {
            this.constructor = d
        }
        c.prototype = b.prototype;
        d.prototype = new c();
        d.__super__ = b.prototype;
        return d
    };
KWC = require("../../wrapper.js", KWC);
LayoutComponent = require("./layoutComponent.coffee", LayoutComponent);
CalendarRenderer = require("../calendar/calendarrenderer.coffee", CalendarRenderer);
CalendarStyle = require("../calendar/calendarstyle.coffee", CalendarStyle);
this.MonthComponent = (function (a) {
    __extends(b, a);

    function b(d, j, e, g, f, i, c) {
        this.year = f;
        this.month = i;
        this.creation = c;
        b.__super__.constructor.call(this, d, j, e, g)
    }
    b.prototype.draw = function (d) {
        var e;
        e = KWC.createCanvas();
        e.width = this.pw;
        e.height = this.ph;
        new CalendarRenderer(new CalendarStyle(), this.creation, this.year, this.month).render(e);
        return d.drawImage(e, this.px, this.py)
    };
    return b
})(LayoutComponent);
module.exports = this.MonthComponent;
var LayoutComponent, MonthComponent, _kw53, _kw59, Utils;
_kw53 = require("../pagephoto.coffee", _kw53);
_kw59 = require("../pagetext.coffee", _kw59);
LayoutComponent = require("./layoutComponent.coffee", LayoutComponent);
MonthComponent = require("./monthcomponent.coffee", MonthComponent);
Utils = require("../utils/utils.coffee", Utils);
this.AgendaStyle = (function () {
    function a(b) {
        var c;
        this.creation = b;
        c = "Arial";
        this.margin = {
            top: 10,
            bottom: 10,
            left: 20,
            right: 20
        };
        this.title_style = {
            background: {
                fillColor: "#456",
                round: 0.005
            },
            underline: null,
            content: {
                font: c,
                color: "#EEE",
                align: "left"
            }
        };
        this.hour_style = {
            underline: {
                color: "#BBB",
                width: 0.0025
            },
            content: {
                font: c,
                color: "#BBB",
                align: "left"
            }
        };
        this.personalia_style = {
            content: {
                font: c,
                color: "#456",
                align: "right"
            }
        };
        this.block_style = {
            content: {
                font: c,
                color: "#456",
                align: "left"
            },
            background: {
                strokeColor: "#456",
                lineWidth: 0.002,
                round: 0.01
            }
        };
        this.header_style = {
            content: {
                font: c,
                color: "#456",
                align: "left"
            }
        };
        this.footer_style = {
            content: {
                font: c,
                color: "#456",
                align: "left"
            },
            overline: {
                color: "#456",
                width: 0.003
            }
        };
        this.translate("Last Name");
        this.translate("First Name");
        this.translate("Address");
        this.translate("Phone");
        this.translate("Mobile phone");
        this.translate("Fax");
        this.translate("E-mail");
        this.translate("Blood type");
        this.translate("Medical treatments");
        this.translate("Allergies");
        this.translate("Other");
        this.translate("Emergency contact");
        this.translate("Phone");
        this.translate("Mobile phone");
        this.translate("DAYNAME, MONTH DAYNUM");
        this.translate("Week");
        this.translate("Notes");
        this.translate("Year planner");
        this.translate("Information")
    }
    a.prototype.translate = function (c) {
        var b;
        if (this.creation.properties.agenda_translations == null) {
            this.creation.properties.agenda_translations = {}
        }
        if (this.creation.properties.agenda_translations[c] == null) {
            if (typeof KWC !== "undefined" && KWC !== null) {
                b = KWC.translate(c)
            } else {
                b = c
            }
            this.creation.properties.agenda_translations[c] = b
        } else {
            b = this.creation.properties.agenda_translations[c]
        }
        return b
    };
    a.prototype.init = function (b) {
        if (b.pages.length === 71) {
            return this.init140(b)
        } else {
            return this.init124(b)
        }
    };
    a.prototype.init140 = function (h) {
        var b, g, f, j, c, d, i, e;
        this.type = 140;
        h.pages[0].properties.agenda = {
            left: {
                type: "blank"
            },
            right: {
                type: "photo"
            }
        };
        h.pages[1].properties.agenda = {
            left: {
                type: "photo"
            },
            right: {
                type: "personalia"
            }
        };
        c = 1;
        g = 2;
        while (true) {
            if (c > 53) {
                break
            }
            if ((c - 2) % 4 === 0) {
                h.pages[g++].properties.agenda = {
                    left: {
                        type: "week1",
                        week: c
                    },
                    right: {
                        type: "photo"
                    }
                };
                h.pages[g++].properties.agenda = {
                    left: {
                        type: "photo"
                    },
                    right: {
                        type: "week2",
                        week: c
                    }
                }
            } else {
                h.pages[g++].properties.agenda = {
                    left: {
                        type: "week1",
                        week: c
                    },
                    right: {
                        type: "week2",
                        week: c
                    }
                }
            }
            c++
        }
        while (true) {
            if (g >= 69) {
                break
            }
            h.pages[g++].properties.agenda = {
                left: {
                    type: "notes"
                },
                right: {
                    type: "notes"
                }
            }
        }
        h.pages[69].properties.agenda = {
            left: {
                type: "yearcal",
                year: h.properties.start_year
            },
            right: {
                type: "yearcal",
                year: h.properties.start_year + 1
            }
        };
        h.pages[70].properties.agenda = {
            left: {
                type: "photo"
            },
            right: {
                type: "blank"
            }
        };
        e = h.pages;
        for (d = 0, i = e.length; d < i; d++) {
            g = e[d];
            if (g.objects.length === 0) {
                switch (g.properties.agenda.left.type) {
                    case "photo":
                        b = new _kw53(null);
                        b.width = g.width / 2 + g.spec.bleed.left;
                        b.height = g.height + g.spec.bleed.top + g.spec.bleed.bottom;
                        b.x = -g.width / 4 - g.spec.bleed.left / 2;
                        b.y = 0;
                        g.add(b)
                }
                switch (g.properties.agenda.right.type) {
                    case "photo":
                        b = new _kw53(null);
                        b.width = g.width / 2 + g.spec.bleed.right;
                        b.height = g.height + g.spec.bleed.top + g.spec.bleed.bottom;
                        b.x = g.width / 4 + g.spec.bleed.right / 2;
                        b.y = 0;
                        g.add(b)
                }
            }
        }
        b = h.pages[0];
        b.background.set("rgb(48,96,32)");
        j = new _kw59();
        j.align = "center";
        j.font_size = 30;
        j.width = b.width / 2 * 0.8;
        j.height = b.height / 8;
        j.x = b.width / 4;
        j.y = -b.height / 4;
        j.color = "rgb(255,255,255)";
        b.add(j);
        f = new _kw53(null);
        f.width = b.width / 2 * 0.8;
        f.height = b.height / 2;
        f.x = b.width / 4;
        f.y = b.height / 6;
        return b.add(f)
    };
    a.prototype.init124 = function (h) {
        var b, g, f, j, c, d, i, e;
        this.type = 124;
        g = 0;
        h.pages[g++].properties.agenda = {
            left: {
                type: "cover"
            },
            right: {
                type: "cover"
            }
        };
        h.pages[g++].properties.agenda = {
            left: {
                type: "blank"
            },
            right: {
                type: "photo"
            }
        };
        h.pages[g++].properties.agenda = {
            left: {
                type: "photo"
            },
            right: {
                type: "personalia"
            }
        };
        c = 1;
        while (true) {
            if (c > 53) {
                break
            }
            if ((c - 2) % 11 === 0) {
                h.pages[g++].properties.agenda = {
                    left: {
                        type: "week1",
                        week: c
                    },
                    right: {
                        type: "photo"
                    }
                };
                h.pages[g++].properties.agenda = {
                    left: {
                        type: "photo"
                    },
                    right: {
                        type: "week2",
                        week: c
                    }
                }
            } else {
                h.pages[g++].properties.agenda = {
                    left: {
                        type: "week1",
                        week: c
                    },
                    right: {
                        type: "week2",
                        week: c
                    }
                }
            }
            c++
        }
        while (true) {
            if (g >= h.pages.length - 2) {
                break
            }
            h.pages[g++].properties.agenda = {
                left: {
                    type: "notes"
                },
                right: {
                    type: "notes"
                }
            }
        }
        h.pages[g++].properties.agenda = {
            left: {
                type: "yearcal",
                year: h.properties.start_year
            },
            right: {
                type: "yearcal",
                year: h.properties.start_year + 1
            }
        };
        h.pages[g++].properties.agenda = {
            left: {
                type: "photo"
            },
            right: {
                type: "blank"
            }
        };
        e = h.pages;
        for (d = 0, i = e.length; d < i; d++) {
            g = e[d];
            if (g.objects.length === 0) {
                switch (g.properties.agenda.left.type) {
                    case "photo":
                        b = new _kw53(null);
                        b.width = g.width / 2 + g.spec.bleed.left;
                        b.height = g.height + g.spec.bleed.top + g.spec.bleed.bottom;
                        b.x = -g.width / 4 - g.spec.bleed.left / 2;
                        b.y = 0;
                        g.add(b);
                        break;
                    case "week2":
                        b = new _kw53(null);
                        b.width = g.width / 4 + g.spec.bleed.left;
                        b.height = g.height / 2;
                        b.x = -g.width / 4 - g.width / 8 - g.spec.bleed.left / 2;
                        b.y = g.height / 4 + g.spec.bleed.bottom / 2 - g.height / 14;
                        g.add(b)
                }
                switch (g.properties.agenda.right.type) {
                    case "photo":
                        b = new _kw53(null);
                        b.width = g.width / 2 + g.spec.bleed.right;
                        b.height = g.height + g.spec.bleed.top + g.spec.bleed.bottom;
                        b.x = g.width / 4 + g.spec.bleed.right / 2;
                        b.y = 0;
                        g.add(b);
                        break;
                    case "week2":
                        b = new _kw53(null);
                        b.width = g.width / 4 + g.spec.bleed.right;
                        b.height = g.height / 2;
                        b.x = g.width / 4 + g.width / 8 + g.spec.bleed.right / 2;
                        b.y = g.height / 4 + g.spec.bleed.bottom / 2 - g.height / 14;
                        g.add(b)
                }
            }
        }
        b = h.pages[0];
        b.background.set("rgb(32,48,64)");
        j = new _kw59();
        j.align = "center";
        j.font_size = 50;
        j.width = b.width / 2 * 0.8;
        j.height = b.height / 6;
        j.x = b.width / 4 + 5;
        j.y = -b.height / 4;
        j.color = "rgb(255,255,255)";
        b.add(j);
        f = new _kw53(null);
        f.width = b.width / 2 * 0.8;
        f.height = b.height / 2 * 0.8;
        f.x = b.width / 4 + 5;
        f.y = b.height / 8;
        return b.add(f)
    };
    a.prototype.paintPage = function (c, b, e) {
        var f, d;
        if (e.properties.agenda == null) {
            return
        }
        d = e.creation.properties.start_year;
        f = e.creation.properties.start_month;
        switch (e.properties.agenda.left.type) {
            case "week1":
                this.paintWorkingWeekPage(b, e, d, f, e.properties.agenda.left.week, false);
                break;
            case "week2":
                this.paintWeekEndPage(b, e, d, f, e.properties.agenda.left.week, false);
                break;
            case "yearcal":
                this.paintYearCalendarPage(b, e, e.creation.properties.start_year, false);
                break;
            case "notes":
                this.paintNotesPage(b, e, false);
                break;
            case "personalia":
                this.paintPersonaliaPage(b, e, false)
        }
        switch (e.properties.agenda.right.type) {
            case "week1":
                return this.paintWorkingWeekPage(b, e, d, f, e.properties.agenda.right.week, true);
            case "week2":
                return this.paintWeekEndPage(b, e, d, f, e.properties.agenda.right.week, true);
            case "yearcal":
                return this.paintYearCalendarPage(b, e, e.creation.properties.start_year + 1, true);
            case "notes":
                return this.paintNotesPage(b, e, true);
            case "personalia":
                return this.paintPersonaliaPage(b, e, true)
        }
    };
    a.prototype.getHRDate = function (b, c, d) {
        var e;
        e = this.translate("DAYNAME, MONTH DAYNUM");
        return e.replace("DAYNAME", b).replace("MONTH", d).replace("DAYNUM", c)
    };
    a.prototype.paintWorkingWeekPage = function (e, f, o, C, r, z) {
        var A, d, B, s, u, t, j, q, g, m, v, l, k, b;
        g = e.width * 0.5 / f.width;
        l = this.margin.left * g;
        k = this.margin.top * g;
        m = e.width * 0.5 - (this.margin.left + this.margin.right) * g;
        u = e.height - (this.margin.top + this.margin.bottom) * g;
        B = Utils.getFirstDayOfWeek(o, C, r);
        v = Utils.getWeekNum(B);
        q = new LayoutComponent();
        q.add(new LayoutComponent(0, 0, 1, 0.05, B.getFullYear(), this.header_style));
        q.add(new LayoutComponent(0, 0.97, 1, 0.03, this.translate("Week") + " " + v, this.footer_style));
        A = new LayoutComponent(0, 0.1, 1, 0.85);
        q.add(A);
        for (t = b = 0; b <= 4; t = b += 1) {
            s = f.creation.properties.day_names[(B.getDay() + 6) % 7];
            j = B.getDate();
            C = f.creation.properties.month_names[B.getMonth()];
            A.add(this.createDayLayout(0.2 * t, this.getHRDate(s, j, C)));
            B = Utils.addDays(B, 1)
        }
        d = e.getContext("2d");
        d.fillStyle = "rgba(255,255,255,.8)";
        if (z) {
            d.fillRect(e.width / 2, 0, e.width / 2, e.height);
            q.doLayout(l + e.width / 2, k, m, u)
        } else {
            d.fillRect(0, 0, e.width / 2, e.height);
            q.doLayout(l, k, m, u)
        }
        return q.draw(d)
    };
    a.prototype.paintWeekEndPage = function (e, f, o, D, s, A) {
        var B, d, C, t, z, u, q, j, r, g, m, v, l, k, b;
        g = e.width * 0.5 / f.width;
        l = this.margin.left * g;
        k = this.margin.top * g;
        m = e.width * 0.5 - (this.margin.left + this.margin.right) * g;
        z = e.height - (this.margin.top + this.margin.bottom) * g;
        C = Utils.getFirstDayOfWeek(o, D, s);
        v = Utils.getWeekNum(C);
        r = new LayoutComponent();
        r.add(new LayoutComponent(0, 0, 1, 0.05, C.getFullYear(), this.header_style));
        r.add(new LayoutComponent(0, 0.97, 1, 0.03, this.translate("Week") + " " + v, this.footer_style));
        B = new LayoutComponent(0, 0.1, 1, 0.85);
        r.add(B);
        C = Utils.addDays(C, 5);
        for (u = b = 0; b <= 1; u = b += 1) {
            t = f.creation.properties.day_names[(C.getDay() + 6) % 7];
            j = C.getDate();
            D = f.creation.properties.month_names[C.getMonth()];
            B.add(this.createDayLayout(0.2 * u, this.getHRDate(t, j, D)));
            C = Utils.addDays(C, 1)
        }
        q = new LayoutComponent(0, 0.4, (f.creation.pages.length < 70 ? 0.45 : 1), 0.6, "", this.block_style);
        B.add(q);
        q.add(new LayoutComponent(0.01, 0.01, 1, 0.06, this.translate("Notes"), this.header_style));
        d = e.getContext("2d");
        d.fillStyle = "rgba(255,255,255,.8)";
        if (A) {
            d.fillRect(e.width / 2, 0, e.width / 2, e.height);
            r.doLayout(l + e.width / 2, k, m, z)
        } else {
            d.fillRect(0, 0, e.width / 2, e.height);
            r.doLayout(l, k, m, z)
        }
        return r.draw(d)
    };
    a.prototype.createDayLayout = function (l, j) {
        var k, b, e, d, g, f;
        k = new LayoutComponent(0, l, 1, 0.16);
        b = new LayoutComponent(0, 0, 1, 0.2, j, this.title_style);
        k.add(b);
        e = new LayoutComponent(0, 0.25, 1, 0.75);
        k.add(e);
        for (d = g = 0; g <= 4; d = g += 1) {
            e.add(new LayoutComponent(0, d * 0.2, 0.49, 0.2, (8 + d) + ".", this.hour_style))
        }
        for (d = f = 0; f <= 4; d = f += 1) {
            e.add(new LayoutComponent(0.51, d * 0.2, 0.49, 0.2, (14 + d) + ".", this.hour_style))
        }
        return k
    };
    a.prototype.paintYearCalendarPage = function (f, g, q, z) {
        var A, e, v, u, t, s, B, r, k, o, m, l, d, b;
        k = f.width * 0.5 / g.width;
        m = this.margin.left * k;
        l = this.margin.top * k;
        o = f.width * 0.5 - (this.margin.left + this.margin.right) * k;
        v = f.height - (this.margin.top + this.margin.bottom) * k;
        r = new LayoutComponent();
        r.add(new LayoutComponent(0, 0, 1, 0.05, q, this.header_style));
        r.add(new LayoutComponent(0, 0.97, 1, 0.03, this.translate("Year planner"), this.footer_style));
        A = new LayoutComponent(0, 0.1, 1, 0.85);
        r.add(A);
        for (u = d = 0; d <= 2; u = d += 1) {
            for (t = b = 0; b <= 3; t = b += 1) {
                B = t * 3 + u;
                s = new LayoutComponent(u * 0.333333, t * 0.25, 0.333333, 0.25);
                A.add(s);
                s.add(new MonthComponent(0.05, 0.15, 0.9, 0.8, q, B, g.creation));
                s.add(new LayoutComponent(0.05, 0, 0.9, 0.1, g.creation.properties.month_names[B], this.title_style))
            }
        }
        e = f.getContext("2d");
        e.fillStyle = "rgba(255,255,255,.8)";
        if (z) {
            e.fillRect(f.width / 2, 0, f.width / 2, f.height);
            r.doLayout(m + f.width / 2, l, o, v)
        } else {
            e.fillRect(0, 0, f.width / 2, f.height);
            r.doLayout(m, l, o, v)
        }
        return r.draw(e)
    };
    a.prototype.paintNotesPage = function (e, l, s) {
        var m, d, j, g, b, k, r, q, o, f;
        k = e.width * 0.5 / l.width;
        q = this.margin.left * k;
        o = this.margin.top * k;
        r = e.width * 0.5 - (this.margin.left + this.margin.right) * k;
        j = e.height - (this.margin.top + this.margin.bottom) * k;
        b = new LayoutComponent();
        b.add(new LayoutComponent(0, 0, 1, 0.05, this.translate("Notes"), this.header_style));
        b.add(new LayoutComponent(0, 0.97, 1, 0.03, "", this.footer_style));
        m = new LayoutComponent(0, 0.1, 1, 0.85);
        b.add(m);
        for (g = f = 0; f <= 29; g = f += 1) {
            m.add(new LayoutComponent(0, g / 30, 1, 1 / 30, null, this.hour_style))
        }
        d = e.getContext("2d");
        d.fillStyle = "rgba(255,255,255,.8)";
        if (s) {
            d.fillRect(e.width / 2, 0, e.width / 2, e.height);
            b.doLayout(q + e.width / 2, o, r, j)
        } else {
            d.fillRect(0, 0, e.width / 2, e.height);
            b.doLayout(q, o, r, j)
        }
        return b.draw(d)
    };
    a.prototype.paintPersonaliaPage = function (e, l, s) {
        var m, d, j, i, t, g, b, k, r, q, o;
        k = e.width * 0.5 / l.width;
        q = this.margin.left * k;
        o = this.margin.top * k;
        r = e.width * 0.5 - (this.margin.left + this.margin.right) * k;
        i = e.height - (this.margin.top + this.margin.bottom) * k;
        b = new LayoutComponent();
        b.add(new LayoutComponent(0, 0, 1, 0.05, this.translate("Information"), this.header_style));
        b.add(new LayoutComponent(0, 0.97, 1, 0.03, "", this.footer_style));
        m = new LayoutComponent(0, 0.1, 1, 0.85);
        b.add(m);
        g = 0;
        t = l.creation.pages.length < 70 ? 0.035 : 0.05;
        j = (function (c) {
            return function (f) {
                if (f != null) {
                    m.add(new LayoutComponent(0, g * t, 0.35, t * 0.9, f, c.personalia_style));
                    m.add(new LayoutComponent(0.36, g * t, 0.64, t * 0.9, "", c.hour_style))
                }
                return g++
            }
        })(this);
        j(this.translate("Last Name"));
        j(this.translate("First Name"));
        j(this.translate("Address"));
        j("");
        j(this.translate("Phone"));
        j(this.translate("Mobile phone"));
        j(this.translate("Fax"));
        j(this.translate("E-mail"));
        j();
        j();
        j(this.translate("Blood type"));
        j(this.translate("Medical treatments"));
        j(this.translate("Allergies"));
        j(this.translate("Other"));
        j("");
        j(this.translate("Emergency contact"));
        j("");
        j(this.translate("Phone"));
        j(this.translate("Mobile phone"));
        d = e.getContext("2d");
        d.fillStyle = "rgba(255,255,255,.8)";
        if (s) {
            d.fillRect(e.width / 2, 0, e.width / 2, e.height);
            b.doLayout(q + e.width / 2, o, r, i)
        } else {
            d.fillRect(0, 0, e.width / 2, e.height);
            b.doLayout(q, o, r, i)
        }
        return b.draw(d)
    };
    return a
})();
module.exports = this.AgendaStyle;
this.Margin = (function () {
    a.name = "Margin";

    function a(e, c, b, d) {
        this.top = e;
        this.right = c;
        this.bottom = b;
        this.left = d
    }
    return a
})();
var Margin;
Margin = require("./margin.coffee", Margin);
this.Unit = (function () {
    function a(c, b) {
        this.type = c;
        this.index = b != null ? b : 0;
        this.width = 100;
        this.height = 100;
        this.bleed = new Margin(3, 3, 3, 3);
        this.margin = new Margin(6, 6, 6, 6);
        this.inner_margin = new Margin(3, 3, 3, 3);
        this.format = "jpeg";
        this.filename = "{{unitid}}-{{pageid}}.{{ext}}";
        this.num_pages = 1;
        this.dpi = 300;
        this.cropmarks = false;
        this.trimbox = false;
        this.can_swap_pages = false;
        this.underlay = false;
        this.double_background = false
    }
    a.prototype.setValues = function (d) {
        var e, c, b;
        if (!d) {
            return
        }
        b = [];
        for (e in d) {
            c = d[e];
            b.push(this[e] = c)
        }
        return b
    };
    a.prototype.similar = function (d) {
        var c, b;
        if (this.num_pages !== d.num_pages) {
            return false
        }
        c = this.width / this.height;
        b = d.width / d.height;
        return c / b < 1.34 && b / c < 1.34
    };
    a.prototype.getSpineWidth = function (f) {
        var c, b, e, d;
        b = 0;
        if (this.spine_width && this.base_width) {
            for (c = e = 0, d = this.spine_width.length - 1; e <= d; c = e += 1) {
                b = this.spine_width[c][1];
                if (c < this.spine_width.length - 1) {
                    if (f <= this.spine_width[c + 1][0]) {
                        b = this.spine_width[c][1] + (f - this.spine_width[c][0]) * (this.spine_width[c + 1][1] - this.spine_width[c][1]) / (this.spine_width[c + 1][0] - this.spine_width[c][0]);
                        return b
                    }
                }
            }
        } else {
            f * 0.2
        }
        return b
    };
    a.clone = function (e) {
        var d, c, b;
        c = new a(e.type, e.index);
        for (d in e) {
            b = e[d];
            if (d === "preview") {
                c[d] = a.clonePreview(b)
            } else {
                c[d] = b
            }
        }
        return c
    };
    a.clonePreview = function (c) {
        var b;
        if (!c) {
            return null
        }
        b = {
            background: c.background,
            foreground: c.foreground,
            mask: c.mask,
            position: c.position
        };
        return b
    };
    return a
})();
module.exports = this.Unit;
var Unit;
Unit = require("./unit.coffee", Unit);
this.Product = (function () {
    function a() {
        this.units = [];
        this.views = [];
        this.can_add_pages = false;
        this.properties = {}
    }
    a.prototype.addUnit = function (b) {
        this.units.push(b);
        return b
    };
    a.prototype.createUnit = function (b) {
        return this.addUnit(new Unit(b, this.units.length))
    };
    a.prototype.addView = function (b) {
        return this.views.push(b)
    };
    a.prototype.similar = function (e) {
        var b, d, c;
        if (e.units.length !== this.units.length) {
            return false
        }
        for (b = d = 0, c = this.units.length - 1; d <= c; b = d += 1) {
            if (!this.units[b].similar(e.units[b])) {
                return false
            }
        }
        return true
    };
    a.prototype.getAspectRatio = function () {
        var b;
        b = this.units[this.units.length - 1];
        return b.width / b.height
    };
    a.clone = function (i) {
        var g, k, j, e, d, h, b, f, c;
        g = {
            type: i.type,
            units: [],
            views: [],
            underlay: i.underlay,
            can_add_pages: i.can_add_pages,
            properties: i.properties != null ? i.properties : {}
        };
        f = i.units;
        for (e = 0, h = f.length; e < h; e++) {
            k = f[e];
            g.units.push(Unit.clone(k))
        }
        c = i.views;
        for (d = 0, b = c.length; d < b; d++) {
            j = c[d];
            g.views.push(j)
        }
        return g
    };
    return a
})();
module.exports = this.Product;
var Product, __hasProp = {}.hasOwnProperty,
    __extends = function (d, b) {
        for (var a in b) {
            if (__hasProp.call(b, a)) {
                d[a] = b[a]
            }
        }

        function c() {
            this.constructor = d
        }
        c.prototype = b.prototype;
        d.prototype = new c();
        d.__super__ = b.prototype;
        return d
    };
Product = require("./product.coffee", Product);
this.Book = (function (b) {
    __extends(a, b);

    function a(d, g, c) {
        var f, e;
        this.type = d;
        this.coverspec = g;
        this.pagespec = c;
        a.__super__.constructor.call(this);
        this.can_add_pages = true;
        this.underlay = "book";
        this.properties.wired = this.pagespec.wired;
        if (this.coverspec) {
            this.properties.has_cover = true;
            f = this.createUnit("book_hard_cover");
            f.setValues(this.coverspec);
            if (f.base_width == null) {
                f.base_width = f.width
            }
        }
        e = this.createUnit("book_block");
        e.setValues(this.pagespec);
        if (e.num_pages < this.pagespec.min_pages) {
            e.num_pages = this.pagespec.min_pages
        }
        this.block_unit = e;
        if (f) {
            this.spine_width = f.getSpineWidth(e.num_pages);
            f.width = f.base_width + this.spine_width
        } else {
            this.spine_width = e.getSpineWidth(e.num_pages)
        }
    }
    a.prototype.hasCover = function () {
        return this.coverspec != null
    };
    a.prototype.isWired = function () {
        return this.type === "wired"
    };
    a.prototype._kw154 = function () {
        if (this.hasCover()) {
            return this.units[1].inner_cover_editable
        } else {
            return this.units[0].inner_cover_editable
        }
    };
    return a
})(Product);
module.exports = this.Book;
var Product, __hasProp = {}.hasOwnProperty,
    __extends = function (d, b) {
        for (var a in b) {
            if (__hasProp.call(b, a)) {
                d[a] = b[a]
            }
        }

        function c() {
            this.constructor = d
        }
        c.prototype = b.prototype;
        d.prototype = new c();
        d.__super__ = b.prototype;
        return d
    };
Product = require("./product.coffee", Product);
this.CanvasProduct = (function (a) {
    __extends(b, a);

    function b(c) {
        var d;
        this.pagespec = c;
        b.__super__.constructor.call(this);
        this.type = "canvas";
        this.underlay = "canvas";
        d = this.createUnit("canvas");
        d.setValues(this.pagespec);
        d.num_pages = this.pagespec.num_pages ? this.pagespec.num_pages : 1
    }
    return b
})(Product);
module.exports = this.CanvasProduct;
var __hasProp = {}.hasOwnProperty,
    __extends = function (d, b) {
        for (var a in b) {
            if (__hasProp.call(b, a)) {
                d[a] = b[a]
            }
        }

        function c() {
            this.constructor = d
        }
        c.prototype = b.prototype;
        d.prototype = new c();
        d.__super__ = b.prototype;
        return d
    };
this.GiftProduct = (function (b) {
    __extends(a, b);

    function a(c) {
        var d;
        this.pagespec = c;
        a.__super__.constructor.call(this);
        this.type = "gift";
        this.underlay = "gift";
        d = new Unit("gift", 0);
        d.setValues(this.pagespec);
        d.width = this.pagespec.width;
        d.height = this.pagespec.height;
        d.bleed = this.pagespec.bleed;
        d.margin = this.pagespec.margin;
        if (this.pagespec.preview != null) {
            d.preview = this.pagespec.preview
        }
        d.dpi = this.pagespec.dpi ? this.pagespec.dpi : d.dpi;
        d.num_pages = this.pagespec.num_pages ? this.pagespec.num_pages : 1;
        this.addUnit(d)
    }
    return a
})(Product);
var __hasProp = {}.hasOwnProperty,
    __extends = function (d, b) {
        for (var a in b) {
            if (__hasProp.call(b, a)) {
                d[a] = b[a]
            }
        }

        function c() {
            this.constructor = d
        }
        c.prototype = b.prototype;
        d.prototype = new c();
        d.__super__ = b.prototype;
        return d
    };
this.CardProduct = (function (b) {
    __extends(a, b);

    function a(d, c) {
        var e;
        this.type = d;
        this.pagespec = c;
        a.__super__.constructor.call(this);
        this.underlay = (function () {
            switch (this.type) {
                case "card-double":
                    return "card";
                case "card-folded":
                    return "card-folded"
            }
        }).call(this);
        this.pagespec.type = (function () {
            switch (this.type) {
                case "card-folded":
                    return "card-folded";
                default:
                    return "page"
            }
        }).call(this);
        this.pagespec.index = 0;
        e = Unit.clone(this.pagespec);
        e.num_pages = this.type === a.type_single ? 1 : 2;
        e.view_names = (function () {
            switch (this.type) {
                case a.type_single:
                    return ["Main view"];
                case a.type_folded:
                    return ["Front page", "Inside", "Rear page", "Rear side"];
                default:
                    return ["Front page", "Rear page"]
            }
        }).call(this);
        e.can_swap_pages = false;
        this.addUnit(e)
    }
    a.type_single = "card-simple";
    a.type_double = "card-double";
    a.type_folded = "card-folded";
    return a
})(Product);
var __hasProp = {}.hasOwnProperty,
    __extends = function (d, b) {
        for (var a in b) {
            if (__hasProp.call(b, a)) {
                d[a] = b[a]
            }
        }

        function c() {
            this.constructor = d
        }
        c.prototype = b.prototype;
        d.prototype = new c();
        d.__super__ = b.prototype;
        return d
    };
this.CalendarProduct = (function (b) {
    __extends(a, b);

    function a(c) {
        var d;
        this.pagespec = c;
        a.__super__.constructor.call(this);
        this.type = "calendar";
        this.underlay = "calendar";
        this.properties.wired = this.pagespec.wired;
        d = new Unit("calendar", 0);
        d.num_pages = 13;
        d.view_names = ["Cover", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
        d.setValues(this.pagespec);
        this.addUnit(d)
    }
    return a
})(Product);
var AgendaProduct, Book, __hasProp = {}.hasOwnProperty,
    __extends = function (d, b) {
        for (var a in b) {
            if (__hasProp.call(b, a)) {
                d[a] = b[a]
            }
        }

        function c() {
            this.constructor = d
        }
        c.prototype = b.prototype;
        d.prototype = new c();
        d.__super__ = b.prototype;
        return d
    };
Book = require("./book.coffee", Book);
AgendaProduct = (function (a) {
    __extends(b, a);

    function b(d, c) {
        b.__super__.constructor.call(this, "agenda", d, c);
        this.can_add_pages = false
    }
    return b
})(Book);
module.exports = this.AgendaProduct;
var AgendaProduct, AgendaStyle, Book, _kw155, _kw156, _kw157, CanvasProduct, CanvasView, _kw158, _kw159, GiftView, KWC, Page, PageCalendar, Unit, View;
KWC = require("../../wrapper.js", KWC);
Page = require("../page.coffee", Page);
PageCalendar = require("../pagecalendar.coffee", PageCalendar);
Book = require("./book.coffee", Book);
CanvasProduct = require("./canvasproduct.coffee", CanvasProduct);
AgendaProduct = require("./agendaproduct.coffee", AgendaProduct);
AgendaStyle = require("../agenda/agendastyle.coffee", AgendaStyle);
GiftView = require("../view/giftview.coffee", GiftView);
CanvasView = require("../view/canvasview.coffee", CanvasView);
_kw159 = require("../view/doublepageview.coffee", _kw159);
_kw157 = require("../view/bookrearcoverview.coffee", _kw157);
_kw156 = require("../view/bookfullcoverview.coffee", _kw156);
_kw155 = require("../view/bookfrontcoverview.coffee", _kw155);
View = require("../view/view.coffee", View);
_kw158 = require("../view/croppedview.coffee", _kw158);
Unit = require("./unit.coffee", Unit);
this.Creation = (function () {
    function a(b) {
        this.product = b;
        this.history = [];
        this.properties = {};
        this.properties.start_month = 0;
        this.properties.start_year = new Date(Date.now() + 1000 * 3600 * 24 * 30 * 6).getUTCFullYear();
        this.initLocale();
        this.init()
    }
    a.prototype.initLocale = function () {
        var f, c, b, e, d;
        if (KWC.day_names != null) {
            f = [];
            for (c = e = 0; e <= 6; c = e += 1) {
                f.push(KWC.translate(KWC.day_names[c]))
            }
            b = [];
            for (c = d = 0; d <= 11; c = d += 1) {
                b.push(KWC.translate(KWC.month_names[c]))
            }
            this.properties.day_names = f;
            return this.properties.month_names = b
        }
    };
    a.prototype.init = function () {
        var c, e, b, d;
        this.pages = [];
        this.views = [];
        d = this.product.units;
        for (e = 0, b = d.length; e < b; e++) {
            c = d[e];
            this.createUnit(c);
            this._kw160(c)
        }
        if ((this.product.type != null) && this.product.type === "agenda") {
            return new AgendaStyle(this).init(this)
        }
    };
    a.prototype.createUnit = function (r) {
        var u, v, m, s, l, t, q, h, e, d, c, w, b, p, k, j, g, f;
        if (r.num_pages == null) {
            r.num_pages = r.numpages
        }
        switch (r.type) {
            case "book_hard_cover":
                l = new Page(this, r.width, r.height, r);
                this.pages.push(l);
                break;
            case "book_block":
                m = r.num_pages - 1;
                if (!this.product._kw154()) {
                    m += 2
                }
                for (u = h = 0; h <= m; u = h += 2) {
                    l = new Page(this, r.width * 2, r.height, r);
                    l.properties.apply_to_all = true;
                    this.pages.push(l)
                }
                break;
            case "page":
            case "gift":
            case "canvas":
                for (u = e = 0, p = r.num_pages - 1; 0 <= p ? e <= p : e >= p; u = 0 <= p ? ++e : --e) {
                    l = new Page(this, r.width, r.height, r);
                    this.pages.push(l)
                }
                break;
            case "card-folded":
                for (u = d = 0, k = r.num_pages - 1; 0 <= k ? d <= k : d >= k; u = 0 <= k ? ++d : --d) {
                    l = new Page(this, r.width, r.height, r);
                    this.pages.push(l)
                }
                break;
            case "calendar":
                q = this.properties.start_year;
                v = this.properties.start_month;
                for (u = c = 0, j = r.num_pages - 1; 0 <= j ? c <= j : c >= j; u = 0 <= j ? ++c : --c) {
                    l = new Page(this, r.width, r.height, r);
                    l.properties.year = q;
                    l.properties.month = v;
                    if (u > 0) {
                        v++;
                        if (v >= 12) {
                            v = 0;
                            q++
                        }
                    }
                    if (u > 0) {
                        t = new PageCalendar();
                        t.width = l.width / 2;
                        t.height = l.height / 2;
                        l.add(t)
                    }
                    this.pages.push(l)
                }
        }
        if (r.preload != null) {
            g = r.preload;
            f = [];
            for (b = 0, w = g.length; b < w; b++) {
                s = g[b];
                if (s.pages === "all") {
                    f.push((function () {
                        var i, x, o;
                        o = [];
                        for (u = i = 0, x = this.pages.length - 1; i <= x; u = i += 1) {
                            o.push(this.pages[u].loadObject(s))
                        }
                        return o
                    }).call(this))
                } else {
                    f.push(this.pages[0].loadObject(s))
                }
            }
            return f
        }
    };
    a.prototype._kw160 = function (A) {
        var M, r, m, s, c, t, b, N, L, K, J, q, f, I, H, E, C, z, x, u, p, o, l, k, j, h, g, e, d, G, F, D, B, y, w;
        switch (A.type) {
            case "book_hard_cover":
                b = new _kw157(this.pages[0]);
                this.views.push(b);
                b = new _kw156(this.pages[0]);
                this.pages[0].view = b;
                this.views.push(b);
                b = new _kw155(this.pages[0]);
                b.selected = true;
                return this.views.push(b);
            case "book_block":
                c = this.product.properties.has_cover ? 1 : 0;
                if (this.product._kw154()) {
                    for (M = N = 0, u = A.num_pages - 1; N <= u; M = N += 2) {
                        b = new _kw159(this.pages[M / 2 + c], KWC.translate("Pages $$p1$$ - $$p2$$").replace("$$p1$$", M + 1).replace("$$p2$$", M + 2));
                        if (M === 0 && !this.product.properties.has_cover) {
                            b.selected = true
                        }
                        b.properties.apply_to_all = true;
                        s = M / 2;
                        if (this.product.hasCover()) {
                            s += 1
                        }
                        this.pages[s].view = b;
                        if ((this.product.type != null) && this.product.type === "agenda") {
                            b.can_move = false
                        }
                        this.views.push(b)
                    }
                } else {
                    if (this.product.properties.wired && !this.product.hasCover()) {
                        b = new _kw155(this.pages[c], KWC.translate("Cover"))
                    } else {
                        b = new _kw159(this.pages[c], KWC.translate("Inner cover and page 1"))
                    }
                    b.properties.apply_to_all = true;
                    b.properties.hide_left = true;
                    b.properties.double_background = false;
                    b.can_move = false;
                    this.pages[c].view = b;
                    this.views.push(b);
                    if (!this.product.properties.has_cover) {
                        b.selected = true
                    }
                    for (M = L = 0, p = A.num_pages - 3; L <= p; M = L += 2) {
                        b = new _kw159(this.pages[M / 2 + c + 1], KWC.translate("Pages $$p1$$ - $$p2$$").replace("$$p1$$", M + 2).replace("$$p2$$", M + 3));
                        b.properties.apply_to_all = true;
                        this.pages[M / 2 + c + 1].view = b;
                        if ((this.product.type != null) && this.product.type === "agenda") {
                            b.can_move = false
                        }
                        this.views.push(b)
                    }
                    b = new _kw159(this.pages[this.pages.length - 1], KWC.translate("Page $$p1$$ and inner cover").replace("$$p1$$", A.num_pages));
                    b.properties.apply_to_all = true;
                    b.properties.hide_right = true;
                    b.properties.double_background = false;
                    b.can_move = false;
                    this.pages[this.pages.length - 1].view = b;
                    this.views.push(b)
                } if (this.product.properties.right_to_left) {
                    if (this.product.properties.has_cover) {
                        this.views.push(this.views.splice(0, 1)[0]);
                        this.views.push(this.views.splice(0, 1)[0]);
                        this.views.push(this.views.splice(0, 1)[0]);
                        this.views[this.views.length - 1].name = KWC.translate("Rear Cover");
                        this.views[this.views.length - 3].name = KWC.translate("Front Cover");
                        o = this.views;
                        for (M = K = 0, q = o.length; K < q; M = ++K) {
                            t = o[M];
                            t.selected = M === this.views.length - 3
                        }
                        r = this.views.length - 3;
                        G = [];
                        for (M = J = 0, l = r / 2 - 1; J <= l; M = J += 1) {
                            m = this.views[M].name;
                            this.views[M].name = this.views[r - M - 1].name;
                            G.push(this.views[r - M - 1].name = m)
                        }
                        return G
                    } else {
                        k = this.views;
                        for (M = I = 0, f = k.length; I < f; M = ++I) {
                            t = k[M];
                            t.selected = M === this.views.length - 1
                        }
                        r = this.views.length;
                        F = [];
                        for (M = H = 0, j = r / 2 - 1; H <= j; M = H += 1) {
                            m = this.views[M].name;
                            this.views[M].name = this.views[r - M - 1].name;
                            F.push(this.views[r - M - 1].name = m)
                        }
                        return F
                    }
                }
                break;
            case "calendar":
                D = [];
                for (M = E = 0, h = A.num_pages - 1; 0 <= h ? E <= h : E >= h; M = 0 <= h ? ++E : --E) {
                    m = "";
                    if (A.view_names && M < A.view_names.length) {
                        m = A.view_names[M]
                    }
                    b = new CalendarView(this.pages[M], m);
                    this.pages[M].view = b;
                    this.views.push(b);
                    D.push(b.selected = M === 0)
                }
                return D;
                break;
            case "page":
                B = [];
                for (M = C = 0, g = A.num_pages - 1; 0 <= g ? C <= g : C >= g; M = 0 <= g ? ++C : --C) {
                    m = "";
                    if (A.view_names && M < A.view_names.length) {
                        m = A.view_names[M]
                    }
                    b = new View(this.pages[M], m);
                    this.pages[M].view = b;
                    this.views.push(b);
                    B.push(b.selected = M === 0)
                }
                return B;
                break;
            case "gift":
                y = [];
                for (M = z = 0, e = A.num_pages - 1; 0 <= e ? z <= e : z >= e; M = 0 <= e ? ++z : --z) {
                    m = "";
                    if (A.view_names && M < A.view_names.length) {
                        m = A.view_names[M]
                    }
                    b = new GiftView(this.pages[M], m);
                    this.pages[M].view = b;
                    this.views.push(b);
                    y.push(b.selected = M === 0)
                }
                return y;
                break;
            case "canvas":
                w = [];
                for (M = x = 0, d = A.num_pages - 1; 0 <= d ? x <= d : x >= d; M = 0 <= d ? ++x : --x) {
                    m = "";
                    if (A.view_names && M < A.view_names.length) {
                        m = A.view_names[M]
                    }
                    b = new CanvasView(this.pages[M], m);
                    this.pages[M].view = b;
                    this.views.push(b);
                    w.push(b.selected = M === 0)
                }
                return w;
                break;
            case "card-folded":
                b = new _kw158(this.pages[0], A.view_names[0], 0.5, 0, 0.5, 1);
                this.pages[0].view = b;
                b.selected = true;
                this.views.push(b);
                b = new _kw159(this.pages[1], A.view_names[1]);
                b.type = "card";
                b.can_move = false;
                this.pages[1].view = b;
                this.views.push(b);
                b = new _kw158(this.pages[0], A.view_names[2], 0, 0, 0.5, 1);
                this.views.push(b);
                b = new _kw159(this.pages[0], A.view_names[3]);
                b.type = "card2";
                b.can_move = false;
                return this.views.push(b)
        }
    };
    a.prototype.setStartMonth = function (m, k) {
        var j, l, g, f, o, b, h, e, d, c;
        m = m | 0;
        k = k | 0;
        if (this.product.units[0].type === "calendar") {
            this.properties.start_year = m;
            this.properties.start_month = k;
            h = this.pages;
            d = [];
            for (j = g = 0, o = h.length; g < o; j = ++g) {
                l = h[j];
                l.properties.year = m;
                l.properties.month = k;
                l.updated();
                if (j > 0) {
                    if (KWC.month_names != null) {
                        this.views[j].name = KWC.translate(KWC.month_names[k])
                    }
                    k++;
                    if (k >= 12) {
                        k = 0;
                        d.push(m++)
                    } else {
                        d.push(void 0)
                    }
                } else {
                    d.push(void 0)
                }
            }
            return d
        } else {
            if ((this.product.type != null) && this.product.type === "agenda") {
                this.properties.start_year = m;
                this.properties.start_month = k;
                e = this.pages;
                c = [];
                for (j = f = 0, b = e.length; f < b; j = ++f) {
                    l = e[j];
                    c.push(l.updated())
                }
                return c
            }
        }
    };
    a.prototype._kw161 = function () {
        var c, e, b, d;
        d = this.views;
        for (e = 0, b = d.length; e < b; e++) {
            c = d[e];
            if (c.selected) {
                return c
            }
        }
        this.views[0].selected = true;
        return this.views[0]
    };
    a.prototype._kw162 = function (b) {
        var c, e, d;
        for (c = e = 0, d = this.views.length - 1; e <= d; c = e += 1) {
            this.views[c].selected = c === b
        }
        return null
    };
    a.prototype._kw50 = function () {
        var f, c, e, b, d;
        c = 0;
        d = this.pages;
        for (e = 0, b = d.length; e < b; e++) {
            f = d[e];
            c += f._kw50()
        }
        return c
    };
    a.prototype._kw106 = function () {
        var f, c, e, b, d;
        c = [];
        d = this.pages;
        for (e = 0, b = d.length; e < b; e++) {
            f = d[e];
            c = c.concat(f._kw106())
        }
        return c
    };
    a.prototype._kw107 = function () {
        var f, c, e, b, d;
        c = [];
        d = this.pages;
        for (e = 0, b = d.length; e < b; e++) {
            f = d[e];
            c = c.concat(f._kw107())
        }
        return c
    };
    a.prototype.load = function (C, t, y, j) {
        var x, w, v, l, r, c, q, g, e, d, b, A, D, B, z, m, k, h, f;
        if (j == null) {
            j = C.product
        }
        this.product = j;
        if (C.properties) {
            this.properties = C.properties
        }
        this.pages = [];
        this.views = [];
        c = {};
        m = C.pages;
        for (g = 0, A = m.length; g < A; g++) {
            v = m[g];
            k = v.objects;
            for (e = 0, D = k.length; e < D; e++) {
                w = k[e];
                if (w.type === "photo") {
                    if ((w.source != null) && (w.source.id != null)) {
                        r = c[w.source.id];
                        if (r != null) {
                            w.source = r
                        } else {
                            c[w.source.id] = w.source
                        }
                    }
                }
            }
        }
        h = C.pages;
        for (x = d = 0, B = h.length; d < B; x = ++d) {
            v = h[x];
            l = new Page(this, v.width, v.height, new Unit("loader", 0));
            l.load(v, t, y);
            this.pages.push(l)
        }
        f = this.product.units;
        for (b = 0, z = f.length; b < z; b++) {
            q = f[b];
            this._kw160(q)
        }
        if ((this.properties.start_year != null) && (this.properties.start_month != null) && this.properties.start_year === 2015 && this.properties.start_month === 0 && this.product.type === "calendar") {
            this.properties.start_year = 2016;
            this.setStartMonth(2016, 0);
            KWC.config.rerender_texts = true
        }
    };
    a.prototype.save = function (check) {
        check = typeof check !== 'undefined' ? check : 1;
        var h, b, d, e, g, c, f;
        b = [];
        f = this.pages;
        for (g = 0, c = f.length; g < c; g++) {
            h = f[g];
            e = h.save(check);
            if (e === null) {
                return null
            }
            b.push(e)
        }
        d = {
            product: Product.clone(this.product),
            pages: b,
            history: [],
            date: Date.now(),
            properties: this.properties
        };
        return d
    };
    a.prototype.saved = function (b) {
        return this.history.push({
            id: b,
            date: Date.now()
        })
    };
    a._kw163 = function (e, c, f, g) {
        var b, d;
        d = e.product;
        if (d.units[0].type.indexOf("book") >= 0) {
            if (d.units.length === 1) {
                d = new Book(d.type, null, d.units[0]);
                d.properties = e.product.properties
            } else {
                d = new Book(d.type, d.units[0], d.units[1]);
                d.properties = e.product.properties
            }
        } else {
            if (d.type === "canvas") {
                d = new CanvasProduct(d.units[0])
            }
        }
        b = new a(d);
        b.load(e, c, f, d);
        if (e.history) {
            b.history = e.history
        }
        if (g && e.date) {
            b.history.push({
                id: g,
                date: e.date
            })
        }
        return b
    };
    a.prototype.applyThemeImpl = function (m, d, q) {
        var o, c, e, s, k, j, r, b, l, h, g, f;
        if (d == null) {
            d = manager
        }

        // this.theme_data = m.slice(3, m.length);  //截到前三个['封面','封面封底','封底']
        this.properties.theme_id = q;
        if (m.pages != null) {
            e = m.pages
        } else {
            e = [m]
        } if (e.length === 1 && this.pages.length > 1) {
            l = this.views;
            g = [];
            for (k = 0, r = l.length; k < r; k++) {
                s = l[k];
                if (s.selected) {
                    g.push(s.page._kw109(e[0], manager))
                } else {
                    g.push(void 0)
                }
            }
            return g
        } else {
            if (this.product instanceof Book) {
                return new Theme(this).applyBookTheme(e, manager)
            } else {
                h = this.pages;
                f = [];
                for (o = j = 0, b = h.length; j < b; o = ++j) {
                    c = h[o];
                    if (o < e.length) {
                        c._kw109(e[o], manager);
                        c.screenview = null;
                        c.updated();
                        f.push(c._kw153())
                    } else {
                        f.push(void 0)
                    }
                }
                return f
            }
        }
    };
    a.prototype._kw109 = function (c, d, b) {
        if (d == null) {
            d = manager
        }
        return this._kw55((function (e) {
            return function () {
                return e.applyThemeImpl(c, d, b)
            }
        })(this))
    };
    a.prototype.applyCreator2ThemeImpl = function (d, j) {
        var e, h, g, c, f, b;
        if (j == null) {
            j = manager
        }
        if (this.product.type === "calendar") {
            new _kw138(this)._kw109(d, j);
            if (this.product.units[0].preload != null) {
                f = this.product.units[0].preload;
                b = [];
                for (g = 0, c = f.length; g < c; g++) {
                    h = f[g];
                    if (h.pages === "all") {
                        b.push((function () {
                            var l, i, k;
                            k = [];
                            for (e = l = 0, i = this.pages.length - 1; l <= i; e = l += 1) {
                                k.push(this.pages[e].loadObject(h))
                            }
                            return k
                        }).call(this))
                    } else {
                        b.push(this.pages[0].loadObject(h))
                    }
                }
                return b
            }
        } else {
            if (this.pages.length > 2) {
                return new _kw165(this)._kw109(d, j)
            } else {
                return new _kw138(this)._kw109(d, j)
            }
        }
    };
    a.prototype._kw164 = function (b, c) {
        if (c == null) {
            c = manager
        }
        return this._kw55((function (d) {
            return function () {
                return d.applyCreator2ThemeImpl(b, c)
            }
        })(this))
    };
    a.prototype.clearImpl = function () {
        var e, d, b, c;
        c = this.pages;
        for (d = 0, b = c.length; d < b; d++) {
            e = c[d];
            e.clear()
        }
        return this._kw166()
    };
    a.prototype.clear = function () {
        return this._kw55((function (b) {
            return function () {
                return b.clearImpl()
            }
        })(this))
    };
    a.prototype._kw167 = function (b) {
        return this._kw55((function (c) {
            return function () {
                var h, g, e, f, d;
                f = c.pages;
                d = [];
                for (g = 0, e = f.length; g < e; g++) {
                    h = f[g];
                    if (h.properties.apply_to_all) {
                        h.background.set(b);
                        d.push(h.updated())
                    } else {
                        d.push(void 0)
                    }
                }
                return d
            }
        })(this))
    };
    a.prototype._kw168 = function (b) {
        return this._kw55((function (c) {
            return function () {
                var h, g, e, f, d;
                f = c.pages;
                d = [];
                for (g = 0, e = f.length; g < e; g++) {
                    h = f[g];
                    if (h.properties.apply_to_all) {
                        h.background._kw169(b);
                        d.push(h.updated())
                    } else {
                        d.push(void 0)
                    }
                }
                return d
            }
        })(this))
    };
    a.prototype._kw170 = function (b) {
        return this._kw55((function (c) {
            return function () {
                var h, g, e, f, d;
                f = c.pages;
                d = [];
                for (g = 0, e = f.length; g < e; g++) {
                    h = f[g];
                    if (h.properties.apply_to_all) {
                        h.background._kw171(b);
                        d.push(h.updated())
                    } else {
                        d.push(void 0)
                    }
                }
                return d
            }
        })(this))
    };
    a.prototype.applyLayoutToAll = function (b) {
        return this._kw55((function (c) {
            return function () {
                var h, g, e, f, d;
                f = c.pages;
                d = [];
                for (g = 0, e = f.length; g < e; g++) {
                    h = f[g];
                    if (h.properties.apply_to_all) {
                        h._kw188(b);
                        d.push(h.updated())
                    } else {
                        d.push(void 0)
                    }
                }
                return d
            }
        })(this))
    };
    a.prototype.applyLeftLayoutToAll = function (b) {
        return this._kw55((function (c) {
            return function () {
                var h, g, e, f, d;
                f = c.pages;
                d = [];
                for (g = 0, e = f.length; g < e; g++) {
                    h = f[g];
                    if (h.properties.apply_to_all && !h.view.properties.hide_left) {
                        h._kw189(b);
                        d.push(h.updated())
                    } else {
                        d.push(void 0)
                    }
                }
                return d
            }
        })(this))
    };
    a.prototype.applyRightLayoutToAll = function (b) {
        return this._kw55((function (c) {
            return function () {
                var h, g, e, f, d;
                f = c.pages;
                d = [];
                for (g = 0, e = f.length; g < e; g++) {
                    h = f[g];
                    if (h.properties.apply_to_all && !h.view.properties.hide_right) {
                        h._kw190(b);
                        d.push(h.updated())
                    } else {
                        d.push(void 0)
                    }
                }
                return d
            }
        })(this))
    };
    a.prototype._kw55 = function (b) {
        this._kw74();
        b();
        return this._kw76()
    };
    a.prototype._kw172 = function (e, h) {
        var c, d, b, g, f;
        if (this.product instanceof Book) {
            return this.getBookThumbnail(e)
        } else {
            if (this.pages[0].spec.preview) {
                return this.getGiftThumbnail(e)
            } else {
                if (this.product.type === "canvas") {
                    return this.getCanvasThumbnail(e)
                } else {
                    if (h == null) {
                        if (this.product.type === "calendar" && this.views.length > 1) {
                            h = 1
                        } else {
                            h = 0
                        }
                    }
                    c = KWC.createCanvas();
                    c.width = e;
                    c.height = e;
                    d = c.getContext("2d");
                    d.fillStyle = "#FFF";
                    d.fillRect(0, 0, e, e);
                    d.translate(e / 2, e / 2);
                    g = Math.max(1, Math.round(e / 20));
                    b = this.views[h]._kw172(e - g * 2);
                    f = (e - g * 2) / Math.max(b.width, b.height);
                    d.save();
                    d.shadowBlur = g;
                    d.shadowColor = "#000";
                    d.shadowOpacity = 1;
                    d.fillStyle = "#000";
                    d.fillRect(-b.width / 2 * f, -b.height / 2 * f, b.width * f, b.height * f);
                    d.restore();
                    d.drawImage(b, -b.width / 2 * f, -b.height / 2 * f, b.width * f, b.height * f);
                    return c
                }
            }
        }
    };
    a.prototype.getBookThumbnail = function (e) {
        var c, d, b, f;
        c = KWC.createCanvas();
        c.width = e;
        c.height = e;
        d = c.getContext("2d");
        f = Math.max(1, Math.round(e / 20));
        d.fillStyle = "#FFF";
        d.fillRect(0, 0, e, e);
        if (KWP_CONF.advanced && this.views.length > 5) {
            b = this.views[4]._kw172(e * 0.9 - f * 2);
            d.save();
            d.shadowBlur = f;
            d.shadowColor = "#000";
            d.shadowOpacity = 1;
            d.fillStyle = "#000";
            d.fillRect(f, f, b.width, b.height);
            d.restore();
            d.drawImage(b, f, f);
            b = this.views[5]._kw172(e * 0.9 - f * 2);
            d.save();
            d.shadowBlur = f;
            d.shadowColor = "#000";
            d.shadowOpacity = 1;
            d.fillStyle = "#000";
            d.fillRect(e - f - b.width, e - f - b.height, b.width, b.height);
            d.restore();
            d.drawImage(b, e - f - b.width, e - f - b.height);
            if (this.product.hasCover()) {
                b = this.views[2]._kw172(e * 0.5);
                d.translate(e / 2, e / 2);
                d.rotate(-Math.PI / 16);
                d.save();
                d.shadowBlur = f;
                d.shadowColor = "#000";
                d.shadowOpacity = 1;
                d.fillStyle = "#000";
                d.fillRect(-b.width / 2, -b.height / 2, b.width, b.height);
                d.restore();
                d.drawImage(b, -b.width / 2, -b.height / 2)
            }
            return c
        } else {
            if (this.product.hasCover()) {
                b = this.views[2]._kw172(e - f * 2)
            } else {
                b = this.views[0]._kw172(e - f * 2)
            }
            d.save();
            d.shadowBlur = f;
            d.shadowColor = "#000";
            d.shadowOpacity = 1;
            d.fillStyle = "#000";
            d.fillRect(e / 2 - b.width / 2, e / 2 - b.height / 2, b.width, b.height);
            d.restore();
            d.drawImage(b, e / 2 - b.width / 2, e / 2 - b.height / 2);
            return c
        }
    };
    a.prototype.getGiftThumbnail = function (q) {
        var o, d, b, m, l, h, p, g, f, k, e;
        p = Math.floor(Math.sqrt(this.pages.length - 1)) + 1;
        if (p === 1) {
            return this.getGiftThumbnailPage(q, this.pages[0])
        } else {
            d = KWC.createCanvas();
            d.width = q;
            d.height = q;
            b = d.getContext("2d");
            m = 0;
            for (l = g = 0, k = p - 1; 0 <= k ? g <= k : g >= k; l = 0 <= k ? ++g : --g) {
                for (h = f = 0, e = p - 1; 0 <= e ? f <= e : f >= e; h = 0 <= e ? ++f : --f) {
                    o = this.getGiftThumbnailPage(q / p, this.pages[m]);
                    b.drawImage(o, h * q / p, l * q / p);
                    m++;
                    if (m >= this.pages.length) {
                        break
                    }
                }
                if (m >= this.pages.length) {
                    break
                }
            }
            return d
        }
    };
    a.prototype.getGiftThumbnailPage = function (i, f) {
        var c, b, h, e, j, d, g;
        c = KWC.createCanvas();
        c.width = 2 * i;
        c.height = 2 * i;
        b = c.getContext("2d");
        if (f.spec.preview.mask && !f.spec.preview.mask_image) {
            f.spec.preview.mask_image = KWC.createImage();
            f.spec.preview.mask_image.crossOrigin = "Anonymous";
            f.spec.preview.mask_image.onload = (function (k) {
                return function () {
                    return f._kw153()
                }
            })(this);
            f.spec.preview.mask_image.src = f.spec.preview.mask.replace("http://", "//")
        }
        if (f.spec.preview.background && !f.spec.preview.background_image) {
            f.spec.preview.background_image = KWC.createImage();
            f.spec.preview.background_image.crossOrigin = "Anonymous";
            f.spec.preview.background_image.onload = (function (k) {
                return function () {
                    return f._kw153()
                }
            })(this);
            f.spec.preview.background_image.src = f.spec.preview.background.replace("http://", "//")
        }
        if (f.spec.preview.foreground && !f.spec.preview.foreground_image) {
            f.spec.preview.foreground_image = KWC.createImage();
            f.spec.preview.foreground_image.crossOrigin = "Anonymous";
            f.spec.preview.foreground_image.onload = (function (k) {
                return function () {
                    return f._kw153()
                }
            })(this);
            f.spec.preview.foreground_image.src = f.spec.preview.foreground.replace("http://", "//")
        }
        e = f.width / f.spec.preview.position.width;
        if (f.spec.preview.position.radius && f.spec.preview.position.radius > 0) {
            e = e / (Math.PI * 0.5)
        }
        h = f.height / f.spec.preview.position.height;
        g = e * 2 * i / Math.max(e, h);
        d = h * 2 * i / Math.max(e, h);
        if (f.spec.preview.position.radius && f.spec.preview.position.radius > 0) {
            b.fillStyle = "#FFF";
            b.fillRect(0, 0, c.width, c.height);
            if (f.spec.preview.background_image && f.spec.preview.background_image.complete && f.spec.preview.background_image.width > 0 && f.spec.preview.background_image.height > 0) {
                b.drawImage(f.spec.preview.background_image, c.width / 2 - g / 2, c.height / 2 - d / 2, g, d)
            }
            j = new _kw34(f._kw172()).create(2 * i * Math.max(f.spec.preview.position.width * Math.PI * 0.5, f.spec.preview.position.height));
            j = new _kw41(j).render(2 * i * f.spec.preview.position.radius);
            b.drawImage(j, c.width / 2 - g / 2 + f.spec.preview.position.x * g, c.height / 2 - d / 2 + f.spec.preview.position.y * d, g * f.spec.preview.position.width, d * f.spec.preview.position.height);
            if (f.spec.preview.foreground_image && f.spec.preview.foreground_image.complete && f.spec.preview.foreground_image.width > 0 && f.spec.preview.foreground_image.height > 0) {
                b.drawImage(f.spec.preview.foreground_image, c.width / 2 - g / 2, c.height / 2 - d / 2, g, d)
            }
        } else {
            if (f.spec.preview.mask_image && f.spec.preview.mask_image.complete && f.spec.preview.mask_image.width > 0 && f.spec.preview.mask_image.height > 0) {
                b.drawImage(f.spec.preview.mask_image, c.width / 2 - g / 2, c.height / 2 - d / 2, g, d);
                b.globalCompositeOperation = "source-in"
            }
            b.drawImage(f._kw172(i), c.width / 2 - g / 2 + f.spec.preview.position.x * g, c.height / 2 - d / 2 + f.spec.preview.position.y * d, g * f.spec.preview.position.width, d * f.spec.preview.position.height);
            b.globalCompositeOperation = "destination-over";
            if (f.spec.preview.background_image && f.spec.preview.background_image.complete && f.spec.preview.background_image.width > 0 && f.spec.preview.background_image.height > 0) {
                b.drawImage(f.spec.preview.background_image, c.width / 2 - g / 2, c.height / 2 - d / 2, g, d)
            }
            b.fillStyle = "#FFF";
            b.fillRect(0, 0, c.width, c.height);
            if (f.spec.preview.foreground_image && f.spec.preview.foreground_image.complete && f.spec.preview.foreground_image.width > 0 && f.spec.preview.foreground_image.height > 0) {
                b.globalCompositeOperation = "source-over";
                b.drawImage(f.spec.preview.foreground_image, c.width / 2 - g / 2, c.height / 2 - d / 2, g, d)
            }
        }
        return new _kw34(c).create(i)
    };
    a.prototype.getCanvasThumbnail = function (t) {
        var q, d, c, b, s, k, o, j, g, m, l, p, r, f, e;
        m = this.pages[0];
        c = KWC.createCanvas();
        c.width = t;
        c.height = t;
        b = c.getContext("2d");
        b.fillStyle = "#FFF";
        b.fillRect(0, 0, c.width, c.height);
        if (m.spec.border && m.spec.border > 0) {
            l = Math.min((c.width - 8) / m.width, (c.height - 8) / m.height);
            r = m.width * l;
            k = m.height * l;
            d = r * m.spec.border / m.width;
            f = r - 2 * d;
            o = k - 2 * d;
            g = m._kw172(t);
            p = g.width * m.spec.border / m.width;
            b.save();
            b.shadowBlur = 4;
            b.shadowOpacity = 1;
            b.shadowColor = "#000";
            b.fillStyle = "#000";
            b.beginPath();
            b.moveTo(c.width / 2 - f / 2 - d / 2, c.height / 2 - o / 2 - d / 2);
            b.lineTo(c.width / 2 + f / 2 - d * 3 / 4, c.height / 2 - o / 2 - d / 2);
            b.lineTo(c.width / 2 + f / 2, c.height / 2 - o / 2);
            b.lineTo(c.width / 2 + f / 2, c.height / 2 + o / 2);
            b.lineTo(c.width / 2 - f / 2, c.height / 2 + o / 2);
            b.lineTo(c.width / 2 - f / 2 - d / 2, c.height / 2 + o / 2 - d * 3 / 4);
            b.lineTo(c.width / 2 - f / 2 - d / 2, c.height / 2 - o / 2 - d / 2);
            b.fill();
            b.restore();
            for (j = e = 0; e <= d; j = e += 1) {
                q = j / d;
                s = (d - j) / 4;
                b.drawImage(g, p, q * p, g.width - 2 * p, 1, c.width / 2 - f / 2 - d / 2 + j / 2, c.height / 2 - o / 2 - d / 2 + j / 2, f - s, 1);
                b.drawImage(g, q * p, p, 1, g.height - 2 * p, c.width / 2 - f / 2 - d / 2 + j / 2, c.height / 2 - o / 2 - d / 2 + j / 2, 1, o - s)
            }
            b.drawImage(g, p, p, g.width - 2 * p, g.height - 2 * p, c.width / 2 - f / 2, c.height / 2 - o / 2, f, o);
            b.fillStyle = "rgba(96,96,96,.4)";
            b.beginPath();
            b.moveTo(c.width / 2 - f / 2 - d / 2, c.height / 2 - o / 2 - d / 2);
            b.lineTo(c.width / 2 + f / 2 - d * 3 / 4, c.height / 2 - o / 2 - d / 2);
            b.lineTo(c.width / 2 + f / 2, c.height / 2 - o / 2);
            b.lineTo(c.width / 2 - f / 2, c.height / 2 - o / 2);
            b.fill();
            b.fillStyle = "rgba(0,0,0,.4)";
            b.beginPath();
            b.moveTo(c.width / 2 - f / 2 - d / 2, c.height / 2 - o / 2 - d / 2);
            b.lineTo(c.width / 2 - f / 2 - d / 2, c.height / 2 + o / 2 - d * 3 / 4);
            b.lineTo(c.width / 2 - f / 2, c.height / 2 + o / 2);
            b.lineTo(c.width / 2 - f / 2, c.height / 2 - o / 2);
            b.fill();
            return c
        } else {
            l = Math.min((c.width - 8) / m.width, (c.height - 8) / m.height);
            r = m.width * l;
            k = m.height * l;
            b.save();
            b.shadowBlur = 4;
            b.shadowColor = "#000";
            b.shadowOpacity = 1;
            b.fillStyle = "#000";
            b.fillRect(c.width / 2 - r / 2, c.height / 2 - k / 2, r, k);
            b.restore();
            b.drawImage(m._kw172(t), c.width / 2 - r / 2, c.height / 2 - k / 2, r, k);
            return c
        }
    };
    a.prototype.similar = function (b) {
        return this.product.similar(b)
    };
    a.prototype.updateProduct = function (g, c) {
        var d, b, f, e;
        if (c == null) {
            c = false
        }
        if (this.product.similar(g) || c) {
            b = this.pages
        }
        this.product = g;
        this.init();
        if (b) {
            for (d = f = 0, e = Math.min(this.pages.length, b.length) - 1; f <= e; d = f += 1) {
                this.pages[d]._kw173(b[d])
            }
        }
    };
    a.prototype.deletePhotoSource = function (b) {
        var k, e, c, i, h, l, d, j, g, f;
        j = this.pages;
        f = [];
        for (i = 0, l = j.length; i < l; i++) {
            c = j[i];
            k = [];
            g = c.objects;
            for (h = 0, d = g.length; h < d; h++) {
                e = g[h];
                if (e.type === "photo" && e.source === b) {
                    k.push(e)
                }
            }
            f.push((function () {
                var p, m, o;
                o = [];
                for (p = 0, m = k.length; p < m; p++) {
                    e = k[p];
                    o.push(c._kw86(e))
                }
                return o
            })())
        }
        return f
    };
    a.prototype._kw74 = function () {
        var f, b, e, c, d;
        b = [];
        d = this.pages;
        for (e = 0, c = d.length; e < c; e++) {
            f = d[e];
            b.push(f.clone())
        }
        return this.undo_action = {
            undo: (function (g) {
                return function () {
                    var l, k, m, j, h;
                    manager._kw174();
                    h = g.pages;
                    for (l = m = 0, j = h.length; m < j; l = ++m) {
                        f = h[l];
                        k = f.objects;
                        f._kw90(b[l]);
                        f.animate(k);
                        f.updated()
                    }
                    return g._kw166()
                }
            })(this)
        }
    };
    a.prototype._kw76 = function () {
        var f, b, e, c, d;
        b = [];
        d = this.pages;
        for (e = 0, c = d.length; e < c; e++) {
            f = d[e];
            b.push(f.clone())
        }
        this.undo_action.redo = (function (g) {
            return function () {
                var l, k, m, j, h;
                manager._kw174();
                h = g.pages;
                for (l = m = 0, j = h.length; m < j; l = ++m) {
                    f = h[l];
                    k = f.objects;
                    f.screenview = null;
                    f._kw90(b[l]);
                    f.animate(k);
                    f.updated()
                }
                return g._kw166()
            }
        })(this);
        return editor._kw45(this.undo_action)
    };
    a.prototype.movePage = function (c, b) {
        return this._kw55((function (d) {
            return function () {
                var y, x, w, t, u, j, g, s, m, k, h, f, e, z, r, q, o, l;
                j = d.views[c].page;
                g = d.views[b].page;
                x = d.pages.indexOf(j);
                w = d.pages.indexOf(g);
                u = d.pages[x];
                if (x < w) {
                    for (y = m = x, r = w - 1; m <= r; y = m += 1) {
                        d.pages[y] = d.pages[y + 1]
                    }
                } else {
                    if (x > w) {
                        for (y = k = x, q = w + 1; k >= q; y = k += -1) {
                            d.pages[y] = d.pages[y - 1]
                        }
                    }
                }
                d.pages[w] = u;
                t = [];
                for (y = h = c; c <= b ? h <= b : h >= b; y = c <= b ? ++h : --h) {
                    t.push(d.views[y].name)
                }
                if (c < b) {
                    s = d.views[c];
                    for (y = f = c, o = b - 1; f <= o; y = f += 1) {
                        d.views[y] = d.views[y + 1]
                    }
                    d.views[b] = s
                } else {
                    if (c > b) {
                        s = d.views[c];
                        for (y = e = c, l = b + 1; e >= l; y = e += -1) {
                            d.views[y] = d.views[y - 1]
                        }
                        d.views[b] = s
                    }
                }
                for (y = z = c; c <= b ? z <= b : z >= b; y = c <= b ? ++z : --z) {
                    d.views[y].name = t.splice(0, 1)[0]
                }
            }
        })(this))
    };
    a.prototype.setNumberOfPages = function (p, l) {
        var y, x, o, m, b, w, t, u, r, s, h, f, e, c, z, A, q, k, j, g;
        if (p !== this.getNumberOfPages()) {
            if (this.product.properties.right_to_left) {
                if (p < this.product.block_unit.num_pages) {
                    y = (this.product.block_unit.num_pages - p) / 2;
                    o = this.product._kw154() ? 0 : 1;
                    this.pages.splice(this.pages.length - y - o, y);
                    this.views.splice(o, y);
                    w = false;
                    q = this.views;
                    for (h = 0, z = q.length; h < z; h++) {
                        r = q[h];
                        w |= r.selected
                    }
                    if (!w) {
                        this.views[0].selected = true
                    }
                    if (!this.product._kw154()) {
                        this.views[0].name = KWC.translate("Page $$p1$$ and inner cover").replace("$$p1$$", p)
                    }
                } else {
                    u = this.product.block_unit;
                    y = p - u.num_pages;
                    b = u.num_pages + (this.product._kw154() ? 1 : 0);
                    for (x = f = 0, k = y - 1; f <= k; x = f += 2) {
                        m = new Page(this, u.width * 2, u.height, u);
                        m.properties.apply_to_all = true;
                        if (this.product._kw154()) {
                            this.pages.push(m)
                        } else {
                            this.pages.splice(this.pages.length - 1, 0, m)
                        }
                        s = new _kw159(m, KWC.translate("Pages $$p1$$ - $$p2$$").replace("$$p1$$", b).replace("$$p2$$", b + 1));
                        b += 2;
                        s.properties.apply_to_all = true;
                        m.view = s;
                        if (this.product._kw154()) {
                            this.views.splice(0, 0, s)
                        } else {
                            this.views.splice(1, 0, s)
                        } if (!this.product._kw154()) {
                            this.views[0].name = KWC.translate("Page $$p1$$ and inner cover").replace("$$p1$$", p)
                        }
                    }
                }
            } else {
                if (p < this.product.block_unit.num_pages) {
                    y = (this.product.block_unit.num_pages - p) / 2;
                    o = this.product._kw154() ? 0 : 1;
                    this.pages.splice(this.pages.length - y - o, y);
                    this.views.splice(this.views.length - y - o, y);
                    w = false;
                    j = this.views;
                    for (e = 0, A = j.length; e < A; e++) {
                        r = j[e];
                        w |= r.selected
                    }
                    if (!w) {
                        this.views[2].selected = true
                    }
                    if (!this.product._kw154()) {
                        this.views[this.views.length - 1].name = KWC.translate("Page $$p1$$ and inner cover").replace("$$p1$$", p)
                    }
                } else {
                    t = this.product.properties.has_cover ? 1 : 0;
                    u = this.product.block_unit;
                    y = p - u.num_pages;
                    b = u.num_pages + (this.product._kw154() ? 1 : 0);
                    for (x = c = 0, g = y - 1; c <= g; x = c += 2) {
                        m = new Page(this, u.width * 2, u.height, u);
                        m.properties.apply_to_all = true;
                        if (this.product._kw154()) {
                            this.pages.push(m)
                        } else {
                            this.pages.splice(this.pages.length - 1, 0, m)
                        }
                        s = new _kw159(m, KWC.translate("Pages $$p1$$ - $$p2$$").replace("$$p1$$", b).replace("$$p2$$", b + 1));
                        b += 2;
                        s.properties.apply_to_all = true;
                        m.view = s;
                        if (this.product._kw154()) {
                            this.views.push(s)
                        } else {
                            this.views.splice(this.views.length - 1, 0, s)
                        } if (!this.product._kw154()) {
                            this.views[this.views.length - 1].name = KWC.translate("Page $$p1$$ and inner cover").replace("$$p1$$", p)
                        }
                    }
                }
            } if (this.properties.theme_id != null) {
                manager.getTheme(this.properties.theme_id, ((function (d) {
                    return function (i) {
                        d.applyThemeToExtraPages(i, y);
                        if (l != null) {
                            return l()
                        }
                    }
                })(this)))
            } else {
                if (l != null) {
                    l()
                }
            }
            this.product.block_unit.num_pages = p;
            if (this.product.properties.has_cover) {
                this.product.spine_width = this.product.units[0].getSpineWidth(p);
                this.product.units[0].width = this.product.units[0].base_width + this.product.spine_width;
                this.pages[0].resize(this.product.units[0].width, this.pages[0].height)
            }
            manager._kw176();
            this._kw166()
        } else {
            if (l != null) {
                l()
            }
        }
    };
    a.prototype.applyThemeToExtraPages = function (c, b) {
        return this._kw55((function (d) {
            return function () {
                var h, j, g, m, e, l, k, f;
                e = c.pages;
                h = (d.getNumberOfPages() - b) / 2 + (d.product.hasCover() ? 1 : 0);
                g = 0;
                while (true) {
                    if (g >= e.length) {
                        break
                    }
                    if (e[g].objects.length === 0) {
                        e.splice(g, 1)
                    } else {
                        g++
                    }
                }
                if (e.length < 3) {
                    return
                }
                g = Math.max(2, h % (e.length - 1));
                f = [];
                for (j = l = h, k = d.pages.length - 1; l <= k; j = l += 1) {
                    if (j === d.pages.length - 1) {
                        g = e.length - 1
                    }
                    m = d.pages[j];
                    m._kw109(e[g], manager);
                    m.updated();
                    g++;
                    if (g >= e.length - 2) {
                        f.push(g = 2)
                    } else {
                        f.push(void 0)
                    }
                }
                return f
            }
        })(this))
    };
    a.prototype._kw177 = function (f) {
        var c, g, e, b, d;
        c = 0;
        d = this.pages;
        for (e = 0, b = d.length; e < b; e++) {
            g = d[e];
            c += g._kw177(f)
        }
        return c
    };
    a.prototype._kw166 = function () {
        var c, f, e, d, b;
        f = manager.getImageList();
        for (d = 0, b = f.length; d < b; d++) {
            e = f[d];
            c = this._kw177(e);
            if (e._kw178) {
                e._kw178(c)
            }
        }
    };
    a.prototype.fill = function (b) {
        return this._kw55((function (c) {
            return function () {
                var A, u, x, z, y, r, t, v, m, j, g, e, D, G, F, E, C, B, d, H, w, s, q, l, h, f, k;
                t = 0;
                w = c.pages;
                for (m = 0, D = w.length; m < D; m++) {
                    y = w[m];
                    s = y.objects;
                    for (j = 0, G = s.length; j < G; j++) {
                        z = s[j];
                        if (z.type === "photo" && !z.source) {
                            t++
                        }
                    }
                }
                u = 0;
                while (t < b.length && u < c.pages.length) {
                    y = c.pages[u];
                    if (y._kw50() === 0 && !(c.product instanceof AgendaProduct)) {
                        t += y._kw179()
                    }
                    u++
                }
                v = [];
                q = c.pages;
                for (g = 0, F = q.length; g < F; g++) {
                    y = q[g];
                    l = y.objects;
                    for (e = 0, E = l.length; e < E; e++) {
                        z = l[e];
                        if (z.type === "photo" && !z.source) {
                            v.push(z)
                        }
                    }
                }
                v.sort(function (o, i) {
                    return i.width * i.height - o.width * o.height
                });
                if (v.length > c.pages.length / 2 || b.length <= v.length * 2) {
                    while (v.length < b.length) {
                        u = Math.floor(Math.random() * v.length / 2);
                        y = v.splice(u, 1)[0];
                        v.push(y);
                        x = y.page.divideMargin();
                        r = y.divide(x, 2, false);
                        if (r != null) {
                            r.source = null;
                            v.push(r);
                            _kw196._kw147(y, y.page, true);
                            _kw196._kw147(r, r.page, true)
                        }
                    }
                } else {
                    if (v.length > 0) {
                        while (placeholder.length < b.length) {
                            u = Math.floor(Math.random() * v.length / 2);
                            y = v.splice(u, 1)[0];
                            v.push(y);
                            r = y._kw51(2, false);
                            if (r != null) {
                                r.source = null
                            }
                        }
                    }
                }
                h = c.pages;
                k = [];
                for (A = d = 0, C = h.length; d < C; A = ++d) {
                    y = h[A];
                    if (c.product.properties.right_to_left && A > 0) {
                        y = c.pages[c.pages.length - A]
                    }
                    f = y.objects;
                    for (H = 0, B = f.length; H < B; H++) {
                        z = f[H];
                        if (z.type === "photo" && !z.source && b.length > 0) {
                            z.source = b.splice(0, 1)[0];
                            z._kw180()
                        }
                    }
                    y.updated();
                    if (b.length === 0) {
                        break
                    } else {
                        k.push(void 0)
                    }
                }
                return k
            }
        })(this))
    };
    a.prototype.bookFill = function (f) {
        var b, e, d, c;
        console.info(f);
        d = f.photo_list;
        b = f.fill_cover || !this.hasApparentCover();
        c = f.scratch;
        e = (function (g) {
            return function () {
                return g._kw55(function () {
                    var G, A, D, F, E, M, x, z, B, H, v, s, q, l, O, S, Q, N, L, K, J, I, j, T, R, P, C, y, w, u, r, m, k, h, t;
                    if (c) {
                        g.clearImpl();
                        if ((g.theme_data != null) && (g.properties.theme_id != null)) {
                            g.applyThemeImpl(g.theme_data, manager, g.properties.theme_id)
                        }
                    }
                    z = 0;
                    C = g.pages;
                    for (G = v = 0, O = C.length; v < O; G = ++v) {
                        E = C[G];
                        if (G === 0 && !b) {
                            continue
                        }
                        y = E.objects;
                        for (s = 0, S = y.length; s < S; s++) {
                            F = y[s];
                            if (F.type === "photo" && (F.source == null)) {
                                z++
                            }
                        }
                    }
                    if (z > d.length) {
                        while (true) {
                            H = false;
                            w = g.pages;
                            for (G = q = 0, Q = w.length; q < Q; G = ++q) {
                                E = w[G];
                                if (G === 0) {
                                    continue
                                }
                                if (z <= d.length) {
                                    break
                                }
                                M = [];
                                u = E.objects;
                                for (l = 0, N = u.length; l < N; l++) {
                                    F = u[l];
                                    if (F.type === "photo" && (F.source == null)) {
                                        M.push(F)
                                    }
                                }
                                if (M.length > 2) {
                                    M.sort(function (o, i) {
                                        return i.width * i.height - o.width * o.height
                                    });
                                    E._kw86(M[M.length - 1]);
                                    H = true;
                                    z--
                                }
                            }
                            if (z <= d.length || !H) {
                                break
                            }
                        }
                    }
                    A = 0;
                    while (z < d.length && A < g.pages.length) {
                        E = g.pages[A];
                        if (E._kw50() === 0 && !(g.product instanceof AgendaProduct) && !(A === 0 && !b)) {
                            z += E._kw179()
                        }
                        A++
                    }
                    B = [];
                    r = g.pages;
                    for (G = j = 0, L = r.length; j < L; G = ++j) {
                        E = r[G];
                        if (G === 0 && !b) {
                            continue
                        }
                        m = E.objects;
                        for (T = 0, K = m.length; T < K; T++) {
                            F = m[T];
                            if (F.type === "photo" && (F.source == null)) {
                                B.push(F)
                            }
                        }
                    }
                    B.sort(function (o, i) {
                        return i.width * i.height - o.width * o.height
                    });
                    if (B.length > 0) {
                        while (B.length < d.length) {
                            A = Math.floor(Math.random() * B.length / 2);
                            E = B.splice(A, 1)[0];
                            B.push(E);
                            D = E.page.divideMargin();
                            x = E.divide(D, 2, false);
                            if (x != null) {
                                x.source = null;
                                B.push(x);
                                _kw196._kw147(E, E.page, true);
                                _kw196._kw147(x, x.page, true)
                            }
                        }
                    }
                    k = g.pages;
                    t = [];
                    for (G = R = 0, J = k.length; R < J; G = ++R) {
                        E = k[G];
                        if (G === 0 && !b) {
                            continue
                        }
                        if (g.product.properties.right_to_left && G > 0) {
                            E = g.pages[g.pages.length - G]
                        }
                        h = E.objects;
                        for (P = 0, I = h.length; P < I; P++) {
                            F = h[P];
                            if (F.type === "photo" && (F.source == null) && d.length > 0) {
                                F.source = d.splice(0, 1)[0];
                                F._kw180();
                                F.reduceCrop()
                            }
                        }
                        E.updated();
                        if (d.length === 0) {
                            break
                        } else {
                            t.push(void 0)
                        }
                    }
                    return t
                })
            }
        })(this);
        if (f.npages !== this.product.block_unit.num_pages) {
            return this.setNumberOfPages(f.npages, e)
        } else {
            return e()
        }
    };
    a.prototype.getBookBlockEmptyPages = function () {
        var l, k, e, d, c, q, h, g, m, b, j, f;
        l = 0;
        j = this.pages;
        for (k = h = 0, m = j.length; h < m; k = ++h) {
            c = j[k];
            if (k === 0 && !(this.views[0] instanceof _kw159)) {
                continue
            }
            e = !c.view.properties.hide_left ? 1 : 0;
            q = !c.view.properties.hide_right ? 1 : 0;
            f = c.objects;
            for (g = 0, b = f.length; g < b; g++) {
                d = f[g];
                if (d.type === "photo" && (d.source != null)) {
                    if (d.x - d.width / 2 < -10) {
                        e = 0
                    }
                    if (d.x + d.width / 2 > 10) {
                        q = 0
                    }
                }
            }
            l += e + q
        }
        return l
    };
    a.prototype.hasApparentCover = function () {
        return !(this.views[0] instanceof _kw159)
    };
    a.prototype.getNumberOfPages = function () {
        return this.product.block_unit.num_pages
    };
    a.prototype.isEmptyBook = function () {
        var j, d, b, g, f, k, c, h, e;
        h = this.pages;
        for (j = g = 0, k = h.length; g < k; j = ++g) {
            b = h[j];
            if (j === 0 && !(this.views[0] instanceof _kw159)) {
                continue
            }
            e = b.objects;
            for (f = 0, c = e.length; f < c; f++) {
                d = e[f];
                if (d.type === "photo" && (d.source != null)) {
                    return false
                }
            }
        }
        return true
    };
    a.prototype.getContentsReport = function () {
        var m, c, t, f, e, q, s, k, j, h, r, d, b, l, i, g;
        c = 0;
        s = 0;
        t = 0;
        l = this.pages;
        for (k = 0, r = l.length; k < r; k++) {
            e = l[k];
            m = 1;
            if ((e.view != null) && e.view instanceof _kw159 && !(e.view.properties.hide_left || e.view.properties.hide_right)) {
                m = 2
            }
            s += m;
            i = e.objects;
            for (j = 0, d = i.length; j < d; j++) {
                f = i[j];
                if ((f.type === "text" && f.text !== "" && f.text.editable) || (f.type === "photo" && (f.source != null))) {
                    m = 0;
                    break
                }
            }
            c += m;
            g = e.objects;
            for (h = 0, b = g.length; h < b; h++) {
                f = g[h];
                if (f.type === "photo") {
                    if (f._kw202()) {
                        t++
                    }
                }
            }
        }
        return q = {
            empty_page_count: c,
            total_page_count: s,
            low_resolution_count: t
        }
    };
    a.prototype._kw181 = function () {
        var f, e, c, d, b;
        d = this.pages;
        b = [];
        for (e = 0, c = d.length; e < c; e++) {
            f = d[e];
            b.push(f._kw181)
        }
        return b
    };
    a.prototype.replaceTextContents = function (b, k) {
        var e, c, h, g, j, d, i, f;
        i = this.pages;
        for (h = 0, j = i.length; h < j; h++) {
            c = i[h];
            f = c.objects;
            for (g = 0, d = f.length; g < d; g++) {
                e = f[g];
                if (e.type === "text") {
                    if (e.properties.id == null) {
                        e.properties.id = e.text
                    }
                    if (e.properties.id === b) {
                        e.text = k;
                        c.updated()
                    }
                }
            }
        }
        return void 0
    };
    a.prototype.replaceImageContents = function (c, b) {
        var f, d, i, h, k, e, j, g;
        j = this.pages;
        for (i = 0, k = j.length; i < k; i++) {
            d = j[i];
            g = d.objects;
            for (h = 0, e = g.length; h < e; h++) {
                f = g[h];
                if (f.type === "photo") {
                    if ((f.properties.id == null) && (f.source == null)) {
                        f.properties.id = "null"
                    }
                    if (f.properties.id === c) {
                        f.insertSource(b)
                    }
                }
            }
        }
        return void 0
    };
    a.prototype.getPageThumbnail = function (b, c) {
        if (c == null) {
            c = 0
        }
        return this.views[c]._kw172(b)
    };
    return a
})();
module.exports = this.Creation;
this.Utils = (function () {
    function a() { }
    a.roundRect = function (d, b, g, c, e, f) {
        if (c < 2 * f) {
            f = c / 2
        }
        if (e < 2 * f) {
            f = e / 2
        }
        d.beginPath();
        d.moveTo(b + f, g);
        d.arcTo(b + c, g, b + c, g + e, f);
        d.arcTo(b + c, g + e, b, g + e, f);
        d.arcTo(b, g + e, b, g, f);
        d.arcTo(b, g, b + c, g, f);
        return d.closePath()
    };
    a.getFirstDayOfWeek = function (e, g, d) {
        var c, b, f;
        c = new Date(e, g, 1);
        f = c.getTime();
        c.setTime(f + (d - 1) * 7 * 24 * 3600 * 1000);
        b = (c.getDay() + 6) % 7;
        c.setTime(c.getTime() - b * 24 * 3600 * 1000);
        return c
    };
    a.addDays = function (b, c) {
        return new Date(b.getTime() + c * 24 * 3600 * 1000)
    };
    a.getWeekNum = function (c) {
        var e, b;
        e = new Date(c.getFullYear(), 0, 1);
        b = Math.round((c.getTime() - e.getTime()) / (7 * 24 * 3600 * 1000)) + 1;
        if (b === 53) {
            b = 1
        }
        return b
    };
    a.transformOrientation = function (d, e, b, c) {
        switch (c) {
            case 2:
                d.translate(e, 0);
                return d.scale(-1, 1);
            case 3:
                d.translate(e, b);
                return d.rotate(Math.PI);
            case 4:
                d.translate(0, b);
                return d.scale(1, -1);
            case 5:
                d.rotate(0.5 * Math.PI);
                return d.scale(1, -1);
            case 6:
                d.rotate(0.5 * Math.PI);
                return d.translate(0, -b);
            case 7:
                d.rotate(0.5 * Math.PI);
                d.translate(e, -b);
                return d.scale(-1, 1);
            case 8:
                d.rotate(-0.5 * Math.PI);
                return d.translate(-e, 0)
        }
    };
    a.inverseOrientation = function (d, e, b, c) {
        switch (c) {
            case 2:
                d.scale(-1, 1);
                return d.translate(-e, 0);
            case 3:
                d.rotate(-Math.PI);
                return d.translate(-e, -b);
            case 4:
                d.scale(1, -1);
                return d.translate(0, -b);
            case 5:
                d.scale(1, -1);
                return d.rotate(-0.5 * Math.PI);
            case 6:
                d.translate(0, b);
                return d.rotate(-0.5 * Math.PI);
            case 7:
                d.scale(-1, 1);
                d.translate(-e, b);
                return d.rotate(-0.5 * Math.PI);
            case 8:
                d.translate(e, 0);
                return d.rotate(0.5 * Math.PI)
        }
    };
    a.checkOrientation = function (b) {
        if (b.orientation == null) {
            b.orientation = 1
        }
        switch (b.orientation) {
            case 5:
            case 6:
            case 7:
            case 8:
                b.owidth = b.height;
                return b.oheight = b.width;
            default:
                b.owidth = b.width;
                return b.oheight = b.height
        }
    };
    return a
})();
module.exports = this.Utils;
this.CalendarStyle = (function () {
    function a() {
        if ((typeof KWP_CONF !== "undefined" && KWP_CONF !== null) && (KWP_CONF.week_start_day != null)) {
            this.week_start_day = KWP_CONF.week_start_day
        } else {
            this.week_start_day = 0
        }
        this.background = {
            fill_color: "rgba(128,128,128,0)",
            stroke_color: "rgba(0,0,0,0)",
            radius: 1,
            stroke_width: 0,
            padding: 1
        };
        this.header = {
            height: 10,
            fill_color: "rgba(0,0,0,0)",
            stroke_color: "rgba(0,0,0,0)",
            radius: 1,
            stroke_width: 1,
            font_size: 35,
            font_color: "#EEE",
            font_name: "Arial",
            uppercase: true,
            shorten: null
        };
        this.headercell = {
            margin: 0.5,
            fill_color: "rgba(0,0,0,.7)",
            stroke_color: "rgba(0,0,0,0)",
            radius: 0.2,
            stroke_width: 0.25
        };
        this.cell = {
            margin: 0.25,
            padding: 2,
            fill_color: "rgba(255,255,255,.8)",
            stroke_color: "rgba(0,0,0,.15)",
            radius: 0.5,
            stroke_width: 1,
            day: {
                font_size: 40,
                font_color: "#444",
                font_name: "Arial"
            },
            text: {
                font_size: 10,
                font_color: "#222",
                font_name: "Arial"
            },
            weekend: {
                fill_color: "rgba(224,224,224,.8)",
                stroke_color: "rgba(0,0,0,.15)",
                radius: 0.5,
                stroke_width: 1,
                day: {
                    font_size: 40,
                    font_color: "#600",
                    font_name: "Arial"
                },
                text: {
                    font_size: 10,
                    font_color: "#222",
                    font_name: "Arial"
                }
            }
        }
    }
    a.getDefaultStyle = function () {
        return new a()
    };
    return a
})();
module.exports = this.CalendarStyle;
var Utils;
Utils = require("../utils/utils.coffee", Utils);
this.CalendarRenderer = (function () {
    function a(d, b, c, e) {
        this.style = d;
        this.creation = b;
        this.year = c;
        this.month = e;
        if ((typeof KWP_CONF !== "undefined" && KWP_CONF !== null) && (KWP_CONF.week_start_day != null)) {
            this.week_start_day = KWP_CONF.week_start_day;
            this.style.week_start_day = KWP_CONF.week_start_day
        } else {
            this.week_start_day = this.style.week_start_day != null ? this.style.week_start_day : 0
        }
        this.first_day = (new Date(this.year, this.month, 1).getDay() + 6 + 7 - this.week_start_day) % 7;
        this.number_of_days = new Date(this.year, this.month + 1, 0).getDate()
    }
    a.prototype.renderBox = function (d, i, g, j, e, b) {
        var c, f, k;
        c = d.getContext("2d");
        c.save();
        k = b.stroke_width / 100 * d.height;
        f = b.radius / 100 * d.height;
        c.fillStyle = b.fill_color;
        Utils.roundRect(c, i + k / 2, g + k / 2, j - k, e - k, f);
        c.fill();
        if (k > 0) {
            c.strokeStyle = b.stroke_color;
            c.lineWidth = k;
            Utils.roundRect(c, i + k / 2, g + k / 2, j - k, e - k, f);
            c.stroke()
        }
        return c.restore()
    };
    a.prototype._kw199 = function (b) {
        return this.renderBox(b, 0, 0, b.width, b.height, this.style.background)
    };
    a.prototype.renderHeader = function (d) {
        var b, c, l, j, o, m, q, k, p, g, f, e;
        b = d.getContext("2d");
        b.save();
        l = this.style.header.height / 100 * d.height;
        b.beginPath();
        b.rect(0, 0, d.width, l);
        b.clip();
        this.renderBox(d, 0, 0, d.width, d.height, this.style.header);
        m = this.style.background.padding / 100 * d.height;
        p = (d.width - 2 * m) / 7;
        c = this.style.header.font_size / 100 * l;
        b.font = ("" + c + "px ") + this.style.header.font_name;
        b.textAlign = "center";
        b.fillStyle = this.style.header.font_color;
        for (j = g = 0; g <= 6; j = ++g) {
            this.renderHeaderCell(d, m + j * p, m, p, l - m)
        }
        k = 1000;
        for (j = f = 0; f <= 6; j = f += 1) {
            q = this.creation.properties.day_names[(j + this.week_start_day) % 7];
            if (this.style.header.uppercase) {
                q = q.toUpperCase()
            }
            if (this.style.header.shorten != null) {
                q = q.substring(0, this.style.header.shorten)
            }
            o = b.measureText(q);
            if (o.width * 1.1 > p) {
                k = 2
            }
        }
        for (j = e = 0; e <= 6; j = e += 1) {
            q = this.creation.properties.day_names[(j + this.week_start_day) % 7];
            if (this.style.header.uppercase) {
                q = q.toUpperCase()
            }
            if (this.style.header.shorten != null) {
                q = q.substring(0, this.style.header.shorten)
            }
            o = b.measureText(q);
            q = q.substring(0, Math.min(k, q.length));
            b.fillText(q, m + p * (j + 0.5), l / 2 + c / 2)
        }
        return b.restore()
    };
    a.prototype.renderCell = function (d, b, j, c, g, f) {
        var e, i;
        i = this.style.cell.margin / 100 * d.height;
        e = d.getContext("2d");
        e.save();
        this.renderBox(d, b + i, j + i, c - 2 * i, g - 2 * i, f);
        return e.restore()
    };
    a.prototype.renderHeaderCell = function (d, b, i, c, f) {
        var e, g;
        g = this.style.headercell.margin / 100 * d.height;
        e = d.getContext("2d");
        e.save();
        this.renderBox(d, b + g, i + g, c - 2 * g, f - 2 * g, this.style.headercell);
        return e.restore()
    };
    a.prototype.renderCellData = function (e, k, i, l, g, f, b) {
        var d, c, j;
        d = e.getContext("2d");
        d.save();
        d.beginPath();
        d.rect(k, i, l, g);
        d.clip();
        d.fillStyle = b.day.font_color;
        c = g * b.day.font_size / 100;
        c = Math.min(c, l / 4);
        d.font = ("" + c + "px ") + b.day.font_name;
        d.textAlign = "left";
        j = (this.style.cell.padding + this.style.cell.margin) / 100 * e.height;
        d.fillText(f.day, k + j, i + j + c);
        if (f.text) {
            d.fillStyle = b.text.font_color;
            c = g * this.style.cell.text.font_size / 100;
            d.font = ("" + c + "px ") + b.text.font_name;
            d.textAlign = "center";
            d.fillText(f.text, k + l / 2, i + g - j)
        }
        return d.restore()
    };
    a.prototype.renderCells = function (b) {
        var f, j, g, k, q, o, p, m, l, d, e, c;
        j = this.style.header.height / 100 * b.height;
        o = this.style.background.padding / 100 * b.height;
        l = j + o;
        j = (b.height - j - 2 * o) / 6;
        p = (b.width - 2 * o) / 7;
        m = o;
        f = {
            day: 1
        };
        q = 0;
        k = this.first_day;
        c = [];
        for (g = d = 1, e = this.number_of_days; d <= e; g = d += 1) {
            this.renderCell(b, m + k * p, l + q * j, p, j, (k + this.week_start_day) % 7 < 5 ? this.style.cell : this.style.cell.weekend);
            this.renderCellData(b, m + k * p, l + q * j, p, j, f, (k + this.week_start_day) % 7 < 5 ? this.style.cell : this.style.cell.weekend);
            f.day++;
            k++;
            if (k >= 7) {
                k = 0;
                c.push(q++)
            } else {
                c.push(void 0)
            }
        }
        return c
    };
    a.prototype.render = function (b) {
        var c;
        c = b.getContext("2d");
        c.clearRect(0, 0, b.width, b.height);
        this._kw199(b);
        this.renderHeader(b);
        return this.renderCells(b)
    };
    return a
})();
module.exports = this.CalendarRenderer;
var __indexOf = [].indexOf || function (c) {
    for (var b = 0, a = this.length; b < a; b++) {
        if (b in this && this[b] === c) {
            return b
        }
    }
    return -1
};
this._kw138 = (function () {
    function a(b) {
        this.creation = b
    }
    a.prototype._kw109 = function (b, c) {
        var d;
        this.xml = b;
        this.manager = c;
        c._kw174();
        this.creation._kw181();
        d = this;
        this.count = 0;
        return jQuery(this.xml).find("page").each(function () {
            return d._kw139(this)
        })
    };
    a.prototype._kw139 = function (g) {
        var c, h, f, b, d, e;
        if (this.count >= this.creation.pages.length) {
            return
        }
        h = parseInt(jQuery(g).attr("foreground_index"));
        if (jQuery(g).attr("width")) {
            this.page_width = parseFloat(jQuery(g).attr("width"));
            this.page_height = parseFloat(jQuery(g).attr("height"))
        } else {
            if (this.manager.fsp && this.manager.fsp.get_sizes_from_id) {
                d = this.manager.fsp.get_sizes_from_id(jQuery(this.xml).find("creation:first").attr("format_id"));
                if (d) {
                    this.page_width = d.width;
                    this.page_height = d.height
                } else {
                    return
                }
            }
        }
        e = this;
        this.current_page = this.creation.pages[this.count++];
        this.photocount = 0;
        b = this.current_page.objects;
        f = this.current_page._kw106();
        this.current_page.objects = [];
        c = jQuery(g).attr("color") | 0;
        this.current_page.background = new _kw57();
        this.current_page.background.set("rgb(" + ((c >> 16) & 255) + "," + ((c >> 8) & 255) + "," + (c & 255) + ")");
        jQuery(g).children().each(function () {
            return e._kw142(this)
        });
        jQuery(g).find("foreground").each(function () {
            return e._kw145(this)
        });
        jQuery(g).find("background").each(function () {
            return e._kw144(this)
        });
        if (this.photocount > 0 && f.length > 0) {
            this.current_page._kw80(f, false, true);
            this.current_page.animate(b)
        }
        this.current_page.screenview_up_to_date = false;
        this.current_page.updated();
        return this.current_page._kw153()
    };
    a.prototype._kw142 = function (b) {
        switch (jQuery(b).prop("tagName")) {
            case "photo":
                return this._kw140(b);
            case "text":
                return this._kw141(b);
            case "bitmap":
                return this._kw143(b);
            case "calendar":
                return this.parseCalendar(b)
        }
    };
    a.prototype._kw140 = function (b) {
        var i, g, r, c, j, d, s, q, k, o, l, e, m;
        this.photocount++;
        o = parseFloat(jQuery(b).attr("x"));
        l = parseFloat(jQuery(b).attr("y"));
        q = parseFloat(jQuery(b).attr("w"));
        g = parseFloat(jQuery(b).attr("h"));
        s = parseFloat(jQuery(b).attr("rotation"));
        o = o - this.page_width / 2;
        l = l - this.page_height / 2;
        k = this.current_page.width / this.page_width;
        r = this.current_page.height / this.page_height;
        d = new _kw53(null);
        d.x = o * k;
        d.y = l * r;
        d.width = q * k;
        d.height = g * r;
        d.rotation = (3600 - s) % 360;
        c = jQuery(b).attr("frame");
        if (c) {
            j = this.manager._kw182();
            for (e = 0, m = j.length; e < m; e++) {
                i = j[e];
                if (i.id === c) {
                    d.frame = i
                }
            }
        }
        return this.current_page.add(d)
    };
    a.prototype._kw141 = function (o) {
        var d, v, s, g, u, B, p, z, q, r, m, C, e, l, b, k, j, c, A, i;
        window.texample = o;
        k = parseFloat(jQuery(o).attr("x"));
        j = parseFloat(jQuery(o).attr("y"));
        l = parseFloat(jQuery(o).attr("w"));
        u = parseFloat(jQuery(o).attr("h"));
        q = parseFloat(jQuery(o).attr("rotation"));
        s = jQuery(o).attr("font_name");
        g = parseFloat(jQuery(o).attr("font_size"));
        e = parseInt(jQuery(o).attr("align"));
        d = parseInt(jQuery(o).attr("color"));
        if (i = s.replace(/\s/g, "+"), __indexOf.call(KWP_CONF.googleFontList, i) < 0) {
            s = "Arial"
        }
        switch (e) {
            case 0:
                e = "left";
                break;
            case 1:
                e = "right";
                break;
            case 2:
                e = "center";
                break;
            case 3:
                e = "justify"
        }
        k = k - this.page_width / 2;
        j = j - this.page_height / 2;
        b = this.current_page.width / this.page_width;
        B = this.current_page.height / this.page_height;
        r = Math.sqrt(b * B);
        C = "";
        C = jQuery(o).text();
        m = new _kw59();
        m.text = C;
        m.x = k * b;
        m.y = j * B;
        m.width = l * b;
        m.height = u * B;
        m.rotation = (3600 - q) % 360;
        m.font_name = s;
        m.font_size = (g * r) | 0;
        m.align = e;
        m.color = "rgb(" + ((d >> 16) & 255) + "," + ((d >> 8) & 255) + "," + (d & 255) + ")";
        p = jQuery(o).attr("frame");
        if (p) {
            z = this.manager._kw183();
            for (c = 0, A = z.length; c < A; c++) {
                v = z[c];
                if (v.id === p) {
                    m.frame = v
                }
            }
        }
        if (m.text.match(/%MONTH%/)) {
            m.sticky = true;
            m.editable = false
        }
        this.current_page.add(m);
        _kw196._kw148(m, true);
        m.fixedonce = false;
        return true
    };
    a.prototype._kw143 = function (q) {
        var j, f, p, d, g, r, b, o, i, m, k, e, l;
        d = jQuery(q).attr("id");
        m = parseFloat(jQuery(q).attr("x"));
        k = parseFloat(jQuery(q).attr("y"));
        o = parseFloat(jQuery(q).attr("w"));
        f = parseFloat(jQuery(q).attr("h"));
        r = parseFloat(jQuery(q).attr("rotation"));
        m = m - this.page_width / 2;
        k = k - this.page_height / 2;
        i = this.current_page.width / this.page_width;
        p = this.current_page.height / this.page_height;
        b = Math.sqrt(i * p);
        g = this.manager._kw184();
        for (e = 0, l = g.length; e < l; e++) {
            j = g[e];
            if (j.id === d) {
                j = new _kw56(j);
                j.x = m * i;
                j.y = k * p;
                j.width = o * b;
                j.height = f * b;
                j.rotation = (3600 - r) % 360;
                this.current_page.add(j);
                return true
            }
        }
    };
    a.prototype.parseCalendar = function (d) {
        var g, e, l, m, b, k, f, j, i;
        j = parseFloat(jQuery(d).attr("x"));
        i = parseFloat(jQuery(d).attr("y"));
        k = parseFloat(jQuery(d).attr("w"));
        e = parseFloat(jQuery(d).attr("h"));
        m = parseFloat(jQuery(d).attr("rotation"));
        j = j - this.page_width / 2;
        i = i - this.page_height / 2;
        f = this.current_page.width / this.page_width;
        l = this.current_page.height / this.page_height;
        b = Math.sqrt(f * l);
        g = new PageCalendar();
        g.x = j * f;
        g.y = i * l;
        g.width = k * b;
        g.height = e * b;
        g.rotation = (3600 - m) % 360;
        g.sticky = true;
        g.editable = false;
        if (g.width < g.height * 1.5) {
            g.style = new CalendarStyle();
            g.style.header.shorten = 2
        }
        return this.current_page.add(g)
    };
    a.prototype._kw144 = function (g) {
        var c, f, j, i, h, e, d;
        j = jQuery(g).attr("id");
        i = this.manager._kw185();
        d = [];
        for (h = 0, e = i.length; h < e; h++) {
            c = i[h];
            if (c.id === j) {
                f = new _kw57();
                f.set(c);
                f._kw186(1 - parseFloat(jQuery(g).attr("offset_x")), 1 - parseFloat(jQuery(g).attr("offset_y")));
                d.push(this.current_page.background = f)
            } else {
                d.push(void 0)
            }
        }
        return d
    };
    a.prototype._kw145 = function (k) {
        var i, b, c, j, e, d, h, l, g;
        c = jQuery(k).attr("id");
        j = this.manager._kw187();
        g = [];
        for (h = 0, l = j.length; h < l; h++) {
            i = j[h];
            if (i.id === c) {
                b = new _kw152(i);
                this.current_page.add(b);
                e = 1 - parseFloat(jQuery(k).attr("offset_x"));
                d = 1 - parseFloat(jQuery(k).attr("offset_y"));
                g.push(b._kw186(e, d))
            } else {
                g.push(void 0)
            }
        }
        return g
    };
    return a
})();
this._kw165 = (function () {
    function a(b) {
        this.creation = b
    }
    a.prototype._kw109 = function (k, q) {
        var g, m, s, c, u, t, v, r, w, l, e, d, b, o, h, f;
        this.xml = k;
        this.manager = q;
        q._kw174();
        this.creation._kw181();
        v = [];
        c = function () {
            var i;
            i = new Layout(this);
            if (i.page && i.page.objects.length > 0 && !i.hasforeground) {
                return v.push(i)
            }
        };
        jQuery(this.xml).find("page").each(c);
        if (this.creation.product.hasCover()) {
            this.creation.pages[0]._kw188(v[0]);
            l = 1
        } else {
            l = 0
        }
        s = 1;
        w = [];
        for (u = e = 1, o = v.length - 1; 1 <= o ? e <= o : e >= o; u = 1 <= o ? ++e : --e) {
            for (t = d = 1, h = v.length - 1; 1 <= h ? d <= h : d >= h; t = 1 <= h ? ++d : --d) {
                if (u !== t) {
                    w.push({
                        photocount: v[u].page._kw50() + v[t].page._kw50(),
                        textcount: v[u].page.getTextCount() + v[t].page.getTextCount(),
                        pair: [v[u], v[t]]
                    })
                }
            }
        }
        this.current = 1;
        this.currentpair = 0;
        for (u = b = l, f = this.creation.pages.length - 1; l <= f ? b <= f : b >= f; u = l <= f ? ++b : --b) {
            r = this.creation.pages[u];
            if (r.view && r.view.properties.hide_left) {
                m = r.getDefinedPhotoCount();
                g = this.findBestLayout(v, m, r.getDefinedTextCount());
                r._kw190(g, this.manager)
            } else {
                if (r.view && r.view.properties.hide_right) {
                    m = r.getDefinedPhotoCount();
                    g = this.findBestLayout(v, m, r.getDefinedTextCount());
                    r._kw189(g, this.manager)
                } else {
                    m = r.getDefinedPhotoCount();
                    g = this.findBestPair(w, m, r.getDefinedTextCount());
                    r.applyLayoutPair(g, this.manager)
                }
            }
        }
    };
    a.prototype.findBestLayout = function (o, i, b) {
        var e, m, l, j, f, d, g, h;
        e = o[this.current];
        m = e.page._kw50();
        l = e.page.getTextCount();
        for (f = g = 0, h = o.length; 0 <= h ? g <= h : g >= h; f = 0 <= h ? ++g : --g) {
            this.current++;
            if (this.current >= o.length) {
                this.current = 1
            }
            j = o[this.current].page._kw50();
            d = o[this.current].page.getTextCount();
            if (j <= i && Math.abs(j - i) < Math.abs(j - m)) {
                m = j;
                l = d;
                e = o[this.current]
            } else {
                if (j === m && Math.abs(d - b) < Math.abs(d - l)) {
                    m = j;
                    l = d;
                    e = o[this.current]
                }
            } if ((m === i || i === 0) && (l === b || b === 0)) {
                break
            }
        }
        return e
    };
    a.prototype.findBestPair = function (b, j, d) {
        var f, o, m, l, g, e, h, i;
        f = b[this.currentpair].pair;
        o = b[this.currentpair].photocount;
        m = b[this.currentpair].textcount;
        for (g = h = 0, i = b.length; 0 <= i ? h <= i : h >= i; g = 0 <= i ? ++h : --h) {
            this.currentpair++;
            if (this.currentpair >= b.length) {
                this.currentpair = 1
            }
            l = b[this.currentpair].photocount;
            e = b[this.currentpair].textcount;
            if (l <= j && Math.abs(l - j) < Math.abs(l - o)) {
                o = l;
                m = e;
                f = b[this.currentpair].pair
            } else {
                if (l === o && Math.abs(e - d) < Math.abs(e - m)) {
                    o = l;
                    m = e;
                    f = b[this.currentpair].pair
                }
            } if ((o === j || j === 0) && (m === d || d === 0)) {
                break
            }
        }
        return f
    };
    return a
})();
this._kw191 = (function () {
    function a(b, c) {
        this.xml = b;
        this.type = c;
        this.cover_layouts = [];
        this.page_layouts = [];
        this.extract()
    }
    a.prototype.extract = function () {
        var c, r, i, q, l, m, s, j, f, d, b, t, v, u, k, h, g, e;
        manager._kw174();
        if (this.type === "json") {
            this.count = 0;
            if (!this.xml.pages) {
                return
            }
            k = this.xml.pages;
            e = [];
            for (f = 0, t = k.length; f < t; f++) {
                m = k[f];
                if (this.count++ === 0) {
                    r = new Layout(this.createPage(m), "json");
                    if (creation.product.properties.right_to_left) {
                        r.page.flip()
                    }
                    e.push(this.cover_layouts.push(r))
                } else {
                    i = this.createPage(m);
                    l = [];
                    h = i.objects;
                    for (d = 0, v = h.length; d < v; d++) {
                        q = h[d];
                        if (q.x <= 0) {
                            l.push(q);
                            q.x += 0.25 * i.width
                        }
                    }
                    i.objects = l;
                    i.width *= 0.5;
                    if (l.length > 0) {
                        r = new Layout(i, "json");
                        this.page_layouts.push(r)
                    }
                    s = this.createPage(m);
                    l = [];
                    g = s.objects;
                    for (b = 0, u = g.length; b < u; b++) {
                        q = g[b];
                        if (q.x > 0) {
                            l.push(q);
                            q.x -= 0.25 * s.width
                        }
                    }
                    s.objects = l;
                    s.width *= 0.5;
                    if (l.length > 0) {
                        r = new Layout(s, "json");
                        e.push(this.page_layouts.push(r))
                    } else {
                        e.push(void 0)
                    }
                }
            }
            return e
        } else {
            j = this;
            this.count = 0;
            c = function () {
                r = new Layout(this);
                if (r.page && r.page.objects.length > 0 && !r.hasforeground) {
                    if (j.count === 0) {
                        j.cover_layouts.push(r)
                    } else {
                        j.page_layouts.push(r)
                    }
                }
                return j.count++
            };
            return jQuery(this.xml).find("page").each(c)
        }
    };
    a.prototype.createPage = function (e) {
        var b, d, c;
        c = new Unit("page");
        c.width = e.width;
        c.height = e.height;
        d = new Product();
        d.addUnit(c);
        b = new Creation(d);
        b.pages[0].load(e, manager, true);
        return b.pages[0]
    };
    return a
})();
var __indexOf = [].indexOf || function (c) {
    for (var b = 0, a = this.length; b < a; b++) {
        if (b in this && this[b] === c) {
            return b
        }
    }
    return -1
};
this.Layout = (function () {
    function a(c, b) {
        this.type = b != null ? b : "xml";
        if (this.type === "json") {
            this.page = c
        } else {
            this.parse(c)
        }
    }
    a.prototype.addUpdateListener = function (b) {
        return this.page.addUpdateListener(b)
    };
    a.prototype._kw172 = function (e) {
        var c, d, g, i, f, b;
        i = this.page._kw172(e);
        c = KWC.createCanvas();
        c.width = e;
        c.height = e;
        d = c.getContext("2d");
        f = (e - 8) / Math.max(i.width, i.height);
        b = Math.round(f * i.width);
        g = Math.round(f * i.height);
        d.shadowColor = "#000";
        d.shadowBlur = 4;
        d.shadowOpacity = 1;
        d.fillStyle = "#FFF";
        d.fillRect(e / 2 - b / 2, e / 2 - g / 2, b, g);
        d.drawImage(i, e / 2 - b / 2, e / 2 - g / 2, b, g);
        return c
    };
    a.prototype.parse = function (g) {
        var c, b, h, f, e, d;
        if (jQuery(g).attr("width")) {
            this.page_width = parseFloat(jQuery(g).attr("width"));
            this.page_height = parseFloat(jQuery(g).attr("height"))
        } else {
            return
        }
        d = new Unit("page");
        d.width = this.page_width;
        d.height = this.page_height;
        f = new Product();
        f.addUnit(d);
        b = new Creation(f);
        this.page = b.pages[0];
        h = parseInt(jQuery(g).attr("foreground_index"));
        c = jQuery(g).attr("color") | 0;
        this.page.background = new _kw57();
        this.page.background.set("rgb(" + ((c >> 16) & 255) + "," + ((c >> 8) & 255) + "," + (c & 255) + ")");
        e = this;
        jQuery(g).children().each(function () {
            return e._kw142(this)
        });
        jQuery(g).find("foreground").each(function () {
            return e._kw145(this)
        });
        return jQuery(g).find("background").each(function () {
            return e._kw144(this)
        })
    };
    a.prototype._kw142 = function (b) {
        switch (jQuery(b).prop("tagName")) {
            case "photo":
                return this._kw140(b);
            case "text":
                return this._kw141(b);
            case "clipart":
                return this._kw143(b)
        }
    };
    a.prototype._kw140 = function (b) {
        var i, g, r, c, j, d, s, q, k, o, l, e, m;
        o = parseFloat(jQuery(b).attr("x"));
        l = parseFloat(jQuery(b).attr("y"));
        q = parseFloat(jQuery(b).attr("w"));
        g = parseFloat(jQuery(b).attr("h"));
        s = parseFloat(jQuery(b).attr("rotation"));
        o = o - this.page_width / 2;
        l = l - this.page_height / 2;
        k = this.page.width / this.page_width;
        r = this.page.height / this.page_height;
        d = new _kw53(null);
        d.x = o * k;
        d.y = l * r;
        d.width = q * k;
        d.height = g * r;
        d.rotation = (3600 - s) % 360;
        c = jQuery(b).attr("frame");
        if (c) {
            j = manager._kw182();
            for (e = 0, m = j.length; e < m; e++) {
                i = j[e];
                if (i.id === c) {
                    d.frame = i
                }
            }
        }
        return this.page.add(d)
    };
    a.prototype._kw141 = function (o) {
        var d, v, s, g, u, B, p, z, q, r, m, e, l, b, k, j, c, A, i;
        k = parseFloat(jQuery(o).attr("x"));
        j = parseFloat(jQuery(o).attr("y"));
        l = parseFloat(jQuery(o).attr("w"));
        u = parseFloat(jQuery(o).attr("h"));
        q = parseFloat(jQuery(o).attr("rotation"));
        s = jQuery(o).attr("font_name");
        g = parseFloat(jQuery(o).attr("font_size"));
        e = parseInt(jQuery(o).attr("align"));
        d = parseInt(jQuery(o).attr("color"));
        if (i = s.replace(/\s/g, "+"), __indexOf.call(KWP_CONF.googleFontList, i) < 0) {
            s = "Arial"
        }
        switch (e) {
            case 0:
                e = "left";
                break;
            case 1:
                e = "right";
                break;
            case 2:
                e = "center";
                break;
            case 3:
                e = "justify"
        }
        k = k - this.page_width / 2;
        j = j - this.page_height / 2;
        b = this.page.width / this.page_width;
        B = this.page.height / this.page_height;
        r = Math.sqrt(b * B);
        m = new _kw59("");
        m.x = k * b;
        m.y = j * B;
        m.width = l * b;
        m.height = u * B;
        m.rotation = (3600 - q) % 360;
        m.font_name = s;
        m.font_size = (g * r) | 0;
        m.align = e;
        m.color = "rgb(" + ((d >> 16) & 255) + "," + ((d >> 8) & 255) + "," + (d & 255) + ")";
        p = jQuery(o).attr("frame");
        if (p) {
            z = manager._kw183();
            for (c = 0, A = z.length; c < A; c++) {
                v = z[c];
                if (v.id === p) {
                    m.frame = v
                }
            }
        }
        return this.page.add(m)
    };
    a.prototype._kw143 = function (q) {
        var j, f, p, g, r, b, o, i, m, k, e, l, d;
        m = parseFloat(jQuery(q).attr("x"));
        k = parseFloat(jQuery(q).attr("y"));
        o = parseFloat(jQuery(q).attr("w"));
        f = parseFloat(jQuery(q).attr("h"));
        r = parseFloat(jQuery(q).attr("rotation"));
        m = m - this.page_width / 2;
        k = k - this.page_height / 2;
        i = this.page.width / this.page_width;
        p = this.page.height / this.page_height;
        b = Math.sqrt(i * p);
        g = manager._kw184();
        d = [];
        for (e = 0, l = g.length; e < l; e++) {
            j = g[e];
            if (j.id === id) {
                j = new _kw56(j);
                j.x = m * i;
                j.y = k * p;
                j.width = o * b;
                j.height = f * b;
                j.rotation = (3600 - r) % 360;
                d.push(this.page.add(j))
            } else {
                d.push(void 0)
            }
        }
        return d
    };
    a.prototype._kw144 = function (g) {
        var c, f, j, i, h, e, d;
        j = jQuery(g).attr("id");
        i = manager._kw185();
        d = [];
        for (h = 0, e = i.length; h < e; h++) {
            c = i[h];
            if (c.id === j) {
                f = new _kw57();
                f.set(c);
                f._kw186(1 - parseFloat(jQuery(g).attr("offset_x")), 1 - parseFloat(jQuery(g).attr("offset_y")));
                d.push(this.page.background = f)
            } else {
                d.push(void 0)
            }
        }
        return d
    };
    a.prototype._kw145 = function (b) {
        this.hasforeground = true
    };
    return a
})();
var _kw146;
_kw146 = (function () {
    function a() { }
    a._kw192 = function (q, l, h, m, o, A, k, z, g, w, e, t, b, j) {
        var C, B, v, s, y, r, p, x, u, f, d, c;
        y = Math.max(Math.abs(z - A), Math.abs(w - t), Math.abs(g - k), Math.abs(e - b));
        c = [];
        for (v = 0; 0 <= y ? v <= y : v >= y; 0 <= y ? v++ : v--) {
            C = v / y;
            x = A + C * (z - A);
            f = k + C * (g - k);
            u = t + C * (w - t);
            d = b + C * (e - b);
            j.save();
            j.translate(x, f);
            r = d - f;
            p = u - x;
            s = Math.sqrt(r * r + p * p);
            r = r / s;
            p = p / s;
            B = Math.acos(r);
            if (p < 0) {
                B = 2 * Math.PI - B
            }
            j.rotate(-B);
            j.beginPath();
            j.rect(0, 0, 1.5, s);
            j.clip();
            j.drawImage(q, -C * q.width, 0, q.width, s);
            c.push(j.restore())
        }
        return c
    };
    a.projectSimpleRect = function (p, j, e, k, o, v, g, t, d, m, l, f) {
        var w, s, q, r, u, c, b;
        r = Math.abs(t - v);
        b = [];
        for (q = 0; 0 <= r ? q <= r : q >= r; 0 <= r ? q++ : q--) {
            w = q / r;
            u = v + w * (t - v);
            c = g + w * (d - g);
            s = m + w * (l - m);
            f.save();
            f.translate(u, c);
            f.beginPath();
            f.rect(0, -1, 1, s + 2);
            f.clip();
            f.drawImage(p, -p.width * j - w * p.width * k, 0, p.width, s);
            b.push(f.restore())
        }
        return b
    };
    return a
})();
this.Canvas3DPreview = (function () {
    function a(c, b) {
        this.width = c;
        this.height = b;
        this.camera = new THREE.PerspectiveCamera(45, this.width / this.height, 1, 1000);
        this.renderer = new THREE.WebGLRenderer({
            antialias: true,
            antialiasing: true,
            alpha: true
        });
        this.renderer.setSize(this.width, this.height);
        this.renderer.domElement.onmousemove = (function (d) {
            return function (f) {
                return d.mousemove(f)
            }
        })(this);
        jQuery(this.renderer.domElement).hammer().on("touch", (function (d) {
            return function (e) {
                return d.touch(e)
            }
        })(this));
        jQuery(this.renderer.domElement).hammer().on("drag", (function (d) {
            return function (e) {
                return d.touchdrag(e)
            }
        })(this));
        jQuery(this.renderer.domElement).hammer().on("release", (function (d) {
            return function (e) {
                return d.touchrelease(e)
            }
        })(this));
        jQuery(this.renderer.domElement).bind("mousewheel", (function (d) {
            return function (e, f) {
                return d.mousewheel(e, f)
            }
        })(this));
        this.dragging = false;
        this.fov = 45;
        this.fovt = 45;
        this.fovs = 0
    }
    a.prototype.setSize = function (c, b) {
        this.width = c;
        this.height = b;
        this.camera = new THREE.PerspectiveCamera(45, this.width / this.height, 1, 1000);
        return this.renderer.setSize(this.width, this.height)
    };
    a.prototype.createPlane = function (d, r, l, j, m, c) {
        var o, e, q, i, h, p, b, k, g;
        this.geometry = new THREE.PlaneGeometry(1, 1);
        e = [];
        k = this.geometry.faces;
        for (i = 0, p = k.length; i < p; i++) {
            o = k[i];
            e.push([new THREE.Vector2(l + (this.geometry.vertices[o.a].x + 0.5) * m, j + (this.geometry.vertices[o.a].y + 0.5) * c), new THREE.Vector2(l + (this.geometry.vertices[o.b].x + 0.5) * m, j + (this.geometry.vertices[o.b].y + 0.5) * c), new THREE.Vector2(l + (this.geometry.vertices[o.c].x + 0.5) * m, j + (this.geometry.vertices[o.c].y + 0.5) * c)])
        }
        this.geometry.faceVertexUvs[0] = e;
        g = this.geometry.vertices;
        for (h = 0, b = g.length; h < b; h++) {
            q = g[h];
            q.x *= d;
            q.y *= r
        }
        return this.geometry
    };
    a.prototype.show = function (e) {
        var s, b, k, g, p, v, q, t, w, u, l, o, d, x, r, f, c, m, h;
        this.creation = e;
        this.scene = new THREE.Scene();
        q = this.creation.pages[0]._kw172(1024);
        o = new THREE.Texture(q);
        o.needsUpdate = true;
        w = {
            color: 16777215,
            shininess: 10,
            map: o,
            specular: 8419432
        };
        if (this.creation.pages[0].spec.preview3D.grain) {
            k = document.createElement("canvas");
            k.width = q.width / 2;
            k.height = q.height / 2;
            g = k.getContext("2d");
            g.fillStyle = "#999";
            g.fillRect(0, 0, k.width, k.height);
            g.fillStyle = "#888";
            for (v = f = 0, m = k.width - 1; f <= m; v = f += 2) {
                for (t = c = 0, h = k.height - 1; c <= h; t = c += 2) {
                    g.fillRect(v, t, 1, 1)
                }
            }
            b = new THREE.Texture(k);
            b.needsUpdate = true;
            b.wrapS = b.wrapT = THREE.RepeatWrapping;
            w.bumpMap = b;
            w.bumpScale = 0.005
        }
        this.material = new THREE.MeshPhongMaterial(w);
        l = this.creation.pages[0].spec;
        s = l.border || 0;
        x = this.creation.pages[0].width;
        d = this.creation.pages[0].height;
        r = this.creation.pages[0].width - s * 2;
        p = this.creation.pages[0].height - s * 2;
        u = Math.max(r, p);
        this.group = new THREE.Group();
        this.geometry = this.createPlane(r / u, p / u, s / x, s / d, r / x, p / d);
        this.mesh = new THREE.Mesh(this.geometry, this.material);
        this.group.add(this.mesh);
        if (s > 0) {
            this.border_material = this.material
        } else {
            this.border_material = new THREE.MeshPhongMaterial({
                color: 2105376,
                shininess: 10
            });
            s = 5
        }
        this.geometry = this.createPlane(r / u, s / u, s / x, 0, r / x, s / d);
        this.mesh = new THREE.Mesh(this.geometry, this.border_material);
        this.mesh.rotation.x = Math.PI * 0.5;
        this.mesh.position.y -= p / u * 0.5;
        this.mesh.position.z -= s / u * 0.5;
        this.group.add(this.mesh);
        this.geometry = this.createPlane(r / u, s / u, s / x, (s + p) / d, r / x, s / d);
        this.mesh = new THREE.Mesh(this.geometry, this.border_material);
        this.mesh.rotation.x = -Math.PI * 0.5;
        this.mesh.position.y += p / u * 0.5;
        this.mesh.position.z -= s / u * 0.5;
        this.group.add(this.mesh);
        this.geometry = this.createPlane(s / u, p / u, (s + r) / x, s / d, s / x, p / d);
        this.mesh = new THREE.Mesh(this.geometry, this.border_material);
        this.mesh.rotation.y = Math.PI * 0.5;
        this.mesh.position.x += r / u * 0.5;
        this.mesh.position.z -= s / u * 0.5;
        this.group.add(this.mesh);
        this.geometry = this.createPlane(s / u, p / u, 0, s / d, s / x, p / d);
        this.mesh = new THREE.Mesh(this.geometry, this.border_material);
        this.mesh.rotation.y = -Math.PI * 0.5;
        this.mesh.position.x -= r / u * 0.5;
        this.mesh.position.z -= s / u * 0.5;
        this.group.add(this.mesh);
        this.scene.autoUpdate = true;
        this.scene.add(new THREE.AmbientLight(2105376));
        this.directionalLight = new THREE.DirectionalLight(16777215, 0.8);
        this.directionalLight.position.set(1, 1, 0.8);
        this.scene.add(this.directionalLight);
        this.directionalLight = new THREE.DirectionalLight(16777215, 0.8);
        this.directionalLight.position.set(-1, -1, 0.8);
        this.scene.add(this.directionalLight);
        this.group.position.z = -2;
        this.scene.add(this.group);
        this.rx = 0;
        this.ry = 0;
        this.ty = 0.6;
        this.tx = 0.3;
        this.sy = 0;
        this.sx = 0;
        this.f = 0.05;
        this.k = 0.005;
        this.shown = true;
        return this.update()
    };
    a.prototype.hide = function () {
        return this.shown = false
    };
    a.prototype.getCanvas = function () {
        return this.renderer.domElement
    };
    a.prototype.touch = function (c) {
        var b, d;
        c.gesture.preventDefault();
        c = c.gesture.touches[0];
        b = c.pageX - jQuery(this.renderer.domElement).offset().left;
        d = c.pageY - jQuery(this.renderer.domElement).offset().top;
        this.drag_start_x = b;
        this.drag_start_y = d;
        this.dragging = true;
        this.ty = 0;
        this.tx = 0;
        this.f = 0.1;
        return this.k = 0.05
    };
    a.prototype.touchdrag = function (c) {
        var b, d;
        c.gesture.preventDefault();
        c = c.gesture.touches[0];
        b = c.pageX - jQuery(this.renderer.domElement).offset().left - this.drag_start_x;
        d = c.pageY - jQuery(this.renderer.domElement).offset().top - this.drag_start_y;
        this.ty = Math.max(-Math.PI * 0.5, Math.min(Math.PI * 0.5, -b / this.width * 2));
        this.tx = Math.max(-Math.PI * 0.5, Math.min(Math.PI * 0.5, -d / this.height * 2));
        this.f = 0.1;
        return this.k = 0.05
    };
    a.prototype.touchrelease = function (b) {
        this.dragging = false;
        this.ty = 0.6;
        this.tx = 0.3;
        this.f = 0.05;
        return this.k = 0.005
    };
    a.prototype.mousewheel = function (b, c) {
        if (c < 0) {
            return this.fovt = Math.min(90, this.fovt * 1.02)
        } else {
            return this.fovt = Math.max(20, this.fovt * 0.98)
        }
    };
    a.prototype.mousemove = function (c) {
        var b, d;
        if (this.dragging) {
            return
        }
        b = c.pageX - jQuery(this.renderer.domElement).offset().left;
        d = c.pageY - jQuery(this.renderer.domElement).offset().top;
        this.ty = -(b - this.width / 2) / this.width * 2;
        this.tx = -(d - this.height / 2) / this.height * 2;
        this.f = 0.1;
        return this.k = 0.05
    };
    a.prototype.update = function () {
        if (this.shown) {
            requestAnimationFrame((function (b) {
                return function () {
                    return b.update()
                }
            })(this))
        }
        this.fovs += (this.fovt - this.fov) * 0.02;
        this.fovs *= 0.8;
        this.fov += this.fovs;
        this.camera.fov = this.fov;
        this.camera.updateProjectionMatrix();
        this.sx += this.k * (this.tx - this.rx);
        this.sy += this.k * (this.ty - this.ry);
        this.sx *= 1 - this.f;
        this.sy *= 1 - this.f;
        this.rx += this.sx * 0.1;
        this.ry += this.sy * 0.1;
        this.group.rotation.x = this.rx;
        this.group.rotation.y = this.ry;
        return this.renderer.render(this.scene, this.camera)
    };
    return a
})();
var KWC;
KWC = require("../../wrapper.js", KWC);
this.View = (function () {
    function a(c, b) {
        this.page = c;
        this.name = b;
        if (this.name) {
            this.name = KWC.translate(this.name, true)
        }
        this.selected = false;
        this.can_move = false;
        this.properties = {}
    }
    a.prototype.getWidth = function () {
        return this.page.width
    };
    a.prototype.getHeight = function () {
        return this.page.height
    };
    a.prototype.draw = function () { };
    a.prototype._kw193 = function (d, f) {
        var h, e, b, g;
        if (f == null) {
            f = this.page
        }
        g = KWP_CONF.memory_saving_mode ? 1 : 1.4;
        b = f._kw172(Math.max(d.width, d.height) * g);
        if (b) {
            e = d.getContext("2d");
            h = KWC.createCanvas();
            h.width = 2 * d.width;
            h.height = 2 * d.height;
            h.getContext("2d").drawImage(b, 0, 0, h.width, h.height);
            e.drawImage(h, 0, 0, d.width, d.height)
        }
        return this.draw(d, d.height / f.height)
    };
    a.prototype._kw172 = function (c, e) {
        var b, d;
        if (e == null) {
            e = this.page
        }
        b = KWC.createCanvas();
        if (this.crop) {
            d = Math.min(c / (this.page.width * this.crop.width), c / (this.page.height * this.crop.height));
            b.width = d * this.page.width * this.crop.width;
            b.height = d * this.page.height * this.crop.height
        } else {
            d = Math.min(c / this.page.width, c / this.page.height);
            b.width = d * this.page.width;
            b.height = d * this.page.height
        }
        this._kw193(b, e);
        return b
    };
    return a
})();
module.exports = this.View;
var _kw33, View, __hasProp = {}.hasOwnProperty,
    __extends = function (d, b) {
        for (var a in b) {
            if (__hasProp.call(b, a)) {
                d[a] = b[a]
            }
        }

        function c() {
            this.constructor = d
        }
        c.prototype = b.prototype;
        d.prototype = new c();
        d.__super__ = b.prototype;
        return d
    };
_kw33 = require("../settings.coffee", _kw33);
View = require("../view/view.coffee", View);
this._kw159 = (function (b) {
    __extends(a, b);

    function a(d, c) {
        a.__super__.constructor.call(this, d, c);
        this.can_move = true;
        this.type = "book";
        this.properties.double_background = true;
        this.properties.hide_left = false;
        this.properties.hide_right = false;
        if ((_kw33.image_bookwire == null) && (typeof KWP_CONF !== "undefined" && KWP_CONF !== null)) {
            _kw33.image_bookwire = _kw33.createImage(KWP_CONF.static_serv + "img/creator/bookwire.png")
        }
        if ((_kw33.image_bookwireleft == null) && (typeof KWP_CONF !== "undefined" && KWP_CONF !== null)) {
            _kw33.image_bookwireleft = _kw33.createImage(KWP_CONF.static_serv + "img/creator/bookwireleft.png")
        }
    }
    a.prototype.draw = function (e, l) {
        var c, k, g, j, o, m, f, i;
        if (this.type === "card") {
            return this._kw194(e, l)
        }
        if (this.type === "card2") {
            return this._kw195(e, l)
        }
        c = e.getContext("2d");
        c.save();
        m = e.width;
        j = e.height;
        if (this.properties.hide_left) {
            c.fillStyle = "#DDD";
            c.fillRect(0, 0, m / 2, j)
        }
        if (this.properties.hide_right) {
            c.fillStyle = "#DDD";
            c.fillRect(m / 2, 0, m / 2, j)
        }
        if (!this.page.spec.shading || this.page.spec.shading === "shadows") {
            g = c.createLinearGradient(m * 0.5, j * 0.5, m * 0.5 - m * 0.075, j * 0.5);
            g.addColorStop(0, "rgba(0,0,0,.2)");
            g.addColorStop(0.95, "rgba(0,0,0,0)");
            c.fillStyle = g;
            c.fillRect(m * 0.5 - m * 0.075, 0, m * 0.075, j);
            g = c.createLinearGradient(m * 0.5, j * 0.5, m * 0.5 + m * 0.0375, j * 0.5);
            g.addColorStop(0, "rgba(0,0,0,.5)");
            g.addColorStop(1, "rgba(255,255,255,0)");
            c.fillStyle = g;
            c.fillRect(m * 0.5, 0, m * 0.0375, j)
        } else {
            c.fillStyle = "rgba(0,0,0,.1)";
            c.fillRect(m * 0.5 - 0.5, 0, 1, j)
        } if (this.page.creation.product.properties.wired) {
            if (_kw33.image_bookwire.complete) {
                c.save();
                c.translate(m / 2, j / 2);
                c.scale(l, l);
                for (k = f = 5, i = this.page.height / 2 - 5; f <= i; k = f += 10) {
                    o = 15 * _kw33.image_bookwire.height / _kw33.image_bookwire.width;
                    c.drawImage(_kw33.image_bookwire, -7.5, k - o * 0.5, 15, o);
                    c.drawImage(_kw33.image_bookwire, -7.5, -k - o * 0.5, 15, o)
                }
                c.restore()
            }
        }
        return c.restore()
    };
    a.prototype._kw194 = function (e, i) {
        var f, d, g, c;
        f = e.getContext("2d");
        f.save();
        c = e.width;
        g = e.height;
        d = f.createLinearGradient(c * 0.5, g * 0.5, 0, g * 0.5);
        d.addColorStop(0, "rgba(0,0,0,.1)");
        d.addColorStop(1, "rgba(0,0,0,0)");
        f.fillStyle = d;
        f.fillRect(0, 0, c * 0.5, g);
        d = f.createLinearGradient(c * 0.5, g * 0.5, c, g * 0.5);
        d.addColorStop(0, "rgba(255,255,255,.1)");
        d.addColorStop(1, "rgba(255,255,255,0)");
        f.fillStyle = d;
        f.fillRect(c * 0.5, 0, c * 0.5, g);
        return f.restore()
    };
    a.prototype._kw195 = function (e, i) {
        var f, d, g, c;
        f = e.getContext("2d");
        f.save();
        c = e.width;
        g = e.height;
        d = f.createLinearGradient(c * 0.5, g * 0.5, 0, g * 0.5);
        d.addColorStop(0, "rgba(255,255,255,.1)");
        d.addColorStop(1, "rgba(255,255,255,0)");
        f.fillStyle = d;
        f.fillRect(0, 0, c * 0.5, g);
        d = f.createLinearGradient(c * 0.5, g * 0.5, c, g * 0.5);
        d.addColorStop(0, "rgba(0,0,0,.1)");
        d.addColorStop(1, "rgba(0,0,0,0)");
        f.fillStyle = d;
        f.fillRect(c * 0.5, 0, c * 0.5, g);
        return f.restore()
    };
    return a
})(View);
module.exports = this._kw159;
var View, __hasProp = {}.hasOwnProperty,
    __extends = function (d, b) {
        for (var a in b) {
            if (__hasProp.call(b, a)) {
                d[a] = b[a]
            }
        }

        function c() {
            this.constructor = d
        }
        c.prototype = b.prototype;
        d.prototype = new c();
        d.__super__ = b.prototype;
        return d
    };
View = require("../view/view.coffee", View);
this._kw158 = (function (b) {
    __extends(a, b);

    function a(g, e, d, h, f, c) {
        a.__super__.constructor.call(this, g, e);
        this.crop = {
            x: d,
            y: h,
            width: f,
            height: c
        };
        this.double_background = false
    }
    a.prototype._kw193 = function (e) {
        var h, f, d, g;
        g = KWP_CONF.memory_saving_mode ? 1 : 1.4;
        d = this.page._kw172(Math.max(e.width / this.crop.width, e.height / this.crop.height) * g);
        if (d) {
            f = e.getContext("2d");
            h = KWC.createCanvas();
            h.width = 2 * e.width;
            h.height = 2 * e.height;
            h.getContext("2d").drawImage(d, -h.width / this.crop.width * this.crop.x, -h.height / this.crop.height * this.crop.y, h.width / this.crop.width, h.height / this.crop.height);
            f.drawImage(h, 0, 0, e.width, e.height)
        }
        return this.draw(e, 0)
    };
    return a
})(View);
module.exports = this._kw158;
var _kw158, KWC, __hasProp = {}.hasOwnProperty,
    __extends = function (d, b) {
        for (var a in b) {
            if (__hasProp.call(b, a)) {
                d[a] = b[a]
            }
        }

        function c() {
            this.constructor = d
        }
        c.prototype = b.prototype;
        d.prototype = new c();
        d.__super__ = b.prototype;
        return d
    };
KWC = require("../../wrapper.js", KWC);
_kw158 = require("../view/croppedview.coffee", _kw158);
this._kw157 = (function (b) {
    __extends(a, b);

    function a(c) {
        a.__super__.constructor.call(this, c, KWC.translate("Rear Cover"), 0, 0, 0.5, 1);
        this.properties.is_cover = true
    }
    a.prototype.draw = function (e, i) {
        var f, d, g, j, c;
        j = this.page.creation.product.spine_width * e.width / (this.page.width * this.crop.width);
        f = e.getContext("2d");
        f.save();
        c = e.width;
        g = e.height;
        d = f.createLinearGradient(c - 2 * j, 0, c, 0);
        d.addColorStop(1, "rgba(0,0,0,1)");
        d.addColorStop(0.77, "rgba(0,0,0,0.5)");
        d.addColorStop(0.73, "rgba(255,255,255,.5)");
        d.addColorStop(0.53, "rgba(255,255,255,0)");
        d.addColorStop(0.49, "rgba(0,0,0,.25)");
        d.addColorStop(0.25, "rgba(0,0,0,0)");
        f.fillStyle = d;
        f.fillRect(c - 2 * j, 0, 2 * j, g);
        return f.restore()
    };
    return a
})(_kw158);
module.exports = this._kw157;
var _kw158, KWC, __hasProp = {}.hasOwnProperty,
    __extends = function (d, b) {
        for (var a in b) {
            if (__hasProp.call(b, a)) {
                d[a] = b[a]
            }
        }

        function c() {
            this.constructor = d
        }
        c.prototype = b.prototype;
        d.prototype = new c();
        d.__super__ = b.prototype;
        return d
    };
KWC = require("../../wrapper.js", KWC);
_kw158 = require("../view/croppedview.coffee", _kw158);
this._kw155 = (function (b) {
    __extends(a, b);

    function a(c) {
        a.__super__.constructor.call(this, c, KWC.translate("Front Cover"), 0.5, 0, 0.5, 1);
        this.properties.is_cover = true
    }
    a.prototype.draw = function (e, l) {
        var c, k, g, j, p, o, m, f, i;
        o = this.page.creation.product.spine_width * e.width / (this.page.width * this.crop.width);
        c = e.getContext("2d");
        c.save();
        m = e.width;
        j = e.height;
        g = c.createLinearGradient(0, 0, 2 * o, 0);
        g.addColorStop(0, "rgba(0,0,0,1)");
        g.addColorStop(0.2, "rgba(0,0,0,0.5)");
        g.addColorStop(0.25, "rgba(255,255,255,.5)");
        g.addColorStop(0.27, "rgba(255,255,255,0)");
        g.addColorStop(0.28, "rgba(0,0,0,.25)");
        g.addColorStop(0.48, "rgba(0,0,0,.25)");
        g.addColorStop(0.52, "rgba(255,255,255,.25)");
        g.addColorStop(0.75, "rgba(255,255,255,0)");
        c.fillStyle = g;
        c.fillRect(0, 0, 2 * o, j);
        c.restore();
        if (this.page.creation.product.properties.wired && !this.page.creation.product.hasCover()) {
            if (_kw33.image_bookwireleft.complete) {
                c.save();
                c.translate(0, j / 2);
                c.scale(l, l);
                for (k = f = 5, i = this.page.height / 2 - 5; f <= i; k = f += 10) {
                    p = 15 * _kw33.image_bookwireleft.height / _kw33.image_bookwireleft.width;
                    c.drawImage(_kw33.image_bookwireleft, -7.5, k - p * 0.5, 15, p);
                    c.drawImage(_kw33.image_bookwireleft, -7.5, -k - p * 0.5, 15, p)
                }
                return c.restore()
            }
        }
    };
    return a
})(_kw158);
module.exports = this._kw155;
var KWC, View, __hasProp = {}.hasOwnProperty,
    __extends = function (d, b) {
        for (var a in b) {
            if (__hasProp.call(b, a)) {
                d[a] = b[a]
            }
        }

        function c() {
            this.constructor = d
        }
        c.prototype = b.prototype;
        d.prototype = new c();
        d.__super__ = b.prototype;
        return d
    };
KWC = require("../../wrapper.js", KWC);
View = require("../view/view.coffee", View);
this._kw156 = (function (b) {
    __extends(a, b);

    function a(c) {
        a.__super__.constructor.call(this, c, KWC.translate("Full Cover"));
        this.properties.is_cover = true
    }
    a.prototype.draw = function (e, i) {
        var f, d, g, j, c;
        j = this.page.creation.product.spine_width * e.width / this.page.width;
        f = e.getContext("2d");
        f.save();
        c = e.width;
        g = e.height;
        d = f.createLinearGradient(c * 0.5 - j, g * 0.5, c * 0.5 + j, g * 0.5);
        d.addColorStop(0, "rgba(0,0,0,0)");
        d.addColorStop(0.24, "rgba(0,0,0,.5)");
        d.addColorStop(0.25, "rgba(255,255,255,.5)");
        d.addColorStop(0.4, "rgba(255,255,255,0)");
        d.addColorStop(0.7, "rgba(255,255,255,0)");
        d.addColorStop(0.75, "rgba(255,255,255,0.25)");
        d.addColorStop(0.76, "rgba(0,0,0,0.5)");
        d.addColorStop(1, "rgba(0,0,0,0)");
        f.fillStyle = d;
        f.fillRect(c * 0.5 - j, 0, 2 * j, g);
        return f.restore()
    };
    return a
})(View);
module.exports = this._kw156;
var _kw33, View, __hasProp = {}.hasOwnProperty,
    __extends = function (d, b) {
        for (var a in b) {
            if (__hasProp.call(b, a)) {
                d[a] = b[a]
            }
        }

        function c() {
            this.constructor = d
        }
        c.prototype = b.prototype;
        d.prototype = new c();
        d.__super__ = b.prototype;
        return d
    };
_kw33 = require("../settings.coffee", _kw33);
View = require("../view/view.coffee", View);
this.GiftView = (function (b) {
    __extends(a, b);

    function a(d, c) {
        a.__super__.constructor.call(this, d, c);
        this.can_move = false;
        this.type = "gift"
    }
    a.prototype.draw = function (e, g) {
        var f, h, d, i, c, j;
        f = e.getContext("2d");
        f.save();
        i = this.page;
        if (!i.spec.preview) {
            return
        }
        d = Math.round(e.width / i.spec.preview.position.width / 2) * 2;
        h = Math.round(e.height / i.spec.preview.position.height / 2) * 2;
        c = d * (i.spec.preview.position.x + i.spec.preview.position.width / 2);
        j = h * (i.spec.preview.position.y + i.spec.preview.position.height / 2);
        if (i.spec.preview.mask) {
            if (!i.spec.preview.mask_image) {
                i.spec.preview.mask_image = KWC.createImage();
                i.spec.preview.mask_image.crossOrigin = "Anonymous";
                i.spec.preview.mask_image.onload = (function (k) {
                    return function () {
                        return k.page.updated()
                    }
                })(this);
                i.spec.preview.mask_image.src = i.spec.preview.mask.replace("http://", "//")
            }
            if (i.spec.preview.mask_image && i.spec.preview.mask_image.complete && i.spec.preview.mask_image.width > 0 && i.spec.preview.mask_image.height > 0) {
                f.save();
                f.globalCompositeOperation = "destination-in";
                f.drawImage(i.spec.preview.mask_image, e.width / 2 - c, e.height / 2 - j, d, h);
                return f.restore()
            }
        } else {
            if (!(i.spec.preview.position.radius && i.spec.preview.position.radius > 0)) {
                if (i.spec.preview.foreground_image && i.spec.preview.foreground_image.complete && i.spec.preview.foreground_image.width > 0 && i.spec.preview.foreground_image.height > 0) {
                    return f.drawImage(i.spec.preview.foreground_image, e.width / 2 - c, e.height / 2 - j, d, h)
                }
            }
        }
    };
    return a
})(View);
module.exports = this.GiftView;
var _kw33, View, __hasProp = {}.hasOwnProperty,
    __extends = function (d, b) {
        for (var a in b) {
            if (__hasProp.call(b, a)) {
                d[a] = b[a]
            }
        }

        function c() {
            this.constructor = d
        }
        c.prototype = b.prototype;
        d.prototype = new c();
        d.__super__ = b.prototype;
        return d
    };
_kw33 = require("../settings.coffee", _kw33);
View = require("../view/view.coffee", View);
this.CanvasView = (function (b) {
    __extends(a, b);

    function a(d, c) {
        a.__super__.constructor.call(this, d, c);
        this.can_move = true;
        this.type = "canvas"
    }
    a.prototype.draw = function (d, f) {
        var c, e, g;
        g = this.page;
        if (g.spec.border && g.spec.border > 0) {
            e = d.getContext("2d");
            e.save();
            c = g.spec.border / g.width * d.width;
            e.fillStyle = "rgba(0,0,0,.75)";
            e.clearRect(0, 0, c, c);
            e.clearRect(d.width - c, 0, c, c);
            e.clearRect(d.width - c, d.height - c, c, c);
            e.clearRect(0, d.height - c, c, c);
            e.fillStyle = "rgba(224,224,224,.2)";
            e.fillRect(0, c, c, d.height - 2 * c);
            e.fillRect(c, 0, d.width - 2 * c, c);
            e.fillStyle = "rgba(32,32,32,.2)";
            e.fillRect(d.width - c, c, c, d.height - 2 * c);
            e.fillRect(c, d.height - c, d.width - 2 * c, c);
            e.strokeStyle = "rgba(255,255,255,.25)";
            e.beginPath();
            e.rect(-1, c, d.width + 2, d.height - 2 * c);
            e.stroke();
            e.beginPath();
            e.rect(c, -1, d.width - 2 * c, d.height + 2);
            e.stroke();
            return e.restore()
        }
    };
    return a
})(View);
module.exports = this.CanvasView;
var KWC, View, __hasProp = {}.hasOwnProperty,
    __extends = function (d, b) {
        for (var a in b) {
            if (__hasProp.call(b, a)) {
                d[a] = b[a]
            }
        }

        function c() {
            this.constructor = d
        }
        c.prototype = b.prototype;
        d.prototype = new c();
        d.__super__ = b.prototype;
        return d
    };
KWC = require("../../wrapper.js", KWC);
View = require("../view/view.coffee", View);
this.CalendarView = (function (b) {
    __extends(a, b);

    function a(d, c) {
        a.__super__.constructor.call(this, d, c);
        this.can_move = false;
        this.type = "calendar";
        if ((_kw33.image_bookwireleft == null) && (typeof KWP_CONF !== "undefined" && KWP_CONF !== null)) {
            _kw33.image_bookwireleft = _kw33.createImage(KWP_CONF.static_serv + "img/creator/bookwireleft.png")
        }
    }
    a.prototype.draw = function (e, k) {
        var c, j, i, m, l, f, g;
        if (this.page.creation.product.properties.wired) {
            if (_kw33.image_bookwireleft.complete) {
                c = e.getContext("2d");
                c.save();
                l = e.width;
                i = e.height;
                k = l / this.page.spec.width;
                c.translate(e.width / 2, e.height / 2);
                c.rotate(Math.PI / 2);
                c.translate(-i / 2, 0);
                c.scale(k, k);
                for (j = f = 5, g = this.page.width / 2 - 5; f <= g; j = f += 10) {
                    m = 15 * _kw33.image_bookwireleft.height / _kw33.image_bookwireleft.width;
                    c.drawImage(_kw33.image_bookwireleft, -7.5, j - m * 0.5, 15, m);
                    c.drawImage(_kw33.image_bookwireleft, -7.5, -j - m * 0.5, 15, m)
                }
                return c.restore()
            }
        }
    };
    return a
})(View);
module.exports = this.CalendarView;
this._kw33 = {
    transition_time: 400,
    createImage: function (a) {
        var b;
        b = KWC.createImage();
        b.crossOrigin = "anonymous";
        b.src = a.replace("http://", "//");
        return b
    }
};
var KWC;
KWC = require("../wrapper.js", KWC);
this._kw34 = (function () {
    function a(b) {
        this.source = this.fixSource(b)
    }
    a.prototype.fixSource = function (d) {
        var b, c, e;
        c = (typeof navigator !== "undefined" && navigator !== null) && /(iPad|iPhone|iPod)/g.test(navigator.userAgent);
        if (false) {
            e = new MegaPixImage(d);
            b = KWC.createCanvas();
            b.width = d.width;
            b.height = d.height;
            e.render(b, {
                width: b.width,
                height: b.height
            });
            return b
        } else {
            return d
        }
    };
    a.prototype.create = function (b) {
        var c, d, e;
        c = KWC.createCanvas();
        if (this.source.width > this.source.height) {
            c.width = b;
            c.height = b * this.source.height / this.source.width
        } else {
            c.height = b;
            c.width = b * this.source.width / this.source.height
        }
        e = KWC.createCanvas();
        e.width = Math.min(this.source.width, c.width * 2);
        e.height = Math.min(this.source.height, c.height * 2);
        e.getContext("2d").drawImage(this.source, 0, 0, e.width, e.height);
        d = c.getContext("2d");
        d.drawImage(e, 0, 0, c.width, c.height);
        return c
    };
    a.prototype._kw35 = function (u, D) {
        var W, V, e, X, d, H, F, U, T, l, R, h, f, I, z, q, s, A, o, B, w, v, L, J, K, c, E, C, S, Q, P, O, p, N, M, G, m, k, j;
        B = 0;
        for (S = 0, p = u.length; S < p; S++) {
            J = u[S];
            B = Math.max(B, J.size)
        }
        if (this.source.width > this.source.height) {
            o = B;
            A = B * this.source.height / this.source.width
        } else {
            A = B;
            o = B * this.source.width / this.source.height
        }
        d = this.source;
        this.source = null;
        this.list = [];
        if (KWP_CONF.memory_saving_mode) {
            B = 120
        } else {
            if (a.thumbnailed_count < 200) {
                B = 1000
            } else {
                if (a.thumbnailed_count < 400) {
                    B = 480
                } else {
                    B = 240
                }
            }
        }
        for (R = Q = G = u.length - 1; Q >= 0; R = Q += -1) {
            J = u[R];
            if (J.size <= B) {
                B = J.size;
                e = KWC.createCanvas();
                if (d.width > d.height) {
                    e.width = B;
                    e.height = B * d.height / d.width
                } else {
                    e.height = B;
                    e.width = B * d.width / d.height
                }
                X = e.getContext("2d");
                X.drawImage(d, 0, 0, e.width, e.height);
                d = e;
                J.image = e;
                if (R === 0) {
                    U = X.getImageData(0, 0, e.width, e.height);
                    s = (e.width * e.height - 1) * 4;
                    L = 0;
                    T = 0;
                    V = 0;
                    W = 0;
                    U = U.data;
                    for (R = P = 0; P <= s; R = P += 4) {
                        L += U[R];
                        T += U[R + 1];
                        V += U[R + 2];
                        W += U[R + 3]
                    }
                    L = L / (e.width * e.height);
                    T = T / (e.width * e.height);
                    V = V / (e.width * e.height);
                    W = W / (e.width * e.height);
                    l = a._kw5(L, T, V);
                    this.stats = {
                        hue: l[0],
                        saturation: l[1],
                        lightness: l[2],
                        red: L,
                        green: T,
                        blue: V,
                        alpha: W
                    };
                    K = 0;
                    H = 0;
                    F = 0;
                    z = 1 / e.width;
                    I = 1 / e.height;
                    for (E = O = 1, m = e.width - 1; O <= m; E = O += 1) {
                        for (C = N = 1, k = e.height - 1; N <= k; C = N += 1) {
                            w = E * z;
                            v = C * I;
                            h = (C * e.width + E) * 4;
                            f = ((C - 1) * e.width + E) * 4;
                            c = Math.abs(U[h] - U[f]) + Math.abs(U[h + 1] - U[f + 1]) + Math.abs(U[h + 2] - U[f + 2]) + Math.abs(U[h] - U[h - 4]) + Math.abs(U[h + 1] - U[h - 3]) + Math.abs(U[h + 2] - U[h - 2]);
                            c *= c;
                            K += c;
                            H += w * c;
                            F += v * c
                        }
                    }
                    this.stats.center = {
                        x: H / K,
                        y: F / K
                    };
                    q = U.length / 4;
                    this.tohash = new Array(q);
                    for (R = M = 0, j = q - 1; M <= j; R = M += 1) {
                        this.tohash[R] = U[R * 4] << 16 | U[R * 4 + 1] << 8 | U[R * 4 + 2]
                    }
                    this.tohash = this.tohash.join("0")
                }
            }
            if (J.size < 500 || !KWP_CONF.memory_saving_mode) {
                this.list.push({
                    size: J.size,
                    image: J.image
                })
            }
        }
        this.list = new _kw94(this.list);
        a.thumbnailed_count++;
        if (D) {
            return D()
        }
    };
    a.computeStats = function (K) {
        var I, G, k, h, z, u, J, F, q, E, D, C, w, f, l, o, m, B, H, A, p, v, t, e, d, c, s, j;
        k = KWC.createCanvas();
        k.width = K.width;
        k.height = K.height;
        h = k.getContext("2d");
        h.drawImage(K, 0, 0);
        J = h.getImageData(0, 0, k.width, k.height);
        l = (k.width * k.height - 1) * 4;
        B = 0;
        F = 0;
        G = 0;
        I = 0;
        J = J.data;
        for (E = e = 0; e <= l; E = e += 4) {
            B += J[E];
            F += J[E + 1];
            G += J[E + 2];
            I += J[E + 3]
        }
        B = B / (k.width * k.height);
        F = F / (k.width * k.height);
        G = G / (k.width * k.height);
        I = I / (k.width * k.height);
        q = a._kw5(B, F, G);
        H = {
            hue: q[0],
            saturation: q[1],
            lightness: q[2],
            red: B,
            green: F,
            blue: G,
            alpha: I
        };
        A = 0;
        z = 0;
        u = 0;
        f = 1 / k.width;
        w = 1 / k.height;
        for (v = d = 1, s = k.width - 1; d <= s; v = d += 1) {
            for (t = c = 1, j = k.height - 1; c <= j; t = c += 1) {
                o = v * f;
                m = t * w;
                D = (t * k.width + v) * 4;
                C = ((t - 1) * k.width + v) * 4;
                p = Math.abs(J[D] - J[C]) + Math.abs(J[D + 1] - J[C + 1]) + Math.abs(J[D + 2] - J[C + 2]) + Math.abs(J[D] - J[D - 4]) + Math.abs(J[D + 1] - J[D - 3]) + Math.abs(J[D + 2] - J[D - 2]);
                p *= p;
                A += p;
                z += o * p;
                u += m * p
            }
        }
        H.center = {
            x: z / A,
            y: u / A
        };
        return H
    };
    a.prototype._kw36 = function (G, v) {
        var s, z, p, h, F, H, M, u, C, B, A, w, K, l, g, e, b, J, y, E, D, r, o, m, k, f, c, I, L, x, q;
        if (window.Worker) {
            return this._kw37(G, v)
        }
        K = 0;
        for (m = 0, I = G.length; m < I; m++) {
            y = G[m];
            K = Math.max(K, y.size)
        }
        if (this.source.width > this.source.height) {
            w = K;
            A = K * this.source.height / this.source.width
        } else {
            A = K;
            w = K * this.source.width / this.source.height
        }
        h = KWC.createCanvas();
        h.width = Math.min(this.source.width, w * 2);
        h.height = Math.min(this.source.height, A * 2);
        J = h.getContext("2d");
        J.drawImage(this.source, 0, 0, h.width, h.height);
        u = J.getImageData(0, 0, h.width, h.height);
        u = u.data;
        for (k = 0, L = G.length; k < L; k++) {
            y = G[k];
            K = y.size;
            s = KWC.createCanvas();
            if (this.source.width > this.source.height) {
                s.width = K;
                s.height = K * this.source.height / this.source.width
            } else {
                s.height = K;
                s.width = K * this.source.width / this.source.height
            }
            p = s.getContext("2d");
            M = p.getImageData(0, 0, s.width, s.height);
            F = 1 / s.width;
            z = 1 / s.height;
            for (C = f = 0, x = s.width - 1; 0 <= x ? f <= x : f >= x; C = 0 <= x ? ++f : --f) {
                for (B = c = 0, q = s.height - 1; 0 <= q ? c <= q : c >= q; B = 0 <= q ? ++c : --c) {
                    H = (C + B * s.width) * 4;
                    E = Math.min(h.width - 1, (h.width * C * F) | 0);
                    D = Math.min(h.width - 1, (h.width * (C + 0.5) * F) | 0);
                    r = Math.min(h.height - 1, (h.height * B * z) | 0);
                    o = Math.min(h.height - 1, (h.height * (B + 0.5) * z) | 0);
                    l = (E + r * h.width) * 4;
                    g = (D + r * h.width) * 4;
                    e = (E + o * h.width) * 4;
                    b = (D + o * h.width) * 4;
                    M.data[H] = (u[l] + u[g] + u[e] + u[b]) * 0.25;
                    M.data[H + 1] = (u[l + 1] + u[g + 1] + u[e + 1] + u[b + 1]) * 0.25;
                    M.data[H + 2] = (u[l + 2] + u[g + 2] + u[e + 2] + u[b + 2]) * 0.25;
                    M.data[H + 3] = (u[l + 3] + u[g + 3] + u[e + 3] + u[b + 3]) * 0.25
                }
            }
            p.putImageData(M, 0, 0);
            y.image = KWC.createImage();
            y.image.src = s.toDataURL("image/png")
        }
        if (v) {
            return v()
        }
    };
    a.prototype._kw37 = function (p, h) {
        var f, e, b, g, k, o, l, s, j, q, m, i, d, c, r, u;
        s = 0;
        for (d = 0, r = p.length; d < r; d++) {
            m = p[d];
            s = Math.max(s, m.size)
        }
        if (this.source.width > this.source.height) {
            l = s;
            o = s * this.source.height / this.source.width
        } else {
            o = s;
            l = s * this.source.width / this.source.height
        }
        b = KWC.createCanvas();
        b.width = Math.min(this.source.width, l * 2);
        b.height = Math.min(this.source.height, o * 2);
        q = b.getContext("2d");
        q.drawImage(this.source, 0, 0, b.width, b.height);
        g = q.getImageData(0, 0, b.width, b.height);
        j = {
            width: b.width,
            height: b.height,
            datasrc: g.data,
            list: []
        };
        for (c = 0, u = p.length; c < u; c++) {
            m = p[c];
            s = m.size;
            f = KWC.createCanvas();
            if (this.source.width > this.source.height) {
                f.width = s;
                f.height = s * this.source.height / this.source.width
            } else {
                f.height = s;
                f.width = s * this.source.width / this.source.height
            }
            e = f.getContext("2d");
            m.context = e;
            m.canvas = f;
            k = {
                width: f.width,
                height: f.height,
                data: e.getImageData(0, 0, f.width, f.height)
            };
            j.list.push(k)
        }
        i = new Worker("js/creator/thumbworker.js");
        i.onmessage = (function (t) {
            return function (y) {
                var w, x, v, z;
                z = y.data;
                for (w = x = 0, v = z.length; x < v; w = ++x) {
                    m = z[w];
                    p[w].context.putImageData(m, 0, 0);
                    p[w].image = KWC.createImage();
                    p[w].image.src = p[w].canvas.toDataURL("image/png");
                    delete p[w].context;
                    delete p[w].canvas
                }
                return h()
            }
        })(this);
        return i.postMessage(j)
    };
    a.thumbnailed_count = 0;
    a._kw5 = function (c, i, k) {
        var j, f, l, e, o, m;
        c = c / 255;
        i = i / 255;
        k = k / 255;
        l = Math.max(c, i, k);
        e = Math.min(c, i, k);
        f = void 0;
        o = void 0;
        m = l;
        j = l - e;
        o = (l === 0 ? 0 : j / l);
        if (l === e) {
            f = 0
        } else {
            switch (l) {
                case c:
                    f = (i - k) / j + (i < k ? 6 : 0);
                    break;
                case i:
                    f = (k - c) / j + 2;
                    break;
                case k:
                    f = (c - i) / j + 4
            }
            f /= 6
        }
        return [f, o, m]
    };
    return a
})();
module.exports = this._kw34;
this._kw38 = (function () {
    function a(b) {
        this.frame = b
    }
    a.prototype.create = function (z, t, k) {
        var j, e, v, s, r, p, l, i, g, u, m, c, o, q, d, b, x, y;
        j = KWC.createCanvas();
        j.width = t;
        j.height = t;
        e = j.getContext("2d");
        c = this.frame.attr.type.length / 2;
        i = this.frame.attr.left * 0.01;
        g = this.frame.attr.top * 0.01;
        l = 1 - (this.frame.attr.left + this.frame.attr.right) * 0.01;
        s = 1 - (this.frame.attr.top + this.frame.attr.bottom) * 0.01;
        p = [];
        if (this.frame && this.frame.attr.filter) {
            v = this.frame.attr.filter.split("-");
            for (d = 0, x = v.length; d < x; d++) {
                r = v[d];
                p.push(r)
            }
        }
        for (b = 0, y = p.length; b < y; b++) {
            v = p[b];
            r = Filters[v];
            if (r) {
                z = r._kw8(z)
            }
        }
        e.save();
        e.beginPath();
        e.rect(t * i, t * g, t * l, t * s);
        e.clip();
        o = Math.max(t / z.width, t / z.height);
        q = z.width * o;
        u = z.height * o;
        if (this.frame.attr.type.indexOf("mk") >= 0) {
            m = this.frame.attr.type.indexOf("mk") / 2;
            e.drawImage(k, 0, -t * m, t, t * c);
            e.globalCompositeOperation = "source-in";
            e.drawImage(z, t / 2 - q / 2, t / 2 - u / 2, q, u)
        } else {
            e.drawImage(z, t / 2 - q / 2, t / 2 - u / 2, q, u)
        }
        e.restore();
        e.save();
        if (this.frame.attr.type.indexOf("fg") >= 0) {
            m = this.frame.attr.type.indexOf("fg") / 2;
            e.drawImage(k, 0, -t * m, t, t * c)
        }
        if (this.frame.attr.type.indexOf("bg") >= 0) {
            m = this.frame.attr.type.indexOf("bg") / 2;
            e.globalCompositeOperation = "destination-over";
            e.drawImage(k, 0, -t * m, t, t * c)
        }
        e.restore();
        return j
    };
    return a
})();
this._kw40 = (function () {
    function a(d) {
        var c, f, b, e;
        this.filter = d;
        if (this.filter.demo) {
            this.filter = this.filter.clone();
            e = this.filter.demo;
            for (c = 0, b = e.length; c < b; c++) {
                f = e[c];
                this.filter.parameters[c].value = f
            }
        }
    }
    a.prototype.create = function (c, f) {
        var d, e, i, g, b;
        d = KWC.createCanvas();
        d.width = f;
        d.height = f;
        e = d.getContext("2d");
        c = this.filter._kw8(c);
        g = Math.max(f / c.width, f / c.height);
        b = c.width * g;
        i = c.height * g;
        e.drawImage(c, f / 2 - b / 2, f / 2 - i / 2, b, i);
        return d
    };
    return a
})();
this._kw196 = (function () {
    function a() { }
    a.central_margin = 5;
    a._kw147 = function (f, m, g) {
        var e, l, t, s, B, y, A, i, c, v, d, x, p, D, z, k, j, b, u, r, q, E, C, o;
        if (g == null) {
            g = false
        }
        if (m.view && m.view.properties.double_background) {
            if ((f.rotation | 0) % 360 === 0) {
                if (Math.abs(f.x + f.width / 2) < a.central_margin) {
                    if (Math.abs(f.width - m.width * 0.5 - m.spec.bleed.left) < m.spec.bleed.left) {
                        f.width = m.width * 0.5 + m.spec.bleed.left;
                        f.x = -m.width * 0.5 - m.spec.bleed.left + f.width / 2
                    } else {
                        z = -(f.x + f.width / 2);
                        if (g) {
                            f.width = Math.max(10, f.width + z);
                            f.x += z * 0.5;
                            f._kw72()
                        } else {
                            f.x += z
                        }
                    }
                } else {
                    if (Math.abs(f.x - f.width / 2) < this.central_margin) {
                        if (Math.abs(f.width - m.width * 0.5 - m.spec.bleed.right) < m.spec.bleed.right) {
                            f.width = m.width * 0.5 + m.spec.bleed.right;
                            f.x = f.width / 2
                        } else {
                            z = f.x - f.width / 2;
                            if (g) {
                                f.width = Math.max(10, f.width + z);
                                f.x -= z * 0.5;
                                f._kw72()
                            } else {
                                f.x -= z
                            }
                        }
                    }
                }
            }
        }
        p = m.width - m.spec.inner_margin.left - m.spec.inner_margin.right;
        x = m.height - m.spec.inner_margin.top - m.spec.inner_margin.bottom;
        y = m.width + m.spec.bleed.left + m.spec.bleed.right;
        B = m.height + m.spec.bleed.top + m.spec.bleed.bottom;
        if ((m.view && m.view.properties.hide_left) || (m.view && m.view.properties.hide_right)) {
            y = m.width * 0.5 + m.spec.bleed.left + m.spec.bleed.right
        }
        if ((f.rotation + 360) % 90 !== 0) {
            D = Math.max(y, B);
            f.width = Math.min(f.width, D);
            f.height = Math.min(f.height, D);
            f._kw72();
            if (m.view && m.view.properties.hide_left) {
                f.x = Math.max(0, f.x)
            }
            if (m.view && m.view.properties.hide_right) {
                f.x = Math.min(0, f.x)
            }
            return
        }
        l = Math.cos(f.rotation / 360 * Math.PI * 2);
        u = Math.sin(f.rotation / 360 * Math.PI * 2);
        C = Math.abs(f.width * l - f.height * u) / 2;
        v = Math.abs(f.width * u + f.height * l) / 2;
        o = Math.abs(f.width * l + f.height * u) / 2;
        d = Math.abs(f.width * u - f.height * l) / 2;
        C = Math.max(C, o);
        v = Math.max(v, d);
        if (C * 2 > (y + p) / 2) {
            q = y
        } else {
            q = Math.min(C * 2, p)
        } if (v * 2 > m.height + m.spec.bleed.top - (m.spec.inner_margin.top + m.spec.inner_margin.bottom) / 2) {
            i = B
        } else {
            i = v * 2
        }
        e = Math.abs(l);
        b = Math.abs(u);
        E = q / (C * 2);
        c = i / (v * 2);
        r = f.width * Math.sqrt(e * E * e * E + b * c * b * c);
        A = f.height * Math.sqrt(e * c * e * c + b * E * b * E);
        f.width = r;
        f.height = A;
        l = Math.cos(f.rotation / 360 * Math.PI * 2);
        u = Math.sin(f.rotation / 360 * Math.PI * 2);
        C = Math.abs(f.width * l - f.height * u) / 2;
        v = Math.abs(f.width * u + f.height * l) / 2;
        o = Math.abs(f.width * l + f.height * u) / 2;
        d = Math.abs(f.width * u - f.height * l) / 2;
        C = Math.max(C, o);
        v = Math.max(v, d);
        k = f.x;
        j = f.y;
        if (f.x - C <= -m.width / 2 + m.spec.inner_margin.left / 2) {
            f.x = -m.width / 2 + C - m.spec.bleed.left;
            if (g) {
                t = k - f.x;
                f.x += t / 2;
                f.width += t
            }
        } else {
            if (f.x + C > m.width / 2 - m.spec.inner_margin.right / 2) {
                f.x = m.width / 2 + m.spec.bleed.right - C;
                if (g) {
                    t = f.x - k;
                    f.x -= t / 2;
                    f.width += t
                }
            } else {
                if (f.x - C < -m.width / 2 + m.spec.inner_margin.left) {
                    f.x = -m.width / 2 + C + m.spec.inner_margin.left;
                    if (g) {
                        t = f.x - k;
                        f.x -= t / 2;
                        f.width -= t
                    }
                } else {
                    if (f.x + C > m.width / 2 - m.spec.inner_margin.right) {
                        f.x = m.width / 2 - m.spec.inner_margin.right - C;
                        if (g) {
                            t = k - f.x;
                            f.x += t / 2;
                            f.width -= t
                        }
                    }
                }
            }
        } if (f.y - v <= -m.height / 2 + m.spec.inner_margin.top / 2) {
            f.y = -m.height / 2 + v - m.spec.bleed.top;
            if (g) {
                s = j - f.y;
                f.y += s / 2;
                f.height += s
            }
        } else {
            if (f.y + v > m.height / 2 - m.spec.inner_margin.bottom / 2) {
                f.y = m.height / 2 + m.spec.bleed.bottom - v;
                if (g) {
                    s = f.y - j;
                    f.y -= s / 2;
                    f.height += s
                }
            } else {
                if (f.y - v < -m.height / 2 + m.spec.inner_margin.top) {
                    f.y = -m.height / 2 + v + m.spec.inner_margin.top;
                    if (g) {
                        s = f.y - j;
                        f.y -= s / 2;
                        f.height -= s
                    }
                } else {
                    if (f.y + v > m.height / 2 - m.spec.inner_margin.bottom) {
                        f.y = m.height / 2 - m.spec.inner_margin.bottom - v;
                        if (g) {
                            s = j - f.y;
                            f.y += s / 2;
                            f.height -= s
                        }
                    }
                }
            }
        }
        f._kw72();
        if (m.view && m.view.properties.hide_left) {
            if ((f.rotation | 0) % 360 === 0) {
                f.width = Math.min(m.width / 2 + m.spec.bleed.left + m.spec.bleed.right, f.width);
                f.x = Math.max(-m.spec.bleed.left + f.width / 2, f.x);
                f._kw72()
            }
        }
        if (m.view && m.view.properties.hide_right) {
            if ((f.rotation | 0) % 360 === 0) {
                f.width = Math.min(m.width / 2 + m.spec.bleed.left + m.spec.bleed.right, f.width);
                f.x = Math.min(m.spec.bleed.right - f.width / 2, f.x);
                return f._kw72()
            }
        }
    };
    a._kw148 = function (o, d) {
        var c, j, e, i, q, r, p, h, m, l, g, f, k, b;
        if (d == null) {
            d = false
        }
        i = 10;
        r = o.font_size / 72 * 25.4 * i;
        if (!o.render_buffer) {
            if (o.height < (1 * r * 1.5 + r) / i) {
                j = o.height;
                o.height = Math.min(Math.max(o.page.width, o.page.height), (1 * r * 1.5 + r) * 1.0001 / i);
                j = o.height - j;
                if (d) {
                    o.y += j / 2
                }
            }
            return
        }
        c = o.render_buffer.getContext("2d");
        l = (o.width * i + 2.5) | 0;
        q = _kw59.lineize(o.replacedText(), c, i, l - r, o.font_name, r);
        c.font = "" + r + "pt " + o.font_name;
        e = 0;
        for (g = 0, k = q.length; g < k; g++) {
            p = q[g];
            h = p[0].split(" ");
            for (f = 0, b = h.length; f < b; f++) {
                m = h[f];
                e = Math.max(e, c.measureText(m).width)
            }
        }
        if (o.width < (e + r) / i) {
            o.width = Math.min(Math.max(o.page.width, o.page.height), (e + r) * 1.0001 / i);
            l = (o.width * i + 2.5) | 0;
            q = _kw59.lineize(o.replacedText(), c, i, l - r, o.font_name, r)
        }
        if (o.height < (q.length * r * 1.5 + r) / i) {
            j = o.height;
            o.height = Math.min(Math.max(o.page.width, o.page.height), (q.length * r * 1.5 + r) * 1.0001 / i);
            j = o.height - j;
            if (d) {
                return o.y += j / 2
            }
        }
    };
    a.fix = function (b, d, c) {
        b.width = Math.max(10, Math.min(b.width, Math.max(d.width + d.spec.bleed.left + d.spec.bleed.right, d.height + d.spec.bleed.top + d.spec.bleed.bottom)));
        b.height = Math.max(10, Math.min(b.height, Math.max(d.width + d.spec.bleed.left + d.spec.bleed.right, d.height + d.spec.bleed.top + d.spec.bleed.bottom)));
        if (b.type === "text") {
            return this._kw148(b)
        } else {
            if (b.type === "photo") {
                return this._kw147(b, d, c)
            }
        }
    };
    a.prototype.smartGuideMove = function (f, i) {
        var e, l, m, c, b, k, g, j, h, d;
        e = null;
        m = null;
        l = Number.MAX_VALUE;
        h = i.objects;
        d = [];
        for (g = 0, j = h.length; g < j; g++) {
            b = h[g];
            if (b.rotation % 180 === 0) {
                c = b.x - b.width / 2;
                d.push(k = b.x + b.width / 2)
            } else {
                d.push(void 0)
            }
        }
        return d
    };
    return a
})();
this._kw41 = (function () {
    function a(b) {
        this.source = b
    }
    a.prototype.render = function (j) {
        var k, d, c, h, b, e, l, f, g;
        d = KWC.createCanvas();
        d.width = this.source.width / (Math.PI * 0.5);
        d.height = this.source.height + j + 1;
        c = d.getContext("2d");
        if (console.time) {
            console.time("ellipserenderer")
        }
        for (h = f = 0, g = d.width - 1; 0 <= g ? f <= g : f >= g; h = 0 <= g ? ++f : --f) {
            k = Math.acos((d.width / 2 - h) / (d.width / 2));
            e = (Math.sin(k) * j) | 0;
            b = e + this.source.height;
            l = (k / Math.PI * d.width * Math.PI * 0.5) | 0;
            c.drawImage(this.source, l, 0, 1, this.source.height, h, e, 1, this.source.height)
        }
        if (console.timeEnd) {
            console.timeEnd("ellipserenderer")
        }
        return d
    };
    a.prototype.renderOld = function (g) {
        var q, f, d, v, h, s, r, l, k, t, u, p, m, c, b, o, e;
        f = KWC.createCanvas();
        f.width = this.source.width / (Math.PI * 0.5);
        f.height = this.source.height + g + 1;
        d = f.getContext("2d");
        v = d.getImageData(0, 0, f.width, f.height);
        h = this.source.getContext("2d").getImageData(0, 0, this.source.width, this.source.height);
        for (s = c = 0, o = f.width - 1; 0 <= o ? c <= o : c >= o; s = 0 <= o ? ++c : --c) {
            q = Math.acos((f.width / 2 - s) / (f.width / 2));
            u = (Math.sin(q) * g) | 0;
            t = u + this.source.height;
            p = (q / Math.PI * f.width * Math.PI * 0.5) | 0;
            for (r = b = 0, e = this.source.height - 1; 0 <= e ? b <= e : b >= e; r = 0 <= e ? ++b : --b) {
                m = r + u;
                l = (s + f.width * m) * 4;
                k = (p + this.source.width * r) * 4;
                v.data[l] = h.data[k];
                v.data[l + 1] = h.data[k + 1];
                v.data[l + 2] = h.data[k + 2];
                v.data[l + 3] = h.data[k + 3]
            }
        }
        d.putImageData(v, 0, 0);
        return f
    };
    return a
})();
this.Grid = (function () {
    function a() {
        this.active = true;
        this.size = 5;
        this.display = true;
        this.spacing = 3
    }
    a.prototype._kw197 = function (b) {
        if (!this.active) {
            return b
        }
        return Math.round(b / this.size) * this.size
    };
    a.prototype._kw198 = function (b) {
        if (!this.active) {
            return b
        }
        return Math.round(b / 2 / this.size) * this.size * 2
    };
    a.prototype.apply = function (b) {
        return b._kw55((function (c) {
            return function () {
                var g, f, d, e;
                e = b.objects;
                for (f = 0, d = e.length; f < d; f++) {
                    g = e[f];
                    g.x = Math.round(g.x / c.size) * c.size;
                    g.y = Math.round(g.y / c.size) * c.size;
                    g.width = Math.round(g.width / 2 / c.size) * c.size * 2;
                    g.height = Math.round(g.height / 2 / c.size) * c.size * 2
                }
                return b.updated()
            }
        })(this))
    };
    a.prototype.paint = function (b, c) {
        if (!this.display) {
            return
        }
        if (this.buffer == null) {
            this._kw149(b, c)
        }
        if (this.buffer.width !== b.width || this.buffer.height !== b.height || this.buffer_size !== this.size) {
            this._kw149(b, c)
        }
        return b.getContext("2d").drawImage(this.buffer, 0, 0)
    };
    a.prototype._kw149 = function (b, e) {
        var c, f, d;
        this.buffer = KWC.createCanvas();
        this.buffer.width = b.width;
        this.buffer.height = b.height;
        this.buffer_size = this.size;
        c = this.buffer.getContext("2d");
        f = 0;
        d = this.size * this.buffer.height / e.height;
        c.save();
        c.translate(this.buffer.width / 2, this.buffer.height / 2);
        c.globalAlpha = 0.5;
        c.lineWidth = 1;
        while (f < b.width / 2) {
            c.beginPath();
            c.moveTo(-f - 0.25, -this.buffer.height * 0.5);
            c.lineTo(-f - 0.25, this.buffer.height * 0.5);
            c.strokeStyle = "#000";
            c.stroke();
            c.beginPath();
            c.moveTo(-f + 0.25, -this.buffer.height * 0.5);
            c.lineTo(-f + 0.25, this.buffer.height * 0.5);
            c.strokeStyle = "#FFF";
            c.stroke();
            c.beginPath();
            c.moveTo(f - 0.25, -this.buffer.height * 0.5);
            c.lineTo(f - 0.25, this.buffer.height * 0.5);
            c.strokeStyle = "#000";
            c.stroke();
            c.beginPath();
            c.moveTo(f + 0.25, -this.buffer.height * 0.5);
            c.lineTo(f + 0.25, this.buffer.height * 0.5);
            c.strokeStyle = "#FFF";
            c.stroke();
            f += d
        }
        f = 0;
        while (f < b.height / 2) {
            c.beginPath();
            c.moveTo(-this.buffer.width * 0.5, -f - 0.25);
            c.lineTo(this.buffer.width * 0.5, -f - 0.25);
            c.strokeStyle = "#000";
            c.stroke();
            c.beginPath();
            c.moveTo(-this.buffer.width * 0.5, -f + 0.25);
            c.lineTo(this.buffer.width * 0.5, -f + 0.25);
            c.strokeStyle = "#FFF";
            c.stroke();
            c.beginPath();
            c.moveTo(-this.buffer.width * 0.5, f - 0.25);
            c.lineTo(this.buffer.width * 0.5, f - 0.25);
            c.strokeStyle = "#000";
            c.stroke();
            c.beginPath();
            c.moveTo(-this.buffer.width * 0.5, f + 0.25);
            c.lineTo(this.buffer.width * 0.5, f + 0.25);
            c.strokeStyle = "#FFF";
            c.stroke();
            f += d
        }
        return c.restore()
    };
    return a
})();
var AgendaStyle;
AgendaStyle = require("../agenda/agendastyle.coffee", AgendaStyle);
this._kw150 = (function () {
    function a(b) {
        this.page = b
    }
    a.prototype._kw199 = function (f, h, i, e) {
        var d, c, b, g;
        if (typeof e === "string") {
            f.fillStyle = e;
            return f.fillRect(-h / 2, -i / 2, h, i)
        } else {
            d = e.source.thumblist._kw39(Math.max(h, i), ((function (j) {
                return function () {
                    return j.page.updated()
                }
            })(this)));
            if (d.complete) {
                g = Math.max(h / d.width, i / d.height);
                c = (d.width * g - h) * (e.posx - 0.5);
                b = (d.height * g - i) * (e.posy - 0.5);
                return f.drawImage(d, -d.width * g / 2 + c, -d.height * g / 2 + b, d.width * g, d.height * g)
            }
        }
    };
    a.prototype.render = function (g, q, i) {
        var e, t, k, j, s, r, p, m, d, c, b, u, v, l, f;
        if (i == null) {
            i = false
        }
        r = this.page.width * q;
        t = this.page.height * q;
        p = g.width / 2;
        k = g.height / 2;
        m = (this.page.width + this.page.spec.bleed.left + this.page.spec.bleed.right) * q;
        j = (this.page.height + this.page.spec.bleed.top + this.page.spec.bleed.bottom) * q;
        d = (this.page.width / 2 + this.page.spec.bleed.left + this.page.spec.bleed.right) * q;
        e = g.getContext("2d");
        e.clearRect(0, 0, g.width, g.height);
        this.page.background.render(g, e, this.page, q);
        if (this.page.spec.prerender != null) {
            new AgendaStyle(this.page.creation).paintPage(0, g, this.page)
        }
        l = this.page.objects;
        for (c = 0, u = l.length; c < u; c++) {
            s = l[c];
            if (!s.sticky) {
                this.drawObject(s, e, p, k, q)
            }
        }
        f = this.page.objects;
        for (b = 0, v = f.length; b < v; b++) {
            s = f[b];
            if (s.sticky) {
                this.drawObject(s, e, p, k, q)
            }
        }
        if (this.page.overlay != null) {
            this.page.overlay.draw(g, q)
        }
        if (i && this.page.spec.cropmarks) {
            return this._kw67(e)
        }
    };
    a.prototype.drawObject = function (i, g, b, d, f) {
        var j, e, h;
        if (i.transition_start != null) {
            this.page.updating = true
        }
        if (i._kw65 != null) {
            i = i._kw65(new Date().getTime())
        }
        if (i.type === "placeholder") {
            g.save();
            g.translate(b + (i.x * f), d + (i.y * f));
            g.rotate(-i.rotation * Math.PI / 180);
            h = i.width * f;
            e = i.height * f;
            g.strokeStyle = "#AAA";
            g.lineWidth = 2;
            g.strokeRect(-h / 2, -e / 2, h, e);
            return g.restore()
        } else {
            g.save();
            g.translate(b + (i.x * f), d + (i.y * f));
            j = i.render(f);
            if ((i.render_buffer_dx != null) && (i.render_buffer_dy != null)) {
                g.translate(i.render_buffer_dx, i.render_buffer_dy)
            }
            g.rotate(-i.rotation * Math.PI / 180);
            g.globalAlpha = i.opacity;
            g.drawImage(j, -j.width / 2, -j.height / 2);
            return g.restore()
        }
    };
    a.prototype._kw67 = function (b) {
        this._kw68(b, 0, this.view_ratio * this.page.spec.margin.top, this.view_ratio * this.page.spec.margin.left - this.view_ratio * this.page.spec.bleed.left, this.view_ratio * this.page.spec.margin.top);
        this._kw68(b, canvas.width, this.view_ratio * this.page.spec.margin.top, canvas.width - this.view_ratio * (this.page.spec.margin.left - this.page.spec.bleed.left), this.view_ratio * this.page.spec.margin.top);
        this._kw68(b, 0, canvas.height - this.view_ratio * this.page.spec.margin.bottom, this.view_ratio * this.page.spec.margin.left - this.view_ratio * this.page.spec.bleed.left, canvas.height - this.view_ratio * this.page.spec.margin.bottom);
        this._kw68(b, canvas.width, canvas.height - this.view_ratio * this.page.spec.margin.bottom, canvas.width - this.view_ratio * (this.page.spec.margin.left - this.page.spec.bleed.left), canvas.height - this.view_ratio * this.page.spec.margin.bottom);
        this._kw68(b, this.view_ratio * this.page.spec.margin.left, 0, this.view_ratio * this.page.spec.margin.left, this.view_ratio * this.page.spec.margin.top - this.view_ratio * this.page.spec.bleed.top);
        this._kw68(b, canvas.width - this.view_ratio * this.page.spec.margin.right, 0, canvas.width - this.view_ratio * this.page.spec.margin.right, this.view_ratio * this.page.spec.margin.top - this.view_ratio * this.page.spec.bleed.top);
        this._kw68(b, this.view_ratio * this.page.spec.margin.left, canvas.height, this.view_ratio * this.page.spec.margin.left, canvas.height - this.view_ratio * (this.page.spec.margin.bottom - this.page.spec.bleed.bottom));
        return this._kw68(b, canvas.width - this.view_ratio * this.page.spec.margin.right, canvas.height, canvas.width - this.view_ratio * this.page.spec.margin.right, canvas.height - this.view_ratio * (this.page.spec.margin.bottom - this.page.spec.bleed.bottom))
    };
    a.prototype._kw68 = function (e, c, f, b, d) {
        e.save();
        e.lineWidth = 6;
        e.strokeStyle = "#FFF";
        e.beginPath();
        e.moveTo(c, f);
        e.lineTo(b, d);
        e.stroke();
        e.lineWidth = 2;
        e.strokeStyle = "#000";
        e.beginPath();
        e.moveTo(c, f);
        e.lineTo(b, d);
        e.stroke();
        return e.restore()
    };
    a.prototype.drawBarcode = function (d) {
        var e, b;
        if (this.page.spec.barcode) {
            if (this.page.spec.barcode.scale != null) {
                e = KWC.createCanvas();
                e.width = this.barcode_image.width * this.page.spec.barcode.scale;
                e.height = this.barcode_image.height * this.page.spec.barcode.scale;
                e.getContext("2d").drawImage(this.barcode_image, 0, 0, e.width, e.height);
                b = e
            } else {
                b = this.barcode_image
            }
            d.save();
            d.translate(this.canvas.width, this.canvas.height);
            if ((this.page.creation.product._kw154 != null) && !this.page.creation.product._kw154() && this.page.spec.type !== "book_hard_cover") {
                d.translate(-this.canvas.width / 2, 0)
            }
            if (this.page.spec.barcode.rotate === 90 || this.page.spec.barcode.rotate === 270) {
                d.translate(-b.height / 2, -b.width / 2);
                d.translate(-this.page.spec.barcode.x * this.page.spec.dpi / 25.4, -this.page.spec.barcode.y * this.page.spec.dpi / 25.4);
                d.rotate(-this.page.spec.barcode.rotate * Math.PI / 180);
                d.drawImage(b, -b.width / 2, -b.height / 2)
            } else {
                d.translate(-b.width / 2, -b.height / 2);
                d.translate(-this.page.spec.barcode.x * this.page.spec.dpi / 25.4, -this.page.spec.barcode.y * this.page.spec.dpi / 25.4);
                d.rotate(-this.page.spec.barcode.rotate * Math.PI / 180);
                d.drawImage(b, -b.width / 2, -b.height / 2)
            }
            return d.restore()
        }
    };
    return a
})();
this.TransformTools = (function () {
    function a(b) {
        this.editor = b;
        _kw33.image_resize_diagonal = _kw33.createImage(KWP_CONF.static_serv + "img/creator/resize_diagonal.png");
        _kw33.image_resize_vertical = _kw33.createImage(KWP_CONF.static_serv + "img/creator/resize_vertical.png");
        _kw33.image_resize_horizontal = _kw33.createImage(KWP_CONF.static_serv + "img/creator/resize_horizontal.png");
        _kw33.image_rotate_topright = _kw33.createImage(KWP_CONF.static_serv + "img/creator/rotate_topright.png");
        _kw33.image_rotate_bottomleft = _kw33.createImage(KWP_CONF.static_serv + "img/creator/rotate_bottomleft.png");
        _kw33.image_move_crop = _kw33.createImage(KWP_CONF.static_serv + "img/creator/move_crop.png")
    }
    a.prototype.drawTools = function (c, b) {
        if (c.type !== "foreground" && (c.type !== "photo" || !c.background)) {
            if (c.canRotate()) {
                this._kw66(b, c, 1, -1, _kw33.image_rotate_topright)
            }
            if (c.canChangeRatio() && c.canResize()) {
                this._kw66(b, c, 1, 0, _kw33.image_resize_horizontal)
            }
            if (c.canResize()) {
                this._kw66(b, c, 1, 1, _kw33.image_resize_diagonal)
            }
            if (c.canResize()) {
                this._kw66(b, c, -1, -1, _kw33.image_resize_diagonal)
            }
            if (c.canChangeRatio() && c.canResize()) {
                this._kw66(b, c, -1, 0, _kw33.image_resize_horizontal)
            }
            if (c.canRotate()) {
                this._kw66(b, c, -1, 1, _kw33.image_rotate_bottomleft)
            }
            if (c.canChangeRatio() && c.canResize()) {
                this._kw66(b, c, 0, -1, _kw33.image_resize_vertical)
            }
            if (c.canChangeRatio() && c.canResize()) {
                this._kw66(b, c, 0, 1, _kw33.image_resize_vertical)
            }
        }
        if (c.can_move_crop) {
            if (this.editor.dragging && this.editor.drag_mode === "move_crop") {
                return this._kw66(b, c, 0, 0.5, _kw33.image_move_crop, this.editor.drag_crop_dx, this.editor.drag_crop_dy)
            } else {
                return this._kw66(b, c, 0, 0.5, _kw33.image_move_crop)
            }
        }
    };
    a.prototype._kw66 = function (g, f, e, b, d) {
        var h;
        if (e == null) {
            e = 0
        }
        if (b == null) {
            b = 0
        }
        h = this._kw151(f, e, b, true);
        if (d.complete) {
            g.save();
            g.translate(h[0], h[1]);
            g.scale(h[2] / 32, h[2] / 32);
            g.rotate(-f.rotation * Math.PI / 180);
            g.drawImage(d, -d.width / 2, -d.height / 2);
            return g.restore()
        }
    };
    a.prototype._kw151 = function (b, j, h, e) {
        var g, c, i, f, d;
        if (e == null) {
            e = false
        }
        g = Math.cos(-b.rotation * Math.PI / 180);
        c = Math.sin(-b.rotation * Math.PI / 180);
        i = Math.min(32, Math.max(12, Math.sqrt(b.width * b.width + b.height * b.height) * this.editor.view_ratio / 8));
        if (e) {
            f = this.editor.buffer_width / 2 + b.x * this.editor.view_ratio + 0.5 * this.editor.view_ratio * (g * j * b.width - c * h * b.height);
            d = this.editor.canvas.height / 2 + b.y * this.editor.view_ratio + 0.5 * this.editor.view_ratio * (c * j * b.width + g * h * b.height);
            f = Math.max(i / 2, Math.min(this.editor.buffer_width - i / 2, f));
            d = Math.max(i / 2, Math.min(this.editor.canvas.height - i / 2, d))
        } else {
            f = this.editor.buffer_width / 2 + b.x * this.editor.view_ratio + 0.5 * this.editor.view_ratio * (g * j * b.width - c * h * b.height);
            d = this.editor.canvas.height / 2 + b.y * this.editor.view_ratio + 0.5 * this.editor.view_ratio * (c * j * b.width + g * h * b.height);
            f = Math.max(i / 2, Math.min(this.editor.buffer_width - i / 2, f));
            d = Math.max(i / 2, Math.min(this.editor.canvas.height - i / 2, d));
            if (this.editor.view.crop) {
                f = f - this.editor.view.crop.x * this.editor.buffer_width
            }
        }
        return [f, d, i]
    };
    a.prototype._kw203 = function (f, b, h, e, d) {
        var g;
        g = this._kw151(f, e, d);
        return Math.abs(b - g[0]) < g[2] / 2 && Math.abs(h - g[1]) < g[2] / 2
    };
    a.prototype.handleDrag = function (i, g, u) {
        var v, z, b, l, k, C, A, q, p, f, s, B, m, d, c, j, e, t;
        switch (this.editor.drag_mode) {
            case "rotate":
                s = this.editor.viewXtoPageX(this.editor.drag_start_x);
                m = this.editor.viewYtoPageY(this.editor.drag_start_y);
                l = this.editor.viewXtoPageX(i);
                k = this.editor.viewYtoPageY(g);
                b = this._kw71(s - u.x, m - u.y);
                v = this._kw71(l - u.x, k - u.y);
                u.rotation = this.editor.drag_rotation - v + b;
                u.rotation = (u.rotation + 360) % 360;
                c = 3;
                if (Math.abs(u.rotation - 90) < c) {
                    u.rotation = 90
                }
                if (Math.abs(u.rotation - 180) < c) {
                    u.rotation = 180
                }
                if (Math.abs(u.rotation - 270) < c) {
                    u.rotation = 270
                }
                if (Math.abs(u.rotation - 360) < c) {
                    u.rotation = 0
                }
                if (u.rotation < c) {
                    u.rotation = 0
                }
                return this.editor.refresh();
            case "resize":
                j = this.editor.buffer_width;
                z = this.editor.canvas.height;
                s = this.editor.viewXtoPageX(this.editor.drag_start_x) - this.editor.drag_start_aspect.x;
                m = this.editor.viewYtoPageY(this.editor.drag_start_y) - this.editor.drag_start_aspect.y;
                p = u.rotation * Math.PI / 180;
                B = Math.cos(p) * s - Math.sin(p) * m;
                d = Math.sin(p) * s + Math.cos(p) * m;
                i = this.editor.viewXtoPageX(i) - this.editor.drag_start_aspect.x;
                g = this.editor.viewYtoPageY(g) - this.editor.drag_start_aspect.y;
                p = u.rotation * Math.PI / 180;
                e = Math.cos(p) * i - Math.sin(p) * g;
                t = Math.sin(p) * i + Math.cos(p) * g;
                if (this.editor.selected.canChangeRatio()) {
                    u.width = this.editor.grid._kw198(Math.max(this.editor.page.min_dimension, this.editor.drag_start_aspect.width * e / B));
                    u.height = this.editor.grid._kw198(Math.max(this.editor.page.min_dimension, this.editor.drag_start_aspect.height * t / d))
                } else {
                    f = Math.sqrt(Math.abs(e * t / (B * d)));
                    u.width = this.editor.grid._kw198(Math.max(this.editor.page.min_dimension, this.editor.drag_start_aspect.width * f));
                    u.height = this.editor.grid._kw198(this.editor.selected.width * this.editor.selected.source.height / this.editor.selected.source.width)
                }
                _kw196.fix(u, this.editor.page);
                if (u._kw72 != null) {
                    u._kw72()
                }
                return this.editor.refresh();
            case "resize_horizontal":
                if (u.canChangeRatio()) {
                    j = this.editor.buffer_width;
                    z = this.editor.canvas.height;
                    s = this.editor.viewXtoPageX(this.editor.drag_start_x) - this.editor.drag_start_aspect.x;
                    m = this.editor.viewYtoPageY(this.editor.drag_start_y) - this.editor.drag_start_aspect.y;
                    p = u.rotation * Math.PI / 180;
                    B = Math.cos(p) * s - Math.sin(p) * m;
                    d = Math.sin(p) * s + Math.cos(p) * m;
                    i = this.editor.viewXtoPageX(i) - this.editor.drag_start_aspect.x;
                    g = this.editor.viewYtoPageY(g) - this.editor.drag_start_aspect.y;
                    p = u.rotation * Math.PI / 180;
                    e = Math.cos(p) * i - Math.sin(p) * g;
                    t = Math.sin(p) * i + Math.cos(p) * g;
                    u.width = this.editor.grid._kw198(Math.max(this.editor.page.min_dimension, this.editor.drag_start_aspect.width * e / B));
                    _kw196.fix(u, this.editor.page);
                    if (u._kw72 != null) {
                        u._kw72()
                    }
                    return this.editor.refresh()
                }
                break;
            case "resize_vertical":
                if (u.canChangeRatio()) {
                    j = this.editor.buffer_width;
                    z = this.editor.canvas.height;
                    s = this.editor.viewXtoPageX(this.editor.drag_start_x) - this.editor.drag_start_aspect.x;
                    m = this.editor.viewYtoPageY(this.editor.drag_start_y) - this.editor.drag_start_aspect.y;
                    p = u.rotation * Math.PI / 180;
                    B = Math.cos(p) * s - Math.sin(p) * m;
                    d = Math.sin(p) * s + Math.cos(p) * m;
                    i = this.editor.viewXtoPageX(i) - this.editor.drag_start_aspect.x;
                    g = this.editor.viewYtoPageY(g) - this.editor.drag_start_aspect.y;
                    p = u.rotation * Math.PI / 180;
                    e = Math.cos(p) * i - Math.sin(p) * g;
                    t = Math.sin(p) * i + Math.cos(p) * g;
                    u.height = this.editor.grid._kw198(Math.max(this.editor.page.min_dimension, this.editor.drag_start_aspect.height * t / d));
                    _kw196.fix(u, this.editor.page);
                    if (u._kw72 != null) {
                        u._kw72()
                    }
                    return this.editor.refresh()
                }
                break;
            case "move_crop":
                j = this.editor.buffer_width;
                z = this.editor.canvas.height;
                s = this.editor.viewXtoPageX(this.editor.drag_start_x) - this.editor.drag_start_aspect.x;
                m = this.editor.viewYtoPageY(this.editor.drag_start_y) - this.editor.drag_start_aspect.y;
                p = u.rotation * Math.PI / 180;
                B = Math.cos(p) * s - Math.sin(p) * m;
                d = Math.sin(p) * s + Math.cos(p) * m;
                i = this.editor.viewXtoPageX(i) - this.editor.drag_start_aspect.x;
                g = this.editor.viewYtoPageY(g) - this.editor.drag_start_aspect.y;
                p = u.rotation * Math.PI / 180;
                e = Math.cos(p) * i - Math.sin(p) * g;
                t = Math.sin(p) * i + Math.cos(p) * g;
                C = u.orientationFix();
                e *= C.x;
                t *= C.y;
                B *= C.x;
                d *= C.y;
                q = u.width * this.editor.view_ratio;
                A = u.height * this.editor.view_ratio;
                this.editor.drag_crop_dx = (e - B) * this.editor.view_ratio;
                this.editor.drag_crop_dy = (t - d) * this.editor.view_ratio;
                if (u.can_move_crop) {
                    u.cropx = Math.max(0, Math.min(1 - u.cropw, this.editor.drag_start_aspect.cropx + (B - e) / q));
                    u.cropy = Math.max(0, Math.min(1 - u.croph, this.editor.drag_start_aspect.cropy + (d - t) / A));
                    u._kw72()
                }
                return this.editor.refresh()
        }
    };
    a.prototype._kw71 = function (b, d) {
        var c;
        if (b === 0) {
            if (d === 0) {
                return 0
            }
            if (d > 0) {
                return 90
            }
            return 270
        } else {
            c = d / b;
            if (b > 0) {
                return (Math.atan(c) / Math.PI * 180) | 0
            }
            return 180 + (Math.atan(c) / Math.PI * 180) | 0
        }
    };
    a.prototype.initDrag = function (b, d, c) {
        if (c.type !== "foreground" && (this._kw203(c, b, d, -1, -1) || this._kw203(c, b, d, 1, 1)) && c.canResize()) {
            this.editor._kw73(b, d, "resize");
            return true
        } else {
            if (c.can_move_crop && this._kw203(c, b, d, 0, 0.5)) {
                this.editor._kw73(b, d, "move_crop");
                return true
            } else {
                if (c.type !== "foreground" && (this._kw203(c, b, d, 1, -1) || this._kw203(c, b, d, -1, 1)) && c.canRotate()) {
                    this.editor._kw73(b, d, "rotate");
                    return true
                } else {
                    if (c.canChangeRatio() && (this._kw203(c, b, d, 0, 1) || this._kw203(c, b, d, 0, -1)) && c.canResize()) {
                        this.editor._kw73(b, d, "resize_vertical");
                        return true
                    } else {
                        if (c.canChangeRatio() && (this._kw203(c, b, d, 1, 0) || this._kw203(c, b, d, -1, 0)) && c.canResize()) {
                            this.editor._kw73(b, d, "resize_horizontal");
                            return true
                        }
                    }
                }
            }
        }
        return false
    };
    a.prototype._kw73 = function (b, d, c) {
        this.dragging = true;
        this.dragged = false;
        this.drag_mode = c;
        this.drag_start_x = b;
        this.drag_start_y = d;
        if (this.selected) {
            this.drag_rotation = this.selected.rotation;
            this.drag_pos_x = this.selected.x;
            this.drag_pos_y = this.selected.y;
            this.drag_start_aspect = this.selected.clone()
        }
        return this.page._kw74()
    };
    a.prototype.createMoveGuides = function (b) {
        return null
    };
    return a
})();
this.TransformTools2 = (function () {
    function a(b) {
        this.editor = b;
        _kw33.image_move_crop = _kw33.createImage(KWP_CONF.static_serv + "img/creator/move_crop.png");
        this.color = KWP_CONF.colors.main
    }
    a.prototype.drawTools = function (c, b) {
        if (c.type !== "foreground" && (c.type !== "photo" || !c.background)) {
            if (c.canRotate()) {
                this._kw66(b, c, 1, -1, "round", -0.75 * Math.PI);
                this._kw66(b, c, -1, 1, "round", 1.25 * Math.PI / 4)
            }
            if (c.canResize()) {
                this._kw66(b, c, -1, -1, "square", -Math.PI / 4);
                this._kw66(b, c, 1, 1, "square", -Math.PI / 4);
                if (c.canChangeRatio()) {
                    this._kw66(b, c, 0, -1, "square");
                    this._kw66(b, c, 0, 1, "square");
                    this._kw66(b, c, 1, 0, "square", Math.PI / 2);
                    this._kw66(b, c, -1, 0, "square", Math.PI / 2)
                }
            }
        }
        if (c.can_move_crop) {
            if (this.editor.dragging && this.editor.drag_mode === "move_crop") {
                return this._kw66(b, c, 0, 0.5, _kw33.image_move_crop, this.editor.drag_crop_dx, this.editor.drag_crop_dy)
            } else {
                return this._kw66(b, c, 0, 0.5, _kw33.image_move_crop)
            }
        }
    };
    a.prototype._kw66 = function (h, g, e, b, d, f) {
        var i;
        if (e == null) {
            e = 0
        }
        if (b == null) {
            b = 0
        }
        if (f == null) {
            f = 0
        }
        switch (d) {
            case "square":
                i = this._kw151(g, e, b, true);
                h.save();
                h.translate(i[0], i[1]);
                h.scale(i[2], i[2]);
                h.rotate(-g.rotation * Math.PI / 180);
                h.beginPath();
                h.rect(-0.5, -0.5, 1, 1);
                h.fillStyle = this.color;
                h.strokeStyle = "#FFF";
                h.lineWidth = 1 / i[2];
                h.shadowBlur = 4;
                h.shadowColor = "#000";
                h.shadowOpacity = 1;
                h.fill();
                h.shadowOpacity = 0;
                h.shadowBlur = 0;
                h.stroke();
                h.rotate(f);
                h.beginPath();
                h.shadowBlur = 4;
                h.shadowColor = "#000";
                h.shadowOpacity = 1;
                h.moveTo(-0.5, -1);
                h.lineTo(0.5, -1);
                h.lineTo(0, -1.5);
                h.closePath();
                h.fill();
                h.shadowOpacity = 0;
                h.shadowBlur = 0;
                h.stroke();
                h.beginPath();
                h.shadowBlur = 4;
                h.shadowColor = "#000";
                h.shadowOpacity = 1;
                h.moveTo(-0.5, 1);
                h.lineTo(0.5, 1);
                h.lineTo(0, 1.5);
                h.closePath();
                h.fill();
                h.shadowOpacity = 0;
                h.shadowBlur = 0;
                h.stroke();
                return h.restore();
            case "round":
                i = this._kw151(g, e, b, true);
                h.save();
                h.translate(i[0], i[1]);
                h.scale(i[2], i[2]);
                h.rotate(-g.rotation * Math.PI / 180 + f);
                h.beginPath();
                h.arc(0, 0, 0.5, 0, Math.PI * 2, true);
                h.fillStyle = this.color;
                h.strokeStyle = "#FFF";
                h.lineWidth = 1 / i[2];
                h.shadowBlur = 4;
                h.shadowColor = "#000";
                h.shadowOpacity = 1;
                h.fill();
                h.shadowOpacity = 0;
                h.shadowBlur = 0;
                h.stroke();
                h.beginPath();
                h.shadowBlur = 2;
                h.shadowColor = "#000";
                h.shadowOpacity = 1;
                h.arc(0, 0, 1, 0, Math.PI, false);
                h.lineWidth = 5 / i[2];
                h.strokeStyle = "#FFF";
                h.stroke();
                h.lineWidth = 1 / i[2];
                h.strokeStyle = "#FFF";
                h.beginPath();
                h.shadowBlur = 4;
                h.shadowColor = "#000";
                h.shadowOpacity = 1;
                h.moveTo(0.5, 0);
                h.lineTo(1.5, 0);
                h.lineTo(1, -0.5);
                h.closePath();
                h.fill();
                h.shadowOpacity = 0;
                h.shadowBlur = 0;
                h.stroke();
                h.beginPath();
                h.arc(0, 0, 1, -0.1, Math.PI, false);
                h.strokeStyle = this.color;
                h.lineWidth = 3 / i[2];
                h.stroke();
                return h.restore();
            default:
                if (d.complete) {
                    i = this._kw151(g, e, b, true, 32, 16);
                    h.save();
                    h.translate(i[0], i[1]);
                    h.scale(i[2] / 32, i[2] / 32);
                    h.rotate(-g.rotation * Math.PI / 180);
                    h.drawImage(d, -d.width / 2, -d.height / 2);
                    return h.restore()
                }
        }
    };
    a.prototype._kw151 = function (b, l, j, g, c, h) {
        var i, d, k, f, e;
        if (g == null) {
            g = false
        }
        if (c == null) {
            c = 12
        }
        if (h == null) {
            h = 6
        }
        i = Math.cos(-b.rotation * Math.PI / 180);
        d = Math.sin(-b.rotation * Math.PI / 180);
        k = Math.min(c, Math.max(h, Math.sqrt(b.width * b.width + b.height * b.height) * this.editor.view_ratio / 8));
        if (g) {
            f = this.editor.buffer_width / 2 + b.x * this.editor.view_ratio + 0.5 * this.editor.view_ratio * (i * l * b.width - d * j * b.height);
            e = this.editor.canvas.height / 2 + b.y * this.editor.view_ratio + 0.5 * this.editor.view_ratio * (d * l * b.width + i * j * b.height);
            f = Math.max(k / 2, Math.min(this.editor.buffer_width - k / 2, f));
            e = Math.max(k / 2, Math.min(this.editor.canvas.height - k / 2, e))
        } else {
            f = this.editor.buffer_width / 2 + b.x * this.editor.view_ratio + 0.5 * this.editor.view_ratio * (i * l * b.width - d * j * b.height);
            e = this.editor.canvas.height / 2 + b.y * this.editor.view_ratio + 0.5 * this.editor.view_ratio * (d * l * b.width + i * j * b.height);
            f = Math.max(k / 2, Math.min(this.editor.buffer_width - k / 2, f));
            e = Math.max(k / 2, Math.min(this.editor.canvas.height - k / 2, e));
            if (this.editor.view.crop) {
                f = f - this.editor.view.crop.x * this.editor.buffer_width
            }
        }
        return [f, e, k]
    };
    a.prototype._kw203 = function (f, b, h, e, d) {
        var g;
        if (d === 0.5) {
            g = this._kw151(f, e, d, false, 32, 16)
        } else {
            g = this._kw151(f, e, d);
            g[2] *= 2
        }
        return Math.abs(b - g[0]) < g[2] / 2 && Math.abs(h - g[1]) < g[2] / 2
    };
    a.prototype.resize = function (l, k, z, c) {
        var B, C, q, p, m, A, j, b, t, f, i, u, g, e, v, D, s, d, E, h, w;
        v = this.editor.viewXtoPageX(this.editor.drag_start_x) - this.editor.drag_start_aspect.x;
        s = this.editor.viewYtoPageY(this.editor.drag_start_y) - this.editor.drag_start_aspect.y;
        u = z.rotation * Math.PI / 180;
        D = Math.cos(u) * v - Math.sin(u) * s;
        d = Math.sin(u) * v + Math.cos(u) * s;
        l = this.editor.viewXtoPageX(l) - this.editor.drag_start_aspect.x;
        k = this.editor.viewYtoPageY(k) - this.editor.drag_start_aspect.y;
        h = Math.cos(u) * l - Math.sin(u) * k;
        w = Math.sin(u) * l + Math.cos(u) * k;
        g = 1 + (h / D - 1) / 2;
        e = 1 + (w / d - 1) / 2;
        p = 0;
        m = 0;
        q = 0;
        C = 0;
        f = z.page;
        this.editor.guiding = {
            x: null,
            y: null
        };
        B = function (y) {
            var x, r;
            if (!y.canChangeRatio() || (window.shiftKeyPressed && (y.source != null))) {
                r = Math.sqrt(y.width * y.height);
                x = Math.sqrt(y.source.width / y.source.height);
                y.width = r * x;
                return y.height = r / x
            }
        };
        E = j = 0;
        if (c.indexOf("n") >= 0) {
            E = -1
        } else {
            if (c.indexOf("s") >= 0) {
                E = 1
            }
        } if (c.indexOf("w") >= 0) {
            j = -1
        } else {
            if (c.indexOf("e") >= 0) {
                j = 1
            }
        }
        switch (j) {
            case -1:
                t = this.editor.drag_start_aspect.x + this.editor.drag_start_aspect.width / 2 - (-f.width / 2 - f.spec.bleed.left);
                z.width = Math.min(Math.max(10, this.editor.page.min_dimension, this.editor.drag_start_aspect.width * g), t);
                B(z);
                i = this.editor.drag_start_aspect.x + this.editor.drag_start_aspect.width / 2 - z.width;
                A = this.getXGuide(z, i);
                if (A != null) {
                    z.width = Math.max(10, -(A.position - (this.editor.drag_start_aspect.x + this.editor.drag_start_aspect.width / 2)));
                    this.editor.guiding.x = A
                }
                break;
            case 1:
                t = (f.width / 2 + f.spec.bleed.right) - (this.editor.drag_start_aspect.x - this.editor.drag_start_aspect.width / 2);
                z.width = Math.min(Math.max(10, this.editor.page.min_dimension, this.editor.drag_start_aspect.width * g), t);
                B(z);
                i = (this.editor.drag_start_aspect.x - this.editor.drag_start_aspect.width / 2) + z.width;
                A = this.getXGuide(z, i);
                if (A != null) {
                    z.width = Math.max(10, A.position - (this.editor.drag_start_aspect.x - this.editor.drag_start_aspect.width / 2));
                    this.editor.guiding.x = A
                }
        }
        switch (E) {
            case 1:
                b = (f.height / 2 + f.spec.bleed.bottom) - (this.editor.drag_start_aspect.y - this.editor.drag_start_aspect.height / 2);
                z.height = Math.min(Math.max(10, this.editor.page.min_dimension, this.editor.drag_start_aspect.height * e), b);
                B(z);
                i = (this.editor.drag_start_aspect.y - this.editor.drag_start_aspect.height / 2) + z.height;
                A = this.getYGuide(z, i);
                if (A != null) {
                    z.height = Math.max(10, A.position - (this.editor.drag_start_aspect.y - this.editor.drag_start_aspect.height / 2));
                    this.editor.guiding.y = A
                }
                break;
            case -1:
                b = (this.editor.drag_start_aspect.y + this.editor.drag_start_aspect.height / 2) - (-f.height / 2 - f.spec.bleed.bottom);
                z.height = Math.min(Math.max(10, this.editor.page.min_dimension, this.editor.drag_start_aspect.height * e), b);
                B(z);
                i = (this.editor.drag_start_aspect.y + this.editor.drag_start_aspect.height / 2) - z.height;
                A = this.getYGuide(z, i);
                if (A != null) {
                    z.height = Math.max(10, -(A.position - (this.editor.drag_start_aspect.y + this.editor.drag_start_aspect.height / 2)));
                    this.editor.guiding.y = A
                }
        }
        q = j * (z.width - this.editor.drag_start_aspect.width);
        C = E * (z.height - this.editor.drag_start_aspect.height);
        p += q / 2 * Math.cos(-u);
        m += q / 2 * Math.sin(-u);
        m += C / 2 * Math.cos(-u);
        p -= C / 2 * Math.sin(-u);
        z.x = this.editor.drag_start_aspect.x + p;
        z.y = this.editor.drag_start_aspect.y + m;
        _kw196.fix(z, this.editor.page, true);
        if (z._kw72 != null) {
            z.cropx = this.editor.drag_start_aspect.cropx;
            z.cropy = this.editor.drag_start_aspect.cropy;
            z.cropw = this.editor.drag_start_aspect.cropw;
            z.croph = this.editor.drag_start_aspect.croph;
            z._kw72()
        }
        return this.editor.refresh()
    };
    a.prototype.getXGuide = function (i, j) {
        var e, c, d, h, b, f;
        if (i.type === "photo" && (this.editor.guides != null)) {
            d = 10000;
            c = null;
            f = this.editor.guides.x;
            for (h = 0, b = f.length; h < b; h++) {
                e = f[h];
                if (Math.abs(e.position - j) < d && Math.abs(e.position - j) < e.threshold) {
                    d = Math.abs(e.position - j);
                    c = e
                } else {
                    if (Math.abs(e.position - j) === d && Math.abs(e.position - j) < e.threshold && Math.abs(e.source.y - i.y) < Math.abs(c.source.y - i.y)) {
                        d = Math.abs(e.position - j);
                        c = e
                    }
                }
            }
            if ((c != null) && d < c.threshold) {
                return c
            }
        }
        return null
    };
    a.prototype.getYGuide = function (i, j) {
        var e, c, d, h, b, f;
        if (i.type === "photo" && (this.editor.guides != null)) {
            d = 10000;
            c = null;
            f = this.editor.guides.y;
            for (h = 0, b = f.length; h < b; h++) {
                e = f[h];
                if (Math.abs(e.position - j) < d && Math.abs(e.position - j) < e.threshold) {
                    d = Math.abs(e.position - j);
                    c = e
                } else {
                    if (Math.abs(e.position - j) === d && Math.abs(e.position - j) < e.threshold && Math.abs(e.source.y - i.y) < Math.abs(c.source.y - i.y)) {
                        d = Math.abs(e.position - j);
                        c = e
                    }
                }
            }
            if ((c != null) && d < c.threshold) {
                return c
            }
        }
        return null
    };
    a.prototype.handleDrag = function (g, f, t) {
        var u, v, b, k, j, B, z, p, m, q, A, l, d, c, i, e, s;
        switch (this.editor.drag_mode) {
            case "rotate":
                q = this.editor.viewXtoPageX(this.editor.drag_start_x);
                l = this.editor.viewYtoPageY(this.editor.drag_start_y);
                k = this.editor.viewXtoPageX(g);
                j = this.editor.viewYtoPageY(f);
                b = this._kw71(q - t.x, l - t.y);
                u = this._kw71(k - t.x, j - t.y);
                t.rotation = this.editor.drag_rotation - u + b;
                t.rotation = (t.rotation + 360) % 360;
                c = 3;
                if (Math.abs(t.rotation - 90) < c) {
                    t.rotation = 90
                }
                if (Math.abs(t.rotation - 180) < c) {
                    t.rotation = 180
                }
                if (Math.abs(t.rotation - 270) < c) {
                    t.rotation = 270
                }
                if (Math.abs(t.rotation - 360) < c) {
                    t.rotation = 0
                }
                if (t.rotation < c) {
                    t.rotation = 0
                }
                return this.editor.refresh();
            case "resize_nw":
                return this.resize(g, f, t, "nw");
            case "resize_ne":
                return this.resize(g, f, t, "ne");
            case "resize_sw":
                return this.resize(g, f, t, "sw");
            case "resize_se":
                return this.resize(g, f, t, "se");
            case "resize_w":
                return this.resize(g, f, t, "w");
            case "resize_e":
                return this.resize(g, f, t, "e");
            case "resize_n":
                return this.resize(g, f, t, "n");
            case "resize_s":
                return this.resize(g, f, t, "s");
            case "move_crop":
                i = this.editor.buffer_width;
                v = this.editor.canvas.height;
                q = this.editor.viewXtoPageX(this.editor.drag_start_x) - this.editor.drag_start_aspect.x;
                l = this.editor.viewYtoPageY(this.editor.drag_start_y) - this.editor.drag_start_aspect.y;
                m = t.rotation * Math.PI / 180;
                A = Math.cos(m) * q - Math.sin(m) * l;
                d = Math.sin(m) * q + Math.cos(m) * l;
                g = this.editor.viewXtoPageX(g) - this.editor.drag_start_aspect.x;
                f = this.editor.viewYtoPageY(f) - this.editor.drag_start_aspect.y;
                m = t.rotation * Math.PI / 180;
                e = Math.cos(m) * g - Math.sin(m) * f;
                s = Math.sin(m) * g + Math.cos(m) * f;
                B = t.orientationFix();
                e *= B.x;
                s *= B.y;
                A *= B.x;
                d *= B.y;
                p = t.width * this.editor.view_ratio;
                z = t.height * this.editor.view_ratio;
                this.editor.drag_crop_dx = (e - A) * this.editor.view_ratio;
                this.editor.drag_crop_dy = (s - d) * this.editor.view_ratio;
                if (t.can_move_crop) {
                    t.cropx = Math.max(0, Math.min(1 - t.cropw, this.editor.drag_start_aspect.cropx + (A - e) / p));
                    t.cropy = Math.max(0, Math.min(1 - t.croph, this.editor.drag_start_aspect.cropy + (d - s) / z));
                    t._kw72()
                }
                return this.editor.refresh()
        }
    };
    a.prototype._kw71 = function (b, d) {
        var c;
        if (b === 0) {
            if (d === 0) {
                return 0
            }
            if (d > 0) {
                return 90
            }
            return 270
        } else {
            c = d / b;
            if (b > 0) {
                return (Math.atan(c) / Math.PI * 180) | 0
            }
            return 180 + (Math.atan(c) / Math.PI * 180) | 0
        }
    };
    a.prototype.initDrag = function (b, d, c) {
        if (c.can_move_crop && this._kw203(c, b, d, 0, 0.5)) {
            this.editor._kw73(b, d, "move_crop");
            return true
        } else {
            if (c.type !== "foreground" && (this._kw203(c, b, d, 1, -1) || this._kw203(c, b, d, -1, 1)) && c.canRotate()) {
                this.editor._kw73(b, d, "rotate");
                return true
            } else {
                if (this._kw203(c, b, d, -1, -1) && c.canResize()) {
                    this._kw73(b, d, "resize_nw");
                    return true
                } else {
                    if (this._kw203(c, b, d, 1, 1) && c.canResize()) {
                        this._kw73(b, d, "resize_se");
                        return true
                    } else {
                        if (c.canChangeRatio() && this._kw203(c, b, d, 0, -1) && c.canResize()) {
                            this._kw73(b, d, "resize_n");
                            return true
                        } else {
                            if (c.canChangeRatio() && this._kw203(c, b, d, 0, 1) && c.canResize()) {
                                this._kw73(b, d, "resize_s");
                                return true
                            } else {
                                if (c.canChangeRatio() && this._kw203(c, b, d, -1, 0) && c.canResize()) {
                                    this._kw73(b, d, "resize_w");
                                    return true
                                } else {
                                    if (c.canChangeRatio() && this._kw203(c, b, d, 1, 0) && c.canResize()) {
                                        this._kw73(b, d, "resize_e");
                                        return true
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        return false
    };
    a.prototype._kw73 = function (b, d, c) {
        this.editor._kw73(b, d, c);
        if (c.indexOf("resize") >= 0) {
            return this.editor.guides = this.createSizeGuides(this.editor.selected)
        }
    };
    a.prototype.createMoveGuides = function (c) {
        var h, m, p, d, e, k, b, j, i, f, l, g;
        if (!this.editor.grid.active) {
            return null
        }
        j = {
            x: [],
            y: []
        };
        k = c.page;
        i = Math.min(k.width, k.height) / 100;
        if (k.creation.product instanceof Book) {
            j.x.push({
                value: k.width / 4,
                position: k.width / 4,
                source: k,
                threshold: i
            });
            j.x.push({
                value: -k.width / 4,
                position: -k.width / 4,
                source: k,
                threshold: i
            })
        } else {
            j.x.push({
                value: 0,
                position: 0,
                source: k,
                threshold: i
            })
        }
        j.y.push({
            value: 0,
            position: 0,
            source: k,
            threshold: i
        });
        b = (c.rotation + 360) % 180;
        if (b === 0) {
            e = c.width;
            d = c.height
        } else {
            if (b === 90) {
                e = c.height;
                d = c.width
            } else {
                return j
            }
        } if (c.type !== "photo") {
            return j
        }
        if (k.creation.product instanceof Book) {
            j.x.push({
                value: -e / 2,
                position: 0,
                source: k,
                threshold: i * 2
            });
            j.x.push({
                value: e / 2,
                position: 0,
                source: k,
                threshold: i * 2
            })
        }
        j.x.push({
            value: -k.width / 2 + 3 + e / 2,
            position: -k.width / 2 + 3,
            source: k,
            threshold: 3
        });
        j.x.push({
            value: k.width / 2 - 3 - e / 2,
            position: k.width / 2 - 3,
            source: k,
            threshold: 3
        });
        j.x.push({
            value: -k.width / 2 - k.spec.bleed.left + e / 2,
            position: -k.width / 2 - k.spec.bleed.left,
            source: k,
            threshold: k.spec.bleed.left
        });
        j.x.push({
            value: k.width / 2 + k.spec.bleed.right - e / 2,
            position: k.width / 2 + k.spec.bleed.right,
            source: k,
            threshold: k.spec.bleed.right
        });
        j.y.push({
            value: -k.height / 2 + 3 + d / 2,
            position: -k.height / 2 + 3,
            source: k,
            threshold: 3
        });
        j.y.push({
            value: k.height / 2 - 3 - d / 2,
            position: k.height / 2 - 3,
            source: k,
            threshold: 3
        });
        j.y.push({
            value: -k.height / 2 - k.spec.bleed.top + d / 2,
            position: -k.height / 2 - k.spec.bleed.top,
            source: k,
            threshold: k.spec.bleed.top
        });
        j.y.push({
            value: k.height / 2 + k.spec.bleed.bottom - d / 2,
            position: k.height / 2 + k.spec.bleed.bottom,
            source: k,
            threshold: k.spec.bleed.bottom
        });
        g = k.objects;
        for (f = 0, l = g.length; f < l; f++) {
            h = g[f];
            if (c !== h && h.type === "photo") {
                b = (h.rotation + 360) % 180;
                if (b === 0) {
                    p = h.width;
                    m = h.height
                } else {
                    if (b === 90) {
                        p = h.height;
                        m = h.width
                    } else {
                        continue
                    }
                }
                j.x.push({
                    value: h.x - p / 2 + e / 2,
                    position: h.x - p / 2,
                    source: h,
                    threshold: i
                });
                j.x.push({
                    value: h.x + p / 2 - e / 2,
                    position: h.x + p / 2,
                    source: h,
                    threshold: i
                });
                j.x.push({
                    value: h.x,
                    position: h.x,
                    source: h,
                    threshold: i
                });
                j.x.push({
                    value: h.x - p / 2 - e / 2,
                    position: h.x - p / 2,
                    source: h,
                    threshold: i
                });
                j.x.push({
                    value: h.x + p / 2 + e / 2,
                    position: h.x + p / 2,
                    source: h,
                    threshold: i
                });
                if (this.editor.grid.spacing > 0) {
                    j.x.push({
                        value: h.x - p / 2 - e / 2 - this.editor.grid.spacing,
                        position: h.x - p / 2 - this.editor.grid.spacing,
                        source: h,
                        threshold: this.editor.grid.spacing
                    });
                    j.x.push({
                        value: h.x + p / 2 + e / 2 + this.editor.grid.spacing,
                        position: h.x + p / 2 + this.editor.grid.spacing,
                        source: h,
                        threshold: this.editor.grid.spacing
                    })
                }
                j.y.push({
                    value: h.y - m / 2 + d / 2,
                    position: h.y - m / 2,
                    source: h,
                    threshold: i
                });
                j.y.push({
                    value: h.y + m / 2 - d / 2,
                    position: h.y + m / 2,
                    source: h,
                    threshold: i
                });
                j.y.push({
                    value: h.y,
                    position: h.y,
                    source: h,
                    threshold: i
                });
                j.y.push({
                    value: h.y - m / 2 - d / 2,
                    position: h.y - m / 2,
                    source: h,
                    threshold: i
                });
                j.y.push({
                    value: h.y + m / 2 + d / 2,
                    position: h.y + m / 2,
                    source: h,
                    threshold: i
                });
                if (this.editor.grid.spacing > 0) {
                    j.y.push({
                        value: h.y - m / 2 - d / 2 - this.editor.grid.spacing,
                        position: h.y - m / 2 - this.editor.grid.spacing,
                        source: h,
                        threshold: this.editor.grid.spacing
                    });
                    j.y.push({
                        value: h.y + m / 2 + d / 2 + this.editor.grid.spacing,
                        position: h.y + m / 2 + this.editor.grid.spacing,
                        source: h,
                        threshold: this.editor.grid.spacing
                    })
                }
            }
        }
        return j
    };
    a.prototype.createSizeGuides = function (c) {
        var h, m, p, d, e, k, b, j, i, f, l, g;
        if (c.type !== "photo" || !this.editor.grid.active) {
            return null
        }
        j = {
            x: [],
            y: []
        };
        k = c.page;
        i = Math.min(k.width, k.height) / 100;
        b = (c.rotation + 360) % 180;
        if (b === 0) {
            e = c.width;
            d = c.height
        } else {
            if (b === 90) {
                e = c.height;
                d = c.width
            } else {
                return j
            }
        } if (k.creation.product instanceof Book) {
            j.x.push({
                value: k.width / 4,
                position: k.width / 4,
                source: k,
                threshold: i
            });
            j.x.push({
                value: -k.width / 4,
                position: -k.width / 4,
                source: k,
                threshold: i
            });
            j.x.push({
                value: 0,
                position: 0,
                source: k,
                threshold: _kw196.central_margin
            })
        } else {
            j.x.push({
                value: 0,
                position: 0,
                source: k,
                threshold: i
            })
        }
        j.x.push({
            value: -k.width / 2 + 3,
            position: -k.width / 2 + 3,
            source: k,
            threshold: 3
        });
        j.x.push({
            value: k.width / 2 - 3,
            position: k.width / 2 - 3,
            source: k,
            threshold: 3
        });
        j.x.push({
            value: -k.width / 2 - k.spec.bleed.left,
            position: -k.width / 2 - k.spec.bleed.left,
            source: k,
            threshold: k.spec.bleed.left
        });
        j.x.push({
            value: k.width / 2 + k.spec.bleed.right,
            position: k.width / 2 + k.spec.bleed.right,
            source: k,
            threshold: k.spec.bleed.right
        });
        j.y.push({
            value: 0,
            position: 0,
            source: k,
            threshold: i
        });
        j.y.push({
            value: -k.height / 2 + 3,
            position: -k.height / 2 + 3,
            source: k,
            threshold: 3
        });
        j.y.push({
            value: k.height / 2 - 3,
            position: k.height / 2 - 3,
            source: k,
            threshold: 3
        });
        j.y.push({
            value: -k.height / 2 - k.spec.bleed.top,
            position: -k.height / 2 - k.spec.bleed.top,
            source: k,
            threshold: k.spec.bleed.top
        });
        j.y.push({
            value: k.height / 2 + k.spec.bleed.bottom,
            position: k.height / 2 + k.spec.bleed.bottom,
            source: k,
            threshold: k.spec.bleed.bottom
        });
        g = k.objects;
        for (f = 0, l = g.length; f < l; f++) {
            h = g[f];
            if (c !== h && h.type === "photo") {
                b = (h.rotation + 360) % 180;
                if (b === 0) {
                    p = h.width;
                    m = h.height
                } else {
                    if (b === 90) {
                        p = h.height;
                        m = h.width
                    } else {
                        continue
                    }
                }
                j.x.push({
                    value: h.x - p / 2 + e / 2,
                    position: h.x - p / 2,
                    source: h,
                    threshold: i
                });
                j.x.push({
                    value: h.x + p / 2 - e / 2,
                    position: h.x + p / 2,
                    source: h,
                    threshold: i
                });
                j.x.push({
                    value: h.x,
                    position: h.x,
                    source: h,
                    threshold: i
                });
                j.x.push({
                    value: h.x - p / 2 - e / 2,
                    position: h.x - p / 2,
                    source: h,
                    threshold: i
                });
                j.x.push({
                    value: h.x + p / 2 + e / 2,
                    position: h.x + p / 2,
                    source: h,
                    threshold: i
                });
                if (this.editor.grid.spacing > 0) {
                    j.x.push({
                        value: h.x - p / 2 - e / 2 - this.editor.grid.spacing,
                        position: h.x - p / 2 - this.editor.grid.spacing,
                        source: h,
                        threshold: this.editor.grid.spacing
                    });
                    j.x.push({
                        value: h.x + p / 2 + e / 2 + this.editor.grid.spacing,
                        position: h.x + p / 2 + this.editor.grid.spacing,
                        source: h,
                        threshold: this.editor.grid.spacing
                    })
                }
                j.y.push({
                    value: h.y - m / 2 + d / 2,
                    position: h.y - m / 2,
                    source: h,
                    threshold: i
                });
                j.y.push({
                    value: h.y + m / 2 - d / 2,
                    position: h.y + m / 2,
                    source: h,
                    threshold: i
                });
                j.y.push({
                    value: h.y,
                    position: h.y,
                    source: h,
                    threshold: i
                });
                j.y.push({
                    value: h.y - m / 2 - d / 2,
                    position: h.y - m / 2,
                    source: h,
                    threshold: i
                });
                j.y.push({
                    value: h.y + m / 2 + d / 2,
                    position: h.y + m / 2,
                    source: h,
                    threshold: i
                });
                if (this.editor.grid.spacing > 0) {
                    j.y.push({
                        value: h.y - m / 2 - d / 2 - this.editor.grid.spacing,
                        position: h.y - m / 2 - this.editor.grid.spacing,
                        source: h,
                        threshold: this.editor.grid.spacing
                    });
                    j.y.push({
                        value: h.y + m / 2 + d / 2 + this.editor.grid.spacing,
                        position: h.y + m / 2 + this.editor.grid.spacing,
                        source: h,
                        threshold: this.editor.grid.spacing
                    })
                }
            }
        }
        return j
    };
    return a
})();
this.Editor = (function () {
    function a(c, b) {
        this.manager = c;
        this.canvas = b;
        this.dragging = false;
        this.basic = false;
        this.transform_tools = new TransformTools2(this);
        _kw33.image_warning = _kw33.createImage(KWP_CONF.image_warning ? KWP_CONF.image_warning : KWP_CONF.static_serv + "img/creator/warning.png");
        jQuery(this.canvas).bind("mousewheel", (function (d) {
            return function (e, f) {
                return d.mousewheel(e, f)
            }
        })(this));
        this.tablet = document.ontouchstart !== void 0;
        this.touch_scale = 1;
        this.touch_rotate = 0;
        this.touch_ignoredrag = false;
        jQuery(this.canvas).hammer().on("touch", (function (d) {
            return function (e) {
                return d.touch(e)
            }
        })(this));
        jQuery(this.canvas).hammer().on("drag", (function (d) {
            return function (e) {
                return d.touchdrag(e)
            }
        })(this));
        jQuery(this.canvas).hammer().on("release", (function (d) {
            return function (e) {
                return d.touchrelease(e)
            }
        })(this));
        jQuery(this.canvas).hammer().on("transform", (function (d) {
            return function (e) {
                return d.touchtransform(e)
            }
        })(this));
        keypress.combo("delete", (function (d) {
            return function () {
                return d.keyPressedDelete()
            }
        })(this));
        keypress.combo("backspace", ((function (d) {
            return function () {
                return d.keyPressedDelete()
            }
        })(this)), true);
        keypress.combo("up", (function (d) {
            return function () {
                return d.keyMove(0, -1)
            }
        })(this));
        keypress.combo("down", (function (d) {
            return function () {
                return d.keyMove(0, 1)
            }
        })(this));
        keypress.combo("left", (function (d) {
            return function () {
                return d.keyMove(-1, 0)
            }
        })(this));
        keypress.combo("right", (function (d) {
            return function () {
                return d.keyMove(1, 0)
            }
        })(this));
        this.undo_list = [];
        this.redo_list = [];
        this.fullview = false;
        this.swapx = 0;
        this.swapy = 0;
        this.editable = true;
        this.grid = new Grid();
        this.buffer_width = this.canvas.width;
        this.must_refresh = false;
        setInterval(((function (d) {
            return function () {
                return d._kw200()
            }
        })(this)), 16)
    }
    a.prototype.copy = function () {
        if (this.selected) {
            return this.clipboard = this.selected.clone()
        } else {
            return this.clipboard = this.page.clone()
        }
    };
    a.prototype.cut = function () {
        if (this.selected) {
            return this.page._kw55((function (b) {
                return function () {
                    b.clipboard = b.selected.clone();
                    b.page._kw86(b.selected);
                    return b.selected = null
                }
            })(this))
        } else {
            this.clipboard = this.page.clone();
            return this.page._kw55((function (b) {
                return function () {
                    return b.page.clear()
                }
            })(this))
        }
    };
    a.prototype.paste = function () {
        if (this.clipboard) {
            if (this.clipboard instanceof Page) {
                return this.page._kw55((function (b) {
                    return function () {
                        b.page._kw90(b.clipboard);
                        b.page.updated();
                        if (b.page.creation) {
                            return b.page.creation._kw166()
                        }
                    }
                })(this))
            } else {
                if (this.clipboard instanceof _kw82) {
                    return this.page._kw55((function (b) {
                        return function () {
                            var e, d, j, h, f, c, g;
                            b.selected = b.page.add(b.clipboard.clone());
                            for (e = h = 0; h <= 20; e = ++h) {
                                d = false;
                                g = b.page.objects;
                                for (f = 0, c = g.length; f < c; f++) {
                                    j = g[f];
                                    if (j !== b.selected && Math.abs(j.x - b.selected.x) + Math.abs(j.y - b.selected.y) < 10) {
                                        d = true;
                                        b.selected.x += 10;
                                        b.selected.y += 10;
                                        if (b.selected.width >= b.page.width || b.selected.height >= b.page.height) {
                                            b.selected.width *= 0.5;
                                            b.selected.height *= 0.5
                                        }
                                    }
                                }
                                if (!d) {
                                    break
                                }
                            }
                            _kw196.fix(b.selected, b.page);
                            return b.page.updated()
                        }
                    })(this))
                }
            }
        }
    };
    a.prototype._kw200 = function () {
        if (this.must_refresh) {
            this.must_refresh = false;
            return this._kw130((function (b) {
                return function () {
                    return b.update()
                }
            })(this))
        }
    };
    a.prototype._kw201 = function (b) {
        var c;
        c = b.page;
        if (c !== this.page) {
            this.selected = null
        }
        if (this.page) {
            this.page._kw181()
        }
        this.page = c;
        this.page.editor = this;
        this.view = b;
        if (this.page.spec.type === "book_double_page") {
            this.page.overlay = new _kw133(this.page)
        }
        this.update();
        return setTimeout(((function (d) {
            return function () {
                var o, f, q, l, k, i, r, g, e, m, j, h;
                if (d.page.creation && !KWP_CONF.memory_saving_mode) {
                    q = null;
                    o = null;
                    m = d.page.creation.views;
                    for (l = 0, r = m.length; l < r; l++) {
                        f = m[l];
                        f.page.screenview_minsize = 0
                    }
                    j = d.page.creation.views;
                    for (k = 0, g = j.length; k < g; k++) {
                        f = j[k];
                        if (f === d.view) {
                            break
                        }
                        q = f
                    }
                    h = d.page.creation.views;
                    for (i = 0, e = h.length; i < e; i++) {
                        f = h[i];
                        if (f === d.view) {
                            o = d.view
                        } else {
                            if (o) {
                                o = f;
                                break
                            }
                        }
                    }
                    if (q) {
                        if ((!q.page.screenview) || q.page.screenview.width < 0.49 * d.canvas.width) {
                            q.page.screenview_up_to_date = false;
                            q.page.screenview_minsize = Math.max(d.canvas.width, d.canvas.height);
                            q.page._kw172(Math.max(d.canvas.width, d.canvas.height))
                        }
                    }
                    if (o && o !== d.view) {
                        if ((!o.page.screenview) || o.page.screenview.width < 0.49 * d.canvas.width) {
                            o.page.screenview_up_to_date = false;
                            o.page.screenview_minsize = Math.max(d.canvas.width, d.canvas.height);
                            return o.page._kw172(Math.max(d.canvas.width, d.canvas.height))
                        }
                    }
                }
            }
        })(this)), 1)
    };
    a.prototype.refresh = function () {
        return this.must_refresh = true
    };
    a.prototype.clear = function () {
        return this.page.clear()
    };
    a.prototype._kw130 = function (b) {
        if (window.requestAnimationFrame != null) {
            return window.requestAnimationFrame(b)
        } else {
            if (window.webkitRequestAnimationFrame != null) {
                return window.webkitRequestAnimationFrame(b)
            } else {
                if (window.mozRequestAnimationFrame != null) {
                    return window.mozRequestAnimationFrame(b)
                } else {
                    if (window.oRequestAnimationFrame != null) {
                        return window.oRequestAnimationFrame(b)
                    } else {
                        if (window.msRequestAnimationFrame != null) {
                            return window.msRequestAnimationFrame(b)
                        } else {
                            return setTimeout(b, 1000 / 60)
                        }
                    }
                }
            }
        }
    };
    a.prototype.touch = function (b) {
        if (!this.editable) {
            return
        }
        b.gesture.preventDefault();
        this.mousedown(b.gesture.touches[0]);
        if (this.selected) {
            this.touch_ignoredrag = false;
            this.touch_scale = 1;
            return this.touch_rotate = 0
        }
    };
    a.prototype.touchdrag = function (b) {
        if (!this.editable) {
            return
        }
        b.gesture.preventDefault();
        if (b.gesture.srcEvent != null) {
            window.shiftKeyPressed = b.gesture.srcEvent.shiftKey
        }
        if (!this.touch_ignoredrag) {
            return this.mousemove(b.gesture.touches[0])
        }
    };
    a.prototype.touchrelease = function (b) {
        if (!this.editable) {
            this._kw42(b);
            return
        }
        b.gesture.preventDefault();
        return this.mouseup(b.gesture.touches[0])
    };
    a.prototype.touchtransform = function (c) {
        var b, d;
        if (!this.editable) {
            return
        }
        c.gesture.preventDefault();
        if (this.selected) {
            this.touch_ignoredrag = true;
            d = c.gesture.scale / this.touch_scale;
            b = c.gesture.rotation - this.touch_rotate;
            this.selected.rotation -= b;
            this.selected.width *= d;
            this.selected.height *= d;
            this.touch_scale = c.gesture.scale;
            this.touch_rotate = c.gesture.rotation;
            return this.refresh()
        }
    };
    a.prototype._kw42 = function (d) {
        var g, f, b, h, e, c;
        d = d.gesture.touches[0];
        this.fix(d);
        b = d.offsetX;
        h = d.offsetY;
        f = this._kw43(b, h);
        for (e = 0, c = f.length; e < c; e++) {
            g = f[e];
            if (g.link != null) {
                this.manager._kw44(g.link);
                return
            }
        }
    };
    a.prototype.undo = function () {
        if (this.undo_list.length > 0) {
            this.redo_list.push(this.undo_list[this.undo_list.length - 1]);
            this.undo_list[this.undo_list.length - 1].undo();
            this.undo_list.splice(this.undo_list.length - 1, 1);
            return this.refresh()
        }
    };
    a.prototype.redo = function () {
        if (this.redo_list.length > 0) {
            this.undo_list.push(this.redo_list[this.redo_list.length - 1]);
            this.redo_list[this.redo_list.length - 1].redo();
            this.redo_list.splice(this.redo_list.length - 1, 1);
            return this.refresh()
        }
    };
    a.prototype._kw45 = function (b) {
        this.undo_list.push(b);
        if (this.undo_list.length > 10) {
            this.undo_list.splice(0, 1)
        }
        this.redo_list = [];
        return this.manager._kw46()
    };
    a.prototype._kw47 = function (d, f, b, h) {
        var g, c, e;
        if (!this.editable) {
            return
        }
        if (f) {
            g = this.page._kw48(b, h, "photo");
            if (g && !g.source && g.canChangePhoto()) {
                g.source = d;
                g._kw180();
                this.page.updated();
                return
            }
        } else {
            this.page._kw47(d, this.view);
            return
        }
        c = new _kw53(d);
        e = Math.min(this.page.width / d.width, this.page.height / d.height) / 4;
        c.width = e * d.width;
        c.height = e * d.height;
        this.page.add(c);
        this.selected = c;
        c.x = b;
        c.y = h;
        return this.refresh()
    };
    a.prototype.viewXtoPageX = function (b) {
        var c;
        if (this.view.crop) {
            c = this.canvas.width / this.view.crop.width;
            return (b + this.view.crop.x * c - c * 0.5) / this.view_ratio
        } else {
            return (b - this.canvas.width / 2) / this.view_ratio
        }
    };
    a.prototype.viewYtoPageY = function (c) {
        var b;
        if (this.view.crop) {
            b = this.canvas.height / this.view.crop.height;
            return (c + this.view.crop.y * b - b * 0.5) / this.view_ratio
        } else {
            return (c - this.canvas.height / 2) / this.view_ratio
        }
    };
    a.prototype.pageXtoViewX = function (c) {
        var d, b;
        if (this.view.crop) {
            d = this.canvas.width / this.view.crop.width;
            b = d / 2 - d * this.view.crop.x;
            return b + c * this.view_ratio
        } else {
            return this.canvas.width / 2 + c * this.view_ratio
        }
    };
    a.prototype.pageYtoViewY = function (d) {
        var c, b;
        if (this.view.crop) {
            c = this.canvas.height / this.view.crop.height;
            b = c / 2 - c * this.view.crop.y;
            return b + d * this.view_ratio
        } else {
            return this.canvas.height / 2 + d * this.view_ratio
        }
    };
    a.prototype.drop = function (c, f) {
        var d, g, e, b, h;
        if (f) {
            this.fix(f);
            b = this.viewXtoPageX(f.offsetX);
            h = this.viewYtoPageY(f.offsetY)
        }
        if (c.type === "photo") {
            if (this.dropping_photo) {
                this.dropping_photo = false;
                this.dragging = false;
                if (this.swap != null) {
                    this.page._kw86(this.swap);
                    this.swap = null
                }
                this.guides = null;
                this.guiding = null;
                this.page._kw76();
                this.page.updated()
            } else {
                this.page._kw55((function (i) {
                    return function () {
                        return i._kw47(c, f, b, h)
                    }
                })(this))
            }
        } else {
            if (c.type === "clipart") {
                d = new _kw56(c);
                e = Math.min(this.page.width / c.width, this.page.height / c.height) / 4;
                d.width = e * c.width;
                d.height = e * c.height;
                this.page._kw55((function (i) {
                    return function () {
                        i.page.add(d);
                        i.selected = d;
                        if (f) {
                            d.x = b;
                            return d.y = h
                        } else {
                            d.x = -i.page.width / 2;
                            d.y = 0;
                            d.width *= 0.5;
                            d.height *= 0.5;
                            d._kw52();
                            d.width *= 2;
                            d.height *= 2;
                            return d._kw54(i.view)
                        }
                    }
                })(this))
            } else {
                if (c.type === "pattern") {
                    g = new PagePattern(c);
                    e = Math.min(this.page.width / c.width, this.page.height / c.height) / 4;
                    g.width = e * c.width;
                    g.height = e * c.height;
                    this.page._kw55((function (i) {
                        return function () {
                            i.page.add(g);
                            i.selected = g;
                            if (f) {
                                g.x = b;
                                return g.y = h
                            } else {
                                g.x = -i.page.width / 2;
                                g.y = 0;
                                g.width *= 0.5;
                                g.height *= 0.5;
                                g._kw52();
                                g.width *= 2;
                                g.height *= 2;
                                return g._kw54(i.view)
                            }
                        }
                    })(this))
                }
            }
        }
        return this.refresh()
    };
    a.prototype.over = function (d, f) {
        var c, e, b, g;
        if (f) {
            this.fix(f);
            b = this.viewXtoPageX(f.offsetX);
            g = this.viewYtoPageY(f.offsetY)
        }
        if (f.offsetX < 0 || f.offsetX > this.canvas.width || f.offsetY < 0 || f.offsetY > this.canvas.height) {
            this.dragCancelled();
            return
        }
        if (this.dropping_photo) {
            this.mousemove(f)
        } else {
            if (d.type === "photo") {
                this.dropping_photo = true;
                this.page._kw74();
                c = new _kw53(d);
                c.checkOrientation(d);
                e = Math.min(this.page.width / d.owidth, this.page.height / d.oheight) / 4;
                c.width = e * d.owidth;
                c.height = e * d.oheight;
                this.page.add(c);
                this.selected = c;
                c.x = b;
                c.y = 0;
                c.x = -this.page.width / 2 - c.width / 2;
                c.width /= 2;
                c.height /= 2;
                this.drag_start_aspect = c.clone();
                c._kw52();
                c.width *= 2;
                c.height *= 2;
                c.x = b;
                c.y = g;
                this.drag_mode = "move";
                this.drag_start_x = f.offsetX;
                this.drag_start_y = f.offsetY;
                this.drag_pos_x = b;
                this.drag_pos_y = g;
                this.dragging = true;
                this.swap = null;
                this.guides = this.transform_tools.createMoveGuides(this.selected)
            }
        }
        return this.refresh()
    };
    a.prototype.dragCancelled = function (b, c) {
        if (this.dropping_photo) {
            this.dropping_photo = false;
            this.dragging = false;
            this.swap = null;
            return this.page.undoCancelled()
        }
    };
    a.prototype._kw58 = function () {
        var b, c;
        c = new _kw59();
        b = Math.min(this.page.width, this.page.height) / 4;
        c.width = b;
        c.height = b * 0.5;
        this.page._kw55((function (d) {
            return function () {
                d.page.add(c);
                c.setDefault();
                return c._kw54(d.view)
            }
        })(this));
        this.selected = c;
        this.manager._kw60(this.selected);
        return this.page.updated()
    };
    a.prototype.editPhoto = function () {
        var e, d, b, c;
        if (this.selected && this.selected.type === "photo") {
            this.manager._kw60(this.selected);
            return true
        } else {
            c = this.page.objects;
            for (d = 0, b = c.length; d < b; d++) {
                e = c[d];
                if (e.type === "photo" && (e.source != null)) {
                    this.selected = e;
                    this.manager._kw60(this.selected);
                    this.page.updated();
                    return true
                }
            }
            return false
        }
    };
    a.prototype._kw48 = function (p, m, q) {
        var g, b, e, k, h, w, v, s, u, A, j, t, d, c, z, l, f;
        if (q == null) {
            q = false
        }
        if (q) {
            l = this.page.objects;
            for (d = 0, z = l.length; d < z; d++) {
                v = l[d];
                if (v instanceof _kw59 && v.text === "" && v.canSelect()) {
                    j = this.pageXtoViewX(v.x);
                    t = this.pageYtoViewY(v.y);
                    A = v.width * this.view_ratio;
                    h = v.height * this.view_ratio;
                    g = p - j;
                    e = m - t;
                    s = v.rotation * Math.PI / 180;
                    b = Math.cos(s) * g - Math.sin(s) * e;
                    k = Math.sin(s) * g + Math.cos(s) * e;
                    if (b >= -A / 2 && b < A / 2 && k >= -h / 2 && k < h / 2) {
                        v.action({
                            action: "move_forward"
                        });
                        return v
                    }
                }
            }
        }
        u = null;
        if (this.page.objects.length > 0) {
            for (w = c = f = this.page.objects.length - 1; f <= 0 ? c <= 0 : c >= 0; w = f <= 0 ? ++c : --c) {
                v = this.page.objects[w];
                j = this.pageXtoViewX(v.x);
                t = this.pageYtoViewY(v.y);
                A = v.width * this.view_ratio;
                h = v.height * this.view_ratio;
                g = p - j;
                e = m - t;
                s = v.rotation * Math.PI / 180;
                b = Math.cos(s) * g - Math.sin(s) * e;
                k = Math.sin(s) * g + Math.cos(s) * e;
                if (b >= -A / 2 && b < A / 2 && k >= -h / 2 && k < h / 2 && v.canSelect()) {
                    if (v._kw61((b + A / 2) / A, (k + h / 2) / h)) {
                        u = v;
                        if (v.type !== "foreground") {
                            return u
                        }
                    }
                }
            }
        }
        return u
    };
    a.prototype._kw43 = function (u, t) {
        var h, p, f, e, g, m, d, c, s, l, b, q, j, k;
        s = [];
        if (this.page.objects.length > 0) {
            for (m = j = k = this.page.objects.length - 1; k <= 0 ? j <= 0 : j >= 0; m = k <= 0 ? ++j : --j) {
                d = this.page.objects[m];
                b = this.pageXtoViewX(d.x);
                q = this.pageYtoViewY(d.y);
                l = d.width * this.view_ratio;
                g = d.height * this.view_ratio;
                h = u - b;
                f = t - q;
                c = d.rotation * Math.PI / 180;
                p = Math.cos(c) * h - Math.sin(c) * f;
                e = Math.sin(c) * h + Math.cos(c) * f;
                if (p >= -l / 2 && p < l / 2 && e >= -g / 2 && e < g / 2) {
                    if (d._kw61((p + l / 2) / l, (e + g / 2) / g)) {
                        s.push(d)
                    }
                }
            }
        }
        return s
    };
    a.prototype._kw62 = function (e, b, d) {
        var c;
        c = this._kw48(b, d);
        if (c !== null && c.type === "photo") {
            if (e.type === "frame") {
                c._kw63(e)
            } else {
                if (e.type === "filter") {
                    c._kw64(e)
                }
            }
            this.selected = c;
            this.manager._kw60(this.selected);
            return this.refresh()
        }
    };
    a.prototype.update = function () {
        var W, J, c, Z, C, U, D, X, S, y, e, M, z, g, E, x, A, l, K, G, p, Y, H, F, V, T, R, Q, P, B, m, k, j, f, d, b, O, N, L, I, v, u, s, r, q;
        c = this.canvas;
        if (this.view.crop) {
            J = Math.round(this.canvas.width / this.view.crop.width);
            W = Math.round(this.canvas.height / this.view.crop.height);
            if (!this.buffer || this.buffer.width !== J || this.buffer.height !== W) {
                if (!this.buffer) {
                    this.buffer = KWC.createCanvas()
                }
                this.buffer.width = J;
                this.buffer.height = W
            }
            c = this.buffer
        } else {
            if (this.buffer) {
                this.buffer = null
            }
        }
        this.buffer_width = c.width;
        if (this.fullview) {
            this.view_ratio = Math.max(c.width / (this.page.width + this.page.spec.margin.left + this.page.spec.margin.right), c.height / (this.page.height + this.page.spec.margin.top + this.page.spec.margin.bottom));
            if (c.height !== ((this.page.height + this.page.spec.margin.top + this.page.spec.margin.bottom) * this.view_ratio) | 0) {
                c.height = ((this.page.height + this.page.spec.margin.top + this.page.spec.margin.bottom) * this.view_ratio) | 0
            }
        } else {
            this.view_ratio = Math.max(c.width / this.page.width, c.height / this.page.height)
        }
        F = c.width / 2;
        D = c.height / 2;
        Z = c.getContext("2d");
        new _kw150(this.page).render(c, this.view_ratio, this.fullview);
        if ((this.guides != null) && !this.basic && this.grid.active) {
            Z.strokeStyle = "rgba(128,128,128,.25)";
            Z.lineWidth = 0.5;
            if (this.guides.x != null) {
                Y = [];
                I = this.guides.x;
                for (T = 0, B = I.length; T < B; T++) {
                    M = I[T];
                    if (Y[Math.round(M.position)] == null) {
                        Y[Math.round(M.position)] = true;
                        Z.beginPath();
                        Z.moveTo(F + this.view_ratio * M.position, 0);
                        Z.lineTo(F + this.view_ratio * M.position, c.height);
                        Z.stroke()
                    }
                }
            }
            if (this.guides.y != null) {
                Y = [];
                v = this.guides.y;
                for (R = 0, m = v.length; R < m; R++) {
                    M = v[R];
                    if (Y[Math.round(M.position)] == null) {
                        Y[Math.round(M.position)] = true;
                        Z.beginPath();
                        Z.moveTo(0, D + this.view_ratio * M.position);
                        Z.lineTo(c.width, D + this.view_ratio * M.position);
                        Z.stroke()
                    }
                }
            }
            Z.lineWidth = 1
        }
        p = false;
        u = this.page.objects;
        for (Q = 0, k = u.length; Q < k; Q++) {
            M = u[Q];
            if (M.transition_start != null) {
                p = true
            }
        }
        if (this.view.properties.hide_left) {
            Z.fillStyle = "#DDD";
            Z.fillRect(0, 0, c.width / 2, c.height)
        } else {
            if (this.view.properties.hide_right) {
                Z.fillStyle = "#DDD";
                Z.fillRect(c.width / 2, 0, c.width / 2, c.height)
            }
        } if (!p && !this.dragging) {
            if (KWP_CONF.memory_saving_mode) {
                this.page._kw153()
            } else {
                if (this.page.screenview == null) {
                    this.page.screenview = KWC.createCanvas()
                }
                if (this.page.screenview.width !== c.width || this.page.screenview.height !== c.height) {
                    this.page.screenview.width = c.width;
                    this.page.screenview.height = c.height
                }
                this.page.screenview.getContext("2d").drawImage(c, 0, 0);
                this.page.screenview_up_to_date = true;
                this.page._kw153()
            }
        }
        Z = c.getContext("2d");
        H = this.page.width * this.view_ratio;
        U = this.page.height * this.view_ratio;
        F = c.width / 2;
        D = c.height / 2;
        if (this.selected && this.dragging) {
            M = this.drag_start_aspect;
            Z.save();
            Z.translate(F + (M.x * this.view_ratio), D + (M.y * this.view_ratio));
            g = M.width * this.view_ratio;
            z = M.height * this.view_ratio;
            Z.rotate(-M.rotation * Math.PI / 180);
            V = M.width * this.view_ratio;
            X = M.height * this.view_ratio;
            Z.strokeStyle = "rgba(0,0,0,.5)";
            Z.lineWidth = 2;
            Z.strokeRect(-V / 2, -X / 2, V, X);
            Z.restore()
        }
        x = false;
        s = this.page.objects;
        for (P = 0, j = s.length; P < j; P++) {
            M = s[P];
            if (M === this.selected) {
                x = true
            }
        }
        if (!x) {
            this.selected = null
        }
        r = this.page.objects;
        for (O = 0, f = r.length; O < f; O++) {
            M = r[O];
            if (M._kw202 && M._kw202()) {
                Z.save();
                Z.translate(F + (M.x * this.view_ratio), D + (M.y * this.view_ratio));
                Z.rotate(-M.rotation * Math.PI / 180);
                g = M.width * this.view_ratio;
                z = M.height * this.view_ratio;
                Z.translate(0, -z * 0.3);
                E = Math.min(z * 0.125 / 20, g / 300);
                if (E > 0 && E < 1) {
                    Z.scale(E, E)
                }
                Z.font = "12pt Verdana";
                Z.textAlign = "center";
                Z.fillStyle = "#FFF";
                Z.shadowBlur = 3;
                Z.shadowOpacity = 1;
                Z.shadowColor = "#000";
                G = KWC.translate("Low resolution").split(";");
                y = 0;
                for (S = N = 0, d = G.length; N < d; S = ++N) {
                    K = G[S];
                    e = Z.measureText(K);
                    l = e.width;
                    A = 12;
                    y = Math.max(l, y);
                    Z.fillText(K, 0, 0 + 18 * (-(G.length - 1) / 2 + S));
                    Z.fillText(K, 0, 0 + 18 * (-(G.length - 1) / 2 + S))
                }
                if (_kw33.image_warning.complete) {
                    Z.drawImage(_kw33.image_warning, -y / 2 - _kw33.image_warning.width * 1.2, -A / 2 - _kw33.image_warning.height / 2)
                }
                Z.restore()
            }
        }
        this.view.draw(c, this.view_ratio);
        if ((this.guiding != null) && !this.basic && this.grid.active) {
            if (this.guiding.x != null) {
                M = this.guiding.x.source;
                if (M instanceof Page) {
                    M = {
                        x: 0,
                        y: 0,
                        width: M.width,
                        height: M.height,
                        rotation: 0
                    }
                }
                Z.save();
                Z.translate(F + (M.x * this.view_ratio), D + (M.y * this.view_ratio));
                Z.rotate(-M.rotation * Math.PI / 180);
                V = M.width * this.view_ratio;
                X = M.height * this.view_ratio;
                Z.fillStyle = KWP_CONF.colors.secondary;
                Z.globalAlpha = 0.5;
                Z.fillRect(-V / 2, -X / 2, V, 6);
                Z.fillRect(-V / 2, X / 2 - 6, V, 6);
                Z.fillRect(-V / 2, -X / 2, 6, X);
                Z.fillRect(V / 2 - 6, -X / 2, 6, X);
                Z.restore();
                Z.save();
                Z.translate(F + (this.guiding.x.position * this.view_ratio), D);
                Z.fillStyle = "#FFF";
                Z.fillRect(-1, -this.page.height * this.view_ratio, 2, this.page.height * this.view_ratio * 2);
                Z.fillStyle = KWP_CONF.colors.secondary;
                Z.fillRect(-0.5, -this.page.height * this.view_ratio, 1, this.page.height * this.view_ratio * 2);
                Z.restore()
            }
            if (this.guiding.y != null) {
                M = this.guiding.y.source;
                if (M instanceof Page) {
                    M = {
                        x: 0,
                        y: 0,
                        width: M.width,
                        height: M.height,
                        rotation: 0
                    }
                }
                Z.save();
                Z.translate(F + (M.x * this.view_ratio), D + (M.y * this.view_ratio));
                Z.rotate(-M.rotation * Math.PI / 180);
                V = M.width * this.view_ratio;
                X = M.height * this.view_ratio;
                Z.fillStyle = KWP_CONF.colors.secondary;
                Z.globalAlpha = 0.5;
                Z.fillRect(-V / 2, -X / 2, V, 6);
                Z.fillRect(-V / 2, X / 2 - 6, V, 6);
                Z.fillRect(-V / 2, -X / 2, 6, X);
                Z.fillRect(V / 2 - 6, -X / 2, 6, X);
                Z.restore();
                Z.save();
                Z.translate(F, D + (this.guiding.y.position * this.view_ratio));
                Z.fillStyle = "#FFF";
                Z.fillRect(-this.page.width * this.view_ratio, -1, this.page.width * this.view_ratio * 2, 2);
                Z.fillStyle = KWP_CONF.colors.secondary;
                Z.fillRect(-this.page.width * this.view_ratio, -0.5, this.page.width * this.view_ratio * 2, 1);
                Z.restore()
            }
        }
        if (this.selected && !this.basic) {
            M = this.selected;
            Z.save();
            Z.translate(F + (M.x * this.view_ratio), D + (M.y * this.view_ratio));
            g = M.width * this.view_ratio;
            z = M.height * this.view_ratio;
            Z.rotate(-M.rotation * Math.PI / 180);
            V = M.width * this.view_ratio;
            X = M.height * this.view_ratio;
            Z.strokeStyle = "rgba(255,255,255,1)";
            Z.lineWidth = 4;
            Z.strokeRect(-V / 2, -X / 2, V, X);
            Z.strokeStyle = KWP_CONF.colors.main;
            Z.lineWidth = 2;
            Z.strokeRect(-V / 2, -X / 2, V, X);
            Z.restore();
            this.transform_tools.drawTools(M, Z)
        }
        q = this.page.objects;
        for (L = 0, b = q.length; L < b; L++) {
            M = q[L];
            if (M !== this.selected && M instanceof _kw59 && M.text === "") {
                Z.save();
                Z.translate(c.width / 2 + M.x * this.view_ratio, c.height / 2 + M.y * this.view_ratio);
                Z.rotate(-M.rotation * Math.PI / 180);
                Z.beginPath();
                Z.rect(-M.width * this.view_ratio / 2, -M.height * this.view_ratio / 2, M.width * this.view_ratio, M.height * this.view_ratio);
                Z.fillStyle = "rgba(0,0,0,.25)";
                Z.fill();
                Z.beginPath();
                Z.rect(-M.width * this.view_ratio / 2, -M.height * this.view_ratio / 2, M.width * this.view_ratio, M.height * this.view_ratio);
                Z.fillStyle = "rgba(255,255,255,.25)";
                Z.fill();
                if (M.replacedText(true) === "") {
                    Z.fillStyle = "rgba(0,0,0,.5)";
                    C = Math.min(M.width * this.view_ratio / 15, M.height * this.view_ratio * 0.7);
                    Z.font = "" + C + "pt " + M.font_name;
                    Z.textAlign = "center";
                    Z.fillText(KWC.translate("Click to add text"), 0, C / 2);
                    Z.fillStyle = "rgba(255,255,255,.25)";
                    Z.fillText(KWC.translate("Click to add text"), 1, C / 2 + 1)
                }
                Z.restore()
            }
        }
        this.page.updating = p;
        if (p) {
            this.refresh()
        }
        if (this.view.crop) {
            this.canvas.getContext("2d").drawImage(this.buffer, -this.buffer.width * this.view.crop.x, -this.buffer.height * this.view.crop.y);
            return this.view.draw(this.canvas, this.view_ratio)
        }
    };
    a.prototype.mouseleave = function (b) {
        this.mouse_over = false;
        return this.refresh()
    };
    a.prototype.fix = function (b) {
        if (b.iseventfixed != null) {
            return
        }
        b.iseventfixed = true;
        b.offsetX = b.pageX - jQuery(this.canvas).offset().left;
        b.offsetY = b.pageY - jQuery(this.canvas).offset().top
    };
    a.prototype._kw204 = function (i, l, j) {
        var u, v, p, m, t, r, q, s, h, e, b, w, z, k, g, f, c;
        if (i !== this.swap_time || !this.dragging || (this.selected == null) || Math.max(Math.abs(l - this.swapx), Math.abs(j - this.swapy)) < 20) {
            return
        }
        r = this.viewXtoPageX(l);
        q = this.viewYtoPageY(j);
        s = null;
        k = this.page.objects;
        for (e = 0, w = k.length; e < w; e++) {
            t = k[e];
            if (t !== this.selected && (t.type === (g = this.selected.type) && g === "photo") && t.canChangePhoto()) {
                p = r - t.x;
                m = q - t.y;
                u = Math.sqrt(p * p + m * m);
                v = Math.min(Math.min(t.width, t.height) / 2, Math.min(this.page.width, this.page.height) / 10);
                if (u < v) {
                    s = t
                }
            }
        }
        if (s === null) {
            f = this.page.objects;
            for (b = 0, z = f.length; b < z; b++) {
                t = f[b];
                if (t !== this.selected && (t.type === (c = this.selected.type) && c === "photo") && t.source === null) {
                    if (r > t.x - t.width / 2 && r < t.x + t.width / 2 && q > t.y - t.height / 2 && q < t.y + t.height / 2 && t.canChangePhoto()) {
                        s = t
                    }
                }
            }
        }
        if (s && !this.swap && !s.background && !this.selected.background) {
            this.swap = s;
            this.swapx = l;
            this.swapy = j;
            this.swap.swap = this.swap.clone();
            this.selected.swap = this.selected.clone();
            this.selected._kw52();
            this.swap._kw52();
            h = this.selected.clone();
            h.x = this.drag_pos_x;
            h.y = this.drag_pos_y;
            this.selected._kw70(this.swap);
            this.swap._kw70(this.drag_start_aspect);
            return this.refresh()
        }
    };
    a.prototype.mousemove = function (r) {
        var o, l, t, p, s, z, q, f, e, m, k, j, c, b, u, v, i, d;
        k = r.pageX - jQuery(this.canvas).offset().left;
        j = r.pageY - jQuery(this.canvas).offset().top;
        if (!this.dragging) {
            return
        }
        this.dragged = true;
        if (this.drag_mode === "move") {
            o = k - this.drag_start_x;
            l = j - this.drag_start_y;
            if (this.swap == null) {
                if (this.selected.type === "photo" && this.selected.background) {
                    if (Math.abs(o) < 20 && Math.abs(l) < 20) {
                        return
                    }
                    this.selected._kw69()
                }
                this.selected.x = Math.max(-this.page.width / 2, Math.min(this.page.width / 2, this.drag_pos_x + o / this.view_ratio));
                this.selected.y = Math.max(-this.page.height / 2, Math.min(this.page.height / 2, this.drag_pos_y + l / this.view_ratio));
                if (this.view && this.view.properties.hide_left) {
                    this.selected.x = Math.max(0, this.selected.x)
                }
                if (this.view && this.view.properties.hide_right) {
                    this.selected.x = Math.min(0, this.selected.x)
                }
                this.guiding = {
                    x: null,
                    y: null
                };
                if (this.guides != null) {
                    q = 10000;
                    p = null;
                    i = this.guides.x;
                    for (c = 0, u = i.length; c < u; c++) {
                        t = i[c];
                        if (Math.abs(t.value - this.selected.x) < q && Math.abs(t.value - this.selected.x) < t.threshold) {
                            q = Math.abs(t.value - this.selected.x);
                            p = t
                        } else {
                            if (Math.abs(t.value - this.selected.x) === q && Math.abs(t.value - this.selected.x) < t.threshold && Math.abs(t.source.y - this.selected.y) < Math.abs(p.source.y - this.selected.y)) {
                                q = Math.abs(t.value - this.selected.x);
                                p = t
                            }
                        }
                    }
                    if ((p != null) && q < p.threshold) {
                        this.selected.x = p.value;
                        this.guiding.x = p
                    }
                    q = 1000;
                    p = null;
                    d = this.guides.y;
                    for (b = 0, v = d.length; b < v; b++) {
                        t = d[b];
                        if (Math.abs(t.value - this.selected.y) < q && Math.abs(t.value - this.selected.y) < t.threshold) {
                            q = Math.abs(t.value - this.selected.y);
                            p = t
                        } else {
                            if (Math.abs(t.value - this.selected.y) === q && Math.abs(t.value - this.selected.y) < t.threshold && Math.abs(t.source.x - this.selected.x) < Math.abs(p.source.x - this.selected.x)) {
                                q = Math.abs(t.value - this.selected.y);
                                p = t
                            }
                        }
                    }
                    if ((p != null) && q < p.threshold) {
                        this.selected.y = p.value;
                        this.guiding.y = p
                    }
                }
                if (this.selected instanceof _kw53) {
                    _kw196._kw147(this.selected, this.page)
                }
                if (this.selected instanceof _kw152) {
                    this.selected.fix()
                }
            }
            if (Math.max(Math.abs(k - this.swapx), Math.abs(j - this.swapy)) > 20) {
                this.swapx = -1000;
                this.swapy = -1000
            }
            e = new Date().getTime();
            this.swap_time = e;
            setTimeout(((function (g) {
                return function () {
                    return g._kw204(e, k, j)
                }
            })(this)), 100);
            if (this.swap && Math.max(Math.abs(k - this.swapx), Math.abs(j - this.swapy)) > 20) {
                e = new Date().getTime();
                this.selected._kw52();
                this.swap._kw52();
                this.swap._kw70(this.swap.swap);
                this.selected._kw70(this.selected.swap);
                this.swap.swap = null;
                this.selected.swap = null;
                this.swap = null;
                this.swapx = k;
                this.swapy = j
            }
            return this.refresh()
        } else {
            if (this.drag_mode === "move_background") {
                m = this.buffer_width;
                s = this.canvas.height;
                z = this.drag_background.source.thumblist._kw39(Math.max(m, s), ((function (g) {
                    return function () {
                        return g.page.updated()
                    }
                })(this)));
                if (this.page.background.split()) {
                    m *= 0.5
                }
                if (z.complete) {
                    f = Math.max((m + 2) / z.width, (s + 2) / z.height);
                    o = z.width * f - m - 2;
                    l = z.height * f - s - 2;
                    if (o > 0) {
                        this.drag_background.posx = Math.max(0, Math.min(1, this.drag_bgx + (k - this.drag_start_x) / o))
                    }
                    if (l > 0) {
                        this.drag_background.posy = Math.max(0, Math.min(1, this.drag_bgy + (j - this.drag_start_y) / l))
                    }
                    return this.refresh()
                }
            } else {
                return this.transform_tools.handleDrag(k, j, this.selected)
            }
        }
    };
    a.prototype._kw71 = function (b, d) {
        var c;
        if (b === 0) {
            if (d === 0) {
                return 0
            }
            if (d > 0) {
                return 90
            }
            return 270
        } else {
            c = d / b;
            if (b > 0) {
                return (Math.atan(c) / Math.PI * 180) | 0
            }
            return 180 + (Math.atan(c) / Math.PI * 180) | 0
        }
    };
    a.prototype.mousedown = function (e) {
        var d, f, c, b, g;
        this.mouse_pressed = true;
        this.page.updating = true;
        this.fix(e);
        c = this.buffer_width;
        d = this.canvas.height;
        b = e.offsetX;
        g = e.offsetY;
        if (this.selected && !this.basic) {
            f = this.selected;
            if (this.transform_tools.initDrag(b, g, f)) {
                return
            }
        }
        this.selected = null;
        f = this._kw48(b, g, true);
        if (f && f.editable) {
            this.selected = f;
            if (this.basic && this.selected.can_move_crop) {
                this._kw73(b, g, "move_crop")
            } else {
                if (this.selected.canMove()) {
                    this._kw73(b, g, "move");
                    this.guides = this.transform_tools.createMoveGuides(this.selected)
                }
            }
        } else {
            this.drag_background = this.page.background._kw205(b / this.canvas.width);
            if (this.drag_background.source != null) {
                this.drag_bgx = this.drag_background.posx;
                this.drag_bgy = this.drag_background.posy;
                this._kw73(b, g, "move_background")
            }
        }
        return this.refresh()
    };
    a.prototype.unselect = function (c) {
        var b, d;
        this.fix(c);
        b = c.offsetX;
        d = c.offsetY;
        if (this.selected && (b < 0 || d < 0 || b >= this.canvas.width || d >= this.canvas.height)) {
            this.selected = null;
            this.manager._kw75();
            return this.refresh()
        }
    };
    a.prototype._kw73 = function (b, d, c) {
        this.dragging = true;
        this.dragged = false;
        this.drag_mode = c;
        this.drag_start_x = b;
        this.drag_start_y = d;
        if (this.selected) {
            this.drag_rotation = this.selected.rotation;
            this.drag_pos_x = this.selected.x;
            this.drag_pos_y = this.selected.y;
            this.drag_start_aspect = this.selected.clone()
        }
        return this.page._kw74()
    };
    a.prototype.mouseup = function (b) {
        this.page.updating = false;
        if (this.mouse_pressed) {
            this.mouse_pressed = false;
            if (this.selected) {
                this.manager._kw60(this.selected)
            } else {
                this.manager._kw75()
            } if (this.dragging && this.dragged) {
                this.page._kw76()
            }
            this.dragging = false;
            this.swap = null;
            this.guides = null;
            this.guiding = null;
            return this.page.updated()
        }
    };
    a.prototype.select = function (c) {
        var f, e, b, d;
        if (!c) {
            this.manager._kw75();
            return
        }
        d = this.page.objects;
        for (e = 0, b = d.length; e < b; e++) {
            f = d[e];
            if (f.x === c.x && f.y === c.y && f.type === c.type) {
                this.selected = f;
                this.manager._kw60(this.selected);
                return
            }
        }
    };
    a.prototype.mousewheel = function (c, d) {
        var b;
        if (this.selected && this.selected.type === "photo") {
            if (d > 0) {
                b = Math.pow(1.1, d)
            } else {
                b = Math.pow(0.9, -d)
            }
            this.selected.action({
                action: "zoom",
                value: this.selected._kw77() * b
            });
            return this.manager._kw78(this.selected)
        }
    };
    a.prototype._kw79 = function () {
        var e, d, b, c;
        c = this.page.objects;
        for (d = 0, b = c.length; d < b; d++) {
            e = c[d];
            if (e.type === "photo" && e.source) {
                return
            }
        }
        return this.page._kw55((function (f) {
            return function () {
                return f.page._kw80(f.manager.getImageList())
            }
        })(this))
    };
    a.prototype.keyPressedDelete = function () {
        if (this.selected) {
            this.selected.action({
                action: "delete"
            });
            this.selected = null;
            this.manager._kw75();
            return this.refresh()
        }
    };
    a.prototype.keyMove = function (c, b) {
        if (this.selected) {
            this.page._kw55((function (d) {
                return function () {
                    d.selected.x += c;
                    d.selected.y += b;
                    return _kw196.fix(d.selected, d.page)
                }
            })(this));
            return this.refresh()
        }
    };
    return a
})();
this._kw81 = (function () {
    function a(c) {
        var b;
        this.image = c;
        this.width = this.image.width;
        this.height = this.image.height;
        b = new _kw34(this.image);
        this.thumbnail = b.create(512);
        this.thumbnail.complete = true
    }
    return a
})();
this._kw82 = (function () {
    function a(b) {
        this.type = b;
        this.properties = {};
        this.locks = [];
        this.locks.push({
            id: "lock_selection",
            name: "Lock Selection"
        });
        this.locks.push({
            id: "lock_resize",
            name: "Lock Resize"
        });
        this.locks.push({
            id: "lock_move",
            name: "Lock Move"
        });
        this.locks.push({
            id: "lock_rotate",
            name: "Lock Rotate"
        });
        this.locks.push({
            id: "lock_delete",
            name: "Lock Delete"
        })
    }
    a.prototype.x = 0;
    a.prototype.y = 0;
    a.prototype.width = 1;
    a.prototype.height = 1;
    a.prototype.rotation = 0;
    a.prototype.can_resize = true;
    a.prototype.can_change_ratio = false;
    a.prototype.can_move_crop = false;
    a.prototype.opacity = 1;
    a.prototype.sticky = false;
    a.prototype.editable = true;
    a.prototype.isLocked = function (b) {
        return this.properties[b] === true
    };
    a.prototype._kw52 = function (c, b) {
        if (!c) {
            c = new Date().getTime()
        }
        if (!b) {
            b = c + _kw33.transition_time
        }
        this.transition_start_time = c;
        this.transition_end_time = b;
        this.transition_start = this.clone();
        return this.transition_inter = this.clone()
    };
    a.prototype._kw83 = function () {
        this.transition_start = null;
        return this.transition_inter = null
    };
    a.prototype._kw70 = function (b) {
        this.x = b.x;
        this.y = b.y;
        this.width = b.width;
        this.height = b.height;
        this.rotation = b.rotation;
        this.opacity = b.opacity;
        this.link = b.link;
        this.sticky = b.sticky;
        this.editable = b.editable;
        if (b.properties != null) {
            return this.properties = JSON.parse(JSON.stringify(b.properties))
        }
    };
    a.prototype._kw181 = function () {
        return delete this.render_buffer
    };
    a.prototype.canChangeRatio = function () {
        return this.can_change_ratio
    };
    a.prototype.canSelect = function () {
        return KWP_CONF.advanced === true || !this.isLocked("lock_selection")
    };
    a.prototype.canMove = function () {
        return !this.isLocked("lock_move")
    };
    a.prototype.canResize = function () {
        return !this.isLocked("lock_resize")
    };
    a.prototype.canRotate = function () {
        return !this.isLocked("lock_rotate")
    };
    a.prototype.canDelete = function () {
        return !this.isLocked("lock_delete")
    };
    a.prototype.isSticky = function () {
        return this.sticky
    };
    a.prototype.action = function (b) {
        switch (b.action) {
            case "move_forward":
                if (this.page.isForward(this)) {
                    return
                }
                return this.page._kw55((function (c) {
                    return function () {
                        return c.page._kw84(c)
                    }
                })(this));
            case "move_backward":
                return this.page._kw55((function (c) {
                    return function () {
                        return c.page._kw85(c)
                    }
                })(this));
            case "opacity_start":
                return this.page._kw74();
            case "opacity":
                this.opacity = b.value;
                return this.page.updated();
            case "opacity_end":
                return this.page._kw76();
            case "delete":
                if (!this.canDelete()) {
                    return
                }
                return this.page._kw55((function (c) {
                    return function () {
                        return c.deleteAction()
                    }
                })(this));
            case "set_lock":
                this.properties[b.id] = b.value;
                return this.page.updated();
            case "set_sticky":
                this.sticky = b.value;
                return this.page.updated()
        }
    };
    a.prototype.deleteAction = function () {
        this.page._kw86(this);
        return manager._kw75()
    };
    a.prototype.save = function () {
        var b;
        b = {
            type: this.type,
            x: this.x,
            y: this.y,
            width: this.width,
            height: this.height,
            rotation: this.rotation,
            opacity: this.opacity,
            sticky: this.sticky,
            editable: this.editable,
            properties: this.properties
        };
        return b
    };
    a.prototype.load = function (b) {
        this.x = b.x;
        this.y = b.y;
        this.link = b.link;
        this.width = b.width;
        this.height = b.height;
        this.rotation = b.rotation;
        this.opacity = b.opacity;
        if (b.sticky != null) {
            this.sticky = b.sticky
        }
        if (b.editable != null) {
            this.editable = b.editable
        }
        if (b.properties != null) {
            return this.properties = b.properties
        }
    };
    a.prototype._kw61 = function (b, c) {
        return true
    };
    a.prototype._kw54 = function (t) {
        var j, s, r, w, u, g, e, z, h, f, v, p, l, q, m, d, b, A, k, c;
        if (t == null) {
            t = this.page.view
        }
        j = 0;
        p = 0;
        l = 0;
        if (t && t.crop) {
            h = -this.page.width / 2 + this.page.width * t.crop.x + this.width * 0.6;
            f = -this.page.height / 2 + this.page.height * t.crop.y + this.height * 0.6;
            g = -this.page.width / 2 + this.page.width * (t.crop.x + t.crop.width) - this.width * 0.6;
            e = -this.page.height / 2 + this.page.height * (t.crop.y + t.crop.height) - this.height * 0.6
        } else {
            if (t && t.properties.hide_left) {
                h = this.width * 0.6;
                f = -this.page.height / 2 + this.height * 0.6;
                g = this.page.width / 2 - this.width * 0.6;
                e = this.page.height / 2 - this.height * 0.6
            } else {
                if (t && t.properties.hide_right) {
                    h = -this.page.width / 2 + this.width * 0.6;
                    f = -this.page.height / 2 + this.height * 0.6;
                    g = -this.width * 0.6;
                    e = this.page.height / 2 - this.height * 0.6
                } else {
                    h = -this.page.width / 2 + this.width * 0.6;
                    f = -this.page.height / 2 + this.height * 0.6;
                    g = this.page.width / 2 - this.width * 0.6;
                    e = this.page.height / 2 - this.height * 0.6
                }
            }
        }
        c = [];
        for (w = d = 0; d <= 99; w = ++d) {
            u = Math.max(this.width, this.height) * 0.6;
            q = h + Math.random() * (g - h);
            m = f + Math.random() * (e - f);
            z = Number.MAX_VALUE;
            k = this.page.objects;
            for (b = 0, A = k.length; b < A; b++) {
                v = k[b];
                if (v !== this) {
                    s = v.x - q;
                    r = v.y - m;
                    z = Math.min(z, s * s + r * r)
                }
            }
            if (z > j) {
                this.x = q;
                this.y = m;
                c.push(j = z)
            } else {
                c.push(void 0)
            }
        }
        return c
    };
    a.prototype._kw87 = function (d, e) {
        var i, g, f, b;
        b = d.width;
        g = d.height;
        f = Math.max(d.width / (this.page.width + this.page.spec.margin.left + this.page.spec.margin.right), d.height / (this.page.height + this.page.spec.margin.top + this.page.spec.margin.bottom));
        e.save();
        e.translate(b / 2 + (this.x * f), g / 2 + (this.y * f));
        i = this.render(f);
        if ((this.render_buffer_dx != null) && (this.render_buffer_dy != null)) {
            e.translate(this.render_buffer_dx, this.render_buffer_dy)
        }
        e.rotate(-this.rotation * Math.PI / 180);
        e.globalAlpha = this.opacity;
        e.drawImage(i, -i.width / 2, -i.height / 2);
        return e.restore()
    };
    return a
})();
module.exports = this._kw82;
var _kw94;
_kw94 = require("./thumblist.coffee", _kw94);
this._kw57 = (function () {
    function a() {
        this.type = "background";
        this.data = this.makeData("rgb(255,255,255)")
    }
    a.prototype._kw207 = function (d) {
        var b, c;
        if (d.image.source) {
            c = {
                id: d.image.source.id,
                imageloader: d.image.source.imageloader,
                thumblist: new _kw94(d.image.source.thumblist),
                original: d.image.source.original
            }
        }
        return b = {
            color: d.color,
            image: {
                source: c,
                posx: d.image.posx,
                posy: d.image.posy
            }
        }
    };
    a.prototype.load = function (b) {
        if (b instanceof Array) {
            return this.data = [this._kw207(b[0]), this._kw207(b[1])]
        } else {
            if (typeof b === "string") {
                return this.data = {
                    color: b,
                    image: {
                        source: null,
                        posx: 0.5,
                        posy: 0.5
                    }
                }
            } else {
                if (b.source) {
                    return this.data = {
                        color: "rgb(255,255,255)",
                        image: {
                            source: {
                                id: b.source.id,
                                imageloader: b.source.imageloader,
                                thumblist: new _kw94(b.source.thumblist),
                                original: b.source.original
                            },
                            posx: b.posx != null ? b.posx : 0.5,
                            posy: b.posy != null ? b.posy : 0.5
                        }
                    }
                } else {
                    return this.data = this._kw207(b)
                }
            }
        }
    };
    a.prototype._kw208 = function (d) {
        var b, c;
        if (d.image.source) {
            c = {
                id: d.image.source.id,
                thumblist: d.image.source.thumblist.save(),
                original: d.image.source.original
            }
        } else {
            c = null
        }
        return b = {
            color: d.color,
            image: {
                source: c,
                posx: d.image.posx,
                posy: d.image.posy
            }
        }
    };
    a.prototype.save = function () {
        if (jQuery.isArray(this.data)) {
            return [this._kw208(this.data[0]), this._kw208(this.data[1])]
        } else {
            return this._kw208(this.data)
        }
    };
    a.prototype._kw209 = function (c) {
        var b;
        return b = {
            color: c.color,
            image: {
                source: c.image.source,
                posx: c.image.posx,
                posy: c.image.posy
            }
        }
    };
    a.prototype.clone = function () {
        var b;
        b = new a();
        if (jQuery.isArray(this.data)) {
            b.data = [this._kw209(this.data[0]), this._kw209(this.data[1])]
        } else {
            b.data = this._kw209(this.data)
        }
        return b
    };
    a.prototype._kw210 = function (b) {
        var c;
        if (jQuery.isArray(b.data)) {
            c = this._kw209(b.data[0])
        } else {
            c = this._kw209(b.data)
        } if (jQuery.isArray(this.data)) {
            return this.data[0] = c
        } else {
            return this.data = [c, this.data]
        }
    };
    a.prototype._kw211 = function (b) {
        var c;
        if (jQuery.isArray(b.data)) {
            c = this._kw209(b.data[1])
        } else {
            c = this._kw209(b.data)
        } if (jQuery.isArray(this.data)) {
            return this.data[1] = c
        } else {
            return this.data = [this.data, c]
        }
    };
    a.prototype.copy = function (b) {
        if (jQuery.isArray(b.data)) {
            return this.data = [this._kw209(b.data[0]), this._kw209(b.data[1])]
        } else {
            return this.data = this._kw209(b.data)
        }
    };
    a.prototype.split = function () {
        return jQuery.isArray(this.data)
    };
    a.prototype.clear = function () {
        return this.data = this.makeData("rgb(255,255,255)")
    };
    a.prototype.set = function (b) {
        return this.data = this.makeData(b)
    };
    a.prototype.makeData = function (b) {
        if (typeof b === "string") {
            return {
                color: b,
                image: {
                    source: null,
                    posx: 0.5,
                    posy: 0.5
                }
            }
        } else {
            return {
                color: "rgb(255,255,255)",
                image: {
                    source: b,
                    posx: 0.5,
                    posy: 0.5
                }
            }
        }
    };
    a.prototype._kw186 = function (b, c) {
        if (this.data.image) {
            this.data.image.posx = b;
            return this.data.image.posy = c
        }
    };
    a.prototype._kw212 = function (b, c) {
        if (jQuery.isArray(this.data)) {
            this.data[0].image.posx = b;
            return this.data[0].image.posy = c
        }
    };
    a.prototype._kw213 = function (b, c) {
        if (jQuery.isArray(this.data)) {
            this.data[1].image.posx = b;
            return this.data[1].image.posy = c
        }
    };
    a.prototype._kw169 = function (b) {
        if (jQuery.isArray(this.data)) {
            return this.data[0] = this.makeData(b)
        } else {
            return this.data = [this.makeData(b), this.data]
        }
    };
    a.prototype._kw171 = function (b) {
        if (jQuery.isArray(this.data)) {
            return this.data[1] = this.makeData(b)
        } else {
            return this.data = [this.data, this.makeData(b)]
        }
    };
    a.prototype._kw214 = function (d, e, h, f, j) {
        var g, c, b, i;
        d.fillStyle = f.color;
        d.fillRect(-e / 2, -h / 2, e, h);
        if (f.image.source) {
            g = f.image.source.thumblist._kw39(Math.max(e, h), (function () {
                return j.updated()
            }));
            if ((g != null) && g.complete) {
                i = Math.max(e / g.width, h / g.height);
                c = (g.width * i - e) * (f.image.posx - 0.5);
                b = (g.height * i - h) * (f.image.posy - 0.5);
                return d.drawImage(g, -g.width * i / 2 + c, -g.height * i / 2 + b, g.width * i, g.height * i)
            }
        }
    };
    a.prototype.render = function (d, b, k, c) {
        var g, l, i, m, f, e, j;
        m = k.width * c;
        g = k.height * c;
        f = d.width / 2;
        l = d.height / 2;
        e = (k.width + k.spec.bleed.left + k.spec.bleed.right) * c;
        i = (k.height + k.spec.bleed.top + k.spec.bleed.bottom) * c;
        j = (k.width / 2 + k.spec.bleed.left + k.spec.bleed.right) * c;
        if (jQuery.isArray(this.data)) {
            b.save();
            b.translate(f / 2, l);
            b.beginPath();
            b.rect(-f / 2 - 1, -g / 2 - 1, m + 2, g + 2);
            b.clip();
            this._kw214(b, j, i, this.data[0], k);
            b.restore();
            b.save();
            b.translate(f * 1.5, l);
            b.beginPath();
            b.rect(-f / 2, -g / 2 - 1, m + 1, g + 2);
            b.clip();
            this._kw214(b, j, i, this.data[1], k);
            return b.restore()
        } else {
            b.save();
            b.translate(f, l);
            this._kw214(b, e, i, this.data, k);
            return b.restore()
        }
    };
    a.prototype._kw205 = function (b) {
        if (jQuery.isArray(this.data)) {
            if (b < 0.5) {
                return this.data[0].image
            } else {
                return this.data[1].image
            }
        } else {
            return this.data.image
        }
    };
    a.prototype._kw215 = function () {
        if (this.data[1]) {
            return ((this.data[0].image.source == null) || ((this.data[0].image.source.imageloader.loaded_image != null) && this.data[0].image.source.imageloader.loaded_image.complete)) && ((this.data[1].image.source == null) || ((this.data[1].image.source.imageloader.loaded_image != null) && this.data[1].image.source.imageloader.loaded_image.complete))
        } else {
            return (this.data.image.source == null) || ((this.data.image.source.imageloader.loaded_image != null) && this.data.image.source.imageloader.loaded_image.complete)
        }
    };
    a.prototype._kw88 = function (d) {
        var b, c = this;
        b = function () {
            if (c._kw215()) {
                return d()
            }
        };
        b();
        if (this.data[1]) {
            if (this.data[0].image.source) {
                this.data[0].image.source.imageloader.get_image(b)
            }
            if (this.data[1].image.source) {
                return this.data[1].image.source.imageloader.get_image(b)
            }
        } else {
            if (this.data.image.source) {
                return this.data.image.source.imageloader.get_image(b)
            }
        }
    };
    a.prototype._kw216 = function (d, b, j) {
        var g, k, i, c, l, f, e;
        l = d.width;
        g = d.height;
        f = l / 2;
        k = g / 2;
        c = Math.max(d.width / (j.width + j.spec.margin.left + j.spec.margin.right), d.height / (j.height + j.spec.margin.top + j.spec.margin.bottom));
        e = (j.width + j.spec.bleed.left + j.spec.bleed.right) * c;
        i = (j.height + j.spec.bleed.top + j.spec.bleed.bottom) * c;
        if (this.data instanceof Array) {
            b.fillStyle = this.data[0].color;
            b.fillRect(f - e / 2 - 2, k - i / 2 - 2, e / 2 + 4, i + 4);
            b.fillStyle = this.data[1].color;
            return b.fillRect(f, k - i / 2 - 2, e / 2 + 2, i + 4)
        } else {
            b.fillStyle = this.data.color;
            return b.fillRect(f - e / 2 - 2, k - i / 2 - 2, e + 4, i + 4)
        }
    };
    a.prototype._kw87 = function (f, d, q, g) {
        var l, r, m, k, c, b, p, e, s, j, i, o;
        if (g == null) {
            g = 0
        }
        if (this.data instanceof Array) {
            s = f.width;
            l = f.height;
            j = s / 2;
            r = l / 2;
            e = Math.max(f.width / (q.width + q.spec.margin.left + q.spec.margin.right), f.height / (q.height + q.spec.margin.top + q.spec.margin.bottom));
            i = (q.width + q.spec.bleed.left + q.spec.bleed.right) * e;
            m = (q.height + q.spec.bleed.top + q.spec.bleed.bottom) * e;
            o = i * 0.5;
            d.save();
            d.beginPath();
            d.rect(j + (o + 2) * (g - 1), r - m / 2 - 2, o + 4, m + 4);
            d.clip();
            if (this.data[g].image.source) {
                k = this.data[g].image.source.imageloader.loaded_image;
                d.translate(s / 2 + o * (g - 0.5), l / 2);
                p = Math.max(o / k.width, m / k.height);
                c = (k.width * p - o) * (this.data[g].image.posx - 0.5);
                b = (k.height * p - m) * (this.data[g].image.posy - 0.5);
                d.drawImage(k, -k.width * p / 2 + c - 2, -k.height * p / 2 + b - 2, k.width * p + 4, k.height * p + 4)
            }
            d.restore();
            if (g === 0) {
                return this._kw87(f, d, q, 1)
            }
        } else {
            s = f.width;
            l = f.height;
            j = s / 2;
            r = l / 2;
            e = Math.max(f.width / (q.width + q.spec.margin.left + q.spec.margin.right), f.height / (q.height + q.spec.margin.top + q.spec.margin.bottom));
            i = (q.width + q.spec.bleed.left + q.spec.bleed.right) * e;
            m = (q.height + q.spec.bleed.top + q.spec.bleed.bottom) * e;
            d.save();
            d.beginPath();
            d.rect(j - i / 2 - 2, r - m / 2 - 2, i + 4, m + 4);
            d.clip();
            if (this.data.image.source) {
                k = this.data.image.source.imageloader.loaded_image;
                d.translate(s / 2, l / 2);
                p = Math.max(i / k.width, m / k.height);
                c = (k.width * p - i) * (this.data.image.posx - 0.5);
                b = (k.height * p - m) * (this.data.image.posy - 0.5);
                d.drawImage(k, -k.width * p / 2 + c - 2, -k.height * p / 2 + b - 2, k.width * p + 4, k.height * p + 4)
            }
            return d.restore()
        }
    };
    a.prototype._kw89 = function () {
        if (this.data[1]) {
            if (this.data[0].image.source) {
                delete this.data[0].image.source.imageloader.loaded_image
            }
            if (this.data[1].image.source) {
                return delete this.data[1].image.source.imageloader.loaded_image
            }
        } else {
            if (this.data.image.source) {
                return delete this.data.image.source.imageloader.loaded_image
            }
        }
    };
    return a
})();
module.exports = this._kw57;
var _kw30, KWC, _kw82, _kw34, __hasProp = {}.hasOwnProperty,
    __extends = function (d, b) {
        for (var a in b) {
            if (__hasProp.call(b, a)) {
                d[a] = b[a]
            }
        }

        function c() {
            this.constructor = d
        }
        c.prototype = b.prototype;
        d.prototype = new c();
        d.__super__ = b.prototype;
        return d
    };
KWC = require("../wrapper.js", KWC);
_kw82 = require("./pageobject.coffee", _kw82);
_kw34 = require("./thumbnailer.coffee", _kw34);
_kw30 = require("./filters/hsl.coffee", _kw30);
this._kw56 = (function (b) {
    __extends(a, b);

    function a(c) {
        this.source = c;
        a.__super__.constructor.call(this, "clipart");
        this.x = 0;
        this.y = 0;
        this.rotation = 0;
        this.render_buffer = null;
        this.buffer_rendered = false;
        this.hue = 0.5;
        this.saturation = 0.5;
        this.lightness = 0.5
    }
    a.prototype.clone = function () {
        var d;
        d = new a(this.source);
        d._kw90(this);
        return d
    };
    a.prototype._kw90 = function (c) {
        this.source = c.source;
        this._kw70(c);
        return this.page = c.page
    };
    a.prototype._kw70 = function (c) {
        a.__super__._kw70.call(this, c);
        this.lightness = c.lightness;
        this.saturation = c.saturation;
        return this.hue = c.hue
    };
    a.prototype.interpolate = function (e, d, c) {
        this.x = e.x * (1 - c) + d.x * c;
        this.y = e.y * (1 - c) + d.y * c;
        this.width = e.width * (1 - c) + d.width * c;
        this.height = e.height * (1 - c) + d.height * c;
        return this.rotation = e.rotation * (1 - c) + d.rotation * c
    };
    a.prototype._kw65 = function (d) {
        var c;
        if (this.transition_start) {
            c = (d - this.transition_start_time) / (this.transition_end_time - this.transition_start_time);
            if (c >= 0 && c < 1) {
                c = 1 - (1 - c) * (1 - c);
                this.transition_inter.interpolate(this.transition_start, this, c);
                return this.transition_inter
            } else {
                this._kw83()
            }
        }
        return this
    };
    a.prototype.save = function () {
        var c;
        c = a.__super__.save.call(this);
        c.hue = this.hue;
        c.saturation = this.saturation;
        c.lightness = this.lightness;
        c.pageforeground = this.pageforeground;
        c.source = {
            id: this.source.id,
            thumblist: this.source.thumblist.save(),
            width: this.source.width,
            height: this.source.height,
            original: this.source.original
        };
        return c
    };
    a.prototype.render = function (i) {
        var f, j, g, e, d, c;
        c = Math.round(this.width * i + 3);
        g = Math.round(this.height * i + 3);
        if (!this.render_buffer) {
            this.render_buffer = KWC.createCanvas();
            this.render_buffer.width = c;
            this.render_buffer.height = g
        } else {
            if (c !== this.render_buffer.width || g !== this.render_buffer.height) {
                this.render_buffer.width = c;
                this.render_buffer.height = g
            } else {
                if (this.buffer_rendered && this.source.thumblist.load_status === this.render_buffer_load_status && this.render_buffer_hue === this.hue && this.render_buffer_saturation === this.saturation && this.render_buffer_lightness === this.lightness) {
                    return this.render_buffer
                } else {
                    f = this.render_buffer.getContext("2d");
                    f.clearRect(0, 0, c, g)
                }
            }
        }
        j = (function (h) {
            return function () {
                h.buffer_rendered = false;
                return h.page.updated()
            }
        })(this);
        if (this.source.imageloader) {
            d = this.source.imageloader.loaded_image;
            if (c < d.width * 0.5 || g < d.height * 0.5) {
                d = new _kw34(d).create(Math.max(c, g))
            }
            d.complete = true
        } else {
            d = this.source.thumblist._kw39(Math.max(c, g), j)
        } if (d && d.complete) {
            this.buffer_rendered = true;
            this.render_buffer_load_status = this.source.thumblist.load_status;
            this.render_buffer_hue = this.hue;
            this.render_buffer_saturation = this.saturation;
            this.render_buffer_lightness = this.lightness;
            f = this.render_buffer.getContext("2d");
            f.drawImage(d, 1, 1, c - 2, g - 2);
            if (this.hue !== 0.5 || this.saturation !== 0.5 || this.lightness !== 0.5) {
                e = new _kw30();
                e.parameters[0].value = this.hue;
                e.parameters[1].value = this.saturation;
                e.parameters[2].value = this.lightness;
                e._kw9(this.render_buffer)
            }
        }
        return this.render_buffer
    };
    a.prototype._kw91 = function (c, d) { };
    a.prototype._kw88 = function (c) {
        return this.source.imageloader.get_image(c)
    };
    a.prototype._kw89 = function () {
        delete this.source.imageloader.loaded_image;
        return delete this.render_buffer
    };
    a.prototype._kw61 = function (c, h) {
        var f, e, d;
        try {
            if (this.render_buffer && this.render_buffer.width > 0 && this.render_buffer.height > 0) {
                f = this.render_buffer.getContext("2d").getImageData(0, 0, this.render_buffer.width, this.render_buffer.height);
                c = Math.max(1, Math.min(this.render_buffer.width - 2, (1.5 + c * (this.render_buffer.width - 2)) | 0));
                h = Math.max(1, Math.min(this.render_buffer.height - 2, (1.5 + h * (this.render_buffer.height - 2)) | 0));
                d = c + h * this.render_buffer.width;
                return f.data[d * 4 + 3] >= 1 || f.data[d * 4 + 4 + 3] >= 1 || f.data[d * 4 - 4 + 3] >= 1 || f.data[d * 4 - 4 * this.render_buffer.width + 3] >= 1 || f.data[d * 4 + 4 * this.render_buffer.width + 3] >= 1
            } else {
                return true
            }
        } catch (g) {
            e = g;
            return true
        }
    };
    a.prototype.action = function (c) {
        a.__super__.action.call(this, c);
        switch (c.action) {
            case "hue_start" || "saturation_start" || "lightness_start":
                return this.page._kw74();
            case "hue":
                this.hue = c.value;
                return this.page.updated();
            case "saturation":
                this.saturation = c.value;
                return this.page.updated();
            case "lightness":
                this.lightness = c.value;
                return this.page.updated();
            case "hue_end" || "saturation_end" || "lightness_end":
                return this.page._kw76()
        }
    };
    a.prototype.load = function (c) {
        a.__super__.load.call(this, c);
        if (c.hue != null) {
            this.hue = c.hue
        }
        if (c.saturation != null) {
            this.saturation = c.saturation
        }
        if (c.lightness != null) {
            return this.lightness = c.lightness
        }
    };
    return a
})(_kw82);
module.exports = this._kw56;
var _kw30, KWC, _kw82, _kw34, __hasProp = {}.hasOwnProperty,
    __extends = function (d, b) {
        for (var a in b) {
            if (__hasProp.call(b, a)) {
                d[a] = b[a]
            }
        }

        function c() {
            this.constructor = d
        }
        c.prototype = b.prototype;
        d.prototype = new c();
        d.__super__ = b.prototype;
        return d
    };
KWC = require("../wrapper.js", KWC);
_kw82 = require("./pageobject.coffee", _kw82);
_kw34 = require("./thumbnailer.coffee", _kw34);
_kw30 = require("./filters/hsl.coffee", _kw30);
this.PagePattern = (function (a) {
    __extends(b, a);

    function b(c) {
        this.source = c;
        b.__super__.constructor.call(this, "pattern");
        this.x = 0;
        this.y = 0;
        this.rotation = 0;
        this.render_buffer = null;
        this.buffer_rendered = false;
        this.can_change_ratio = true;
        this.hue = 0.5;
        this.saturation = 0.5;
        this.lightness = 0.5
    }
    b.prototype.clone = function () {
        var d;
        d = new b(this.source);
        d._kw90(this);
        return d
    };
    b.prototype._kw90 = function (c) {
        this.source = c.source;
        this._kw70(c);
        return this.page = c.page
    };
    b.prototype._kw70 = function (c) {
        b.__super__._kw70.call(this, c);
        this.lightness = c.lightness;
        this.saturation = c.saturation;
        return this.hue = c.hue
    };
    b.prototype.interpolate = function (e, d, c) {
        this.x = e.x * (1 - c) + d.x * c;
        this.y = e.y * (1 - c) + d.y * c;
        this.width = e.width * (1 - c) + d.width * c;
        this.height = e.height * (1 - c) + d.height * c;
        return this.rotation = e.rotation * (1 - c) + d.rotation * c
    };
    b.prototype._kw65 = function (d) {
        var c;
        if (this.transition_start) {
            c = (d - this.transition_start_time) / (this.transition_end_time - this.transition_start_time);
            if (c >= 0 && c < 1) {
                c = 1 - (1 - c) * (1 - c);
                this.transition_inter.interpolate(this.transition_start, this, c);
                return this.transition_inter
            } else {
                this._kw83()
            }
        }
        return this
    };
    b.prototype.save = function () {
        var c;
        c = b.__super__.save.call(this);
        c.hue = this.hue;
        c.saturation = this.saturation;
        c.lightness = this.lightness;
        c.pageforeground = this.pageforeground;
        c.source = {
            id: this.source.id,
            thumblist: this.source.thumblist.save(),
            width: this.source.width,
            height: this.source.height,
            original: this.source.original,
            vertical_stretch: this.source.vertical_stretch,
            horizontal_stretch: this.source.horizontal_stretch
        };
        return c
    };
    b.prototype.render = function (j) {
        var c, o, g, p, f, i, q, e, d, m, l, k;
        l = Math.round(this.width * j + 3);
        g = Math.round(this.height * j + 3);
        if (!this.render_buffer) {
            this.render_buffer = KWC.createCanvas();
            this.render_buffer.width = l;
            this.render_buffer.height = g
        } else {
            if (l !== this.render_buffer.width || g !== this.render_buffer.height) {
                this.render_buffer.width = l;
                this.render_buffer.height = g
            } else {
                if (this.buffer_rendered && this.source.thumblist.load_status === this.render_buffer_load_status && this.render_buffer_hue === this.hue && this.render_buffer_saturation === this.saturation && this.render_buffer_lightness === this.lightness) {
                    return this.render_buffer
                } else {
                    c = this.render_buffer.getContext("2d");
                    c.clearRect(0, 0, l, g)
                }
            }
        }
        o = (function (h) {
            return function () {
                h.buffer_rendered = false;
                return h.page.updated()
            }
        })(this);
        if (this.source.imageloader) {
            f = this.source.imageloader.loaded_image;
            f.complete = true
        } else {
            f = this.source.thumblist._kw39(Math.max(l, g), o)
        }
        k = this.page.spec.dpi * this.width / 25.4;
        m = k / this.source.width;
        if (f && f.complete) {
            this.buffer_rendered = true;
            this.render_buffer_load_status = this.source.thumblist.load_status;
            this.render_buffer_hue = this.hue;
            this.render_buffer_saturation = this.saturation;
            this.render_buffer_lightness = this.lightness;
            c = this.render_buffer.getContext("2d");
            c.save();
            d = (l - 2) / f.width;
            e = d / m;
            q = e;
            if (this.source.horizontal_stretch) {
                e = (l - 2) / f.width
            }
            if (this.source.vertical_stretch) {
                q = (g - 2) / f.height
            }
            i = c.createPattern(f, "repeat");
            c.scale(e, q);
            c.fillStyle = i;
            c.fillRect(1 / e, 1 / q, (l - 2) / e, (g - 2) / q);
            c.restore();
            if (this.hue !== 0.5 || this.saturation !== 0.5 || this.lightness !== 0.5) {
                p = new _kw30();
                p.parameters[0].value = this.hue;
                p.parameters[1].value = this.saturation;
                p.parameters[2].value = this.lightness;
                p._kw9(this.render_buffer)
            }
        }
        return this.render_buffer
    };
    b.prototype._kw91 = function (c, d) { };
    b.prototype._kw88 = function (c) {
        return this.source.imageloader.get_image(c)
    };
    b.prototype._kw89 = function () {
        delete this.source.imageloader.loaded_image;
        return delete this.render_buffer
    };
    b.prototype._kw61 = function (c, h) {
        var f, e, d;
        try {
            if (this.render_buffer && this.render_buffer.width > 0 && this.render_buffer.height > 0) {
                f = this.render_buffer.getContext("2d").getImageData(0, 0, this.render_buffer.width, this.render_buffer.height);
                c = Math.max(1, Math.min(this.render_buffer.width - 2, (1.5 + c * (this.render_buffer.width - 2)) | 0));
                h = Math.max(1, Math.min(this.render_buffer.height - 2, (1.5 + h * (this.render_buffer.height - 2)) | 0));
                d = c + h * this.render_buffer.width;
                return f.data[d * 4 + 3] >= 1 || f.data[d * 4 + 4 + 3] >= 1 || f.data[d * 4 - 4 + 3] >= 1 || f.data[d * 4 - 4 * this.render_buffer.width + 3] >= 1 || f.data[d * 4 + 4 * this.render_buffer.width + 3] >= 1
            } else {
                return true
            }
        } catch (g) {
            e = g;
            return true
        }
    };
    b.prototype.action = function (c) {
        b.__super__.action.call(this, c);
        switch (c.action) {
            case "hue_start" || "saturation_start" || "lightness_start":
                return this.page._kw74();
            case "hue":
                this.hue = c.value;
                return this.page.updated();
            case "saturation":
                this.saturation = c.value;
                return this.page.updated();
            case "lightness":
                this.lightness = c.value;
                return this.page.updated();
            case "hue_end" || "saturation_end" || "lightness_end":
                return this.page._kw76()
        }
    };
    b.prototype.load = function (c) {
        b.__super__.load.call(this, c);
        if (c.hue) {
            this.hue = c.hue
        }
        if (c.saturation) {
            this.saturation = c.saturation
        }
        if (c.lightness) {
            return this.lightness = c.lightness
        }
    };
    return b
})(_kw82);
module.exports = this.PagePattern;
var HSL, KWC, _kw56, _kw82, _kw34, __hasProp = {}.hasOwnProperty,
    __extends = function (d, b) {
        for (var a in b) {
            if (__hasProp.call(b, a)) {
                d[a] = b[a]
            }
        }

        function c() {
            this.constructor = d
        }
        c.prototype = b.prototype;
        d.prototype = new c();
        d.__super__ = b.prototype;
        return d
    };
KWC = require("../wrapper.js", KWC);
_kw82 = require("./pageobject.coffee", _kw82);
_kw56 = require("./pageclipart.coffee", _kw56);
_kw34 = require("./thumbnailer.coffee", _kw34);
HSL = require("./filters/hsl.coffee", HSL);
this._kw152 = (function (a) {
    __extends(b, a);

    function b(c) {
        this.source = c;
        b.__super__.constructor.call(this, this.source);
        this.type = "foreground";
        this.sticky = false;
        if ((typeof KWP_CONF !== "undefined" && KWP_CONF !== null) && (KWP_CONF.foreground_default_sticky != null)) {
            this.sticky = KWP_CONF.foreground_default_sticky
        }
    }
    b.prototype.clone = function () {
        var d;
        d = new b(this.source);
        d._kw90(this);
        return d
    };
    b.prototype._kw186 = function (d, c) {
        var h, e, i, f, g;
        if (d == null) {
            d = 0.5
        }
        if (c == null) {
            c = 0.5
        }
        g = this.page.width + this.page.spec.bleed.left + this.page.spec.bleed.right;
        i = this.page.height + this.page.spec.bleed.top + this.page.spec.bleed.bottom;
        f = Math.max(g / this.source.width, i / this.source.height);
        this.width = f * this.source.width;
        this.height = f * this.source.height;
        e = this.width - g;
        h = this.height - i;
        this.x = -e / 2 + e * d;
        return this.y = -h / 2 + h * c
    };
    b.prototype.fix = function () {
        var f, c, g, d, e;
        e = this.page.width + this.page.spec.bleed.left + this.page.spec.bleed.right;
        g = this.page.height + this.page.spec.bleed.top + this.page.spec.bleed.bottom;
        d = Math.max(e / this.source.width, g / this.source.height);
        this.width = d * this.source.width;
        this.height = d * this.source.height;
        c = this.width - e;
        f = this.height - g;
        this.x = Math.max(-c / 2, Math.min(c / 2, this.x));
        return this.y = Math.max(-f / 2, Math.min(f / 2, this.y))
    };
    return b
})(_kw56);
module.exports = this._kw152;
this._kw93 = (function () {
    function a(c, e, d, b) {
        this.x = c;
        this.y = e;
        this.width = d;
        this.height = b;
        this.type = "placeholder"
    }
    a.prototype._kw65 = function (b) {
        return this
    };
    return a
})();
var CalendarRenderer, CalendarStyle, KWC, _kw82, _kw34, __hasProp = {}.hasOwnProperty,
    __extends = function (d, b) {
        for (var a in b) {
            if (__hasProp.call(b, a)) {
                d[a] = b[a]
            }
        }

        function c() {
            this.constructor = d
        }
        c.prototype = b.prototype;
        d.prototype = new c();
        d.__super__ = b.prototype;
        return d
    };
KWC = require("../wrapper.js", KWC);
_kw82 = require("./pageobject.coffee", _kw82);
_kw34 = require("./thumbnailer.coffee", _kw34);
CalendarRenderer = require("./calendar/calendarrenderer.coffee", CalendarRenderer);
CalendarStyle = require("./calendar/calendarstyle.coffee", CalendarStyle);
this.PageCalendar = (function (a) {
    __extends(b, a);

    function b() {
        b.__super__.constructor.call(this, "calendar");
        this.x = 0;
        this.y = 0;
        this.rotation = 0;
        this.render_buffer = null;
        this.buffer_rendered = false;
        this.can_change_ratio = true;
        this.style = CalendarStyle.getDefaultStyle()
    }
    b.prototype.clone = function () {
        var d;
        d = new b();
        d._kw90(this);
        return d
    };
    b.prototype._kw90 = function (c) {
        this._kw70(c);
        this.page = c.page;
        return this.style = c.style
    };
    b.prototype.interpolate = function (e, d, c) {
        this.x = e.x * (1 - c) + d.x * c;
        this.y = e.y * (1 - c) + d.y * c;
        this.width = e.width * (1 - c) + d.width * c;
        this.height = e.height * (1 - c) + d.height * c;
        return this.rotation = e.rotation * (1 - c) + d.rotation * c
    };
    b.prototype._kw65 = function (d) {
        var c;
        if (this.transition_start) {
            c = (d - this.transition_start_time) / (this.transition_end_time - this.transition_start_time);
            if (c >= 0 && c < 1) {
                c = 1 - (1 - c) * (1 - c);
                this.transition_inter.interpolate(this.transition_start, this, c);
                return this.transition_inter
            } else {
                this._kw83()
            }
        }
        return this
    };
    b.prototype.save = function () {
        var c;
        c = b.__super__.save.call(this);
        c.style = this.style;
        return c
    };
    b.prototype.render = function (f) {
        var d, e, c;
        c = Math.round(this.width * f + 3);
        e = Math.round(this.height * f + 3);
        if (!this.render_buffer) {
            this.render_buffer = KWC.createCanvas();
            this.render_buffer.width = c;
            this.render_buffer.height = e
        } else {
            if (c !== this.render_buffer.width || e !== this.render_buffer.height || this.render_buffer_year !== this.page.properties.year || this.render_buffer_month !== this.page.properties.month) {
                this.render_buffer.width = c;
                this.render_buffer.height = e
            } else {
                if (this.buffer_rendered) {
                    return this.render_buffer
                } else {
                    d = this.render_buffer.getContext("2d");
                    d.clearRect(0, 0, c, e)
                }
            }
        }
        this.render_buffer_year = this.page.properties.year;
        this.render_buffer_month = this.page.properties.month;
        new CalendarRenderer(this.style, this.page.creation, this.page.properties.year, this.page.properties.month).render(this.render_buffer);
        this.buffer_rendered = true;
        return this.render_buffer
    };
    b.prototype._kw88 = function (c) {
        return c()
    };
    b.prototype._kw89 = function () {
        return delete this.render_buffer
    };
    b.prototype.load = function (c) {
        b.__super__.load.call(this, c);
        return this.style = c.style
    };
    return b
})(_kw82);
module.exports = this.PageCalendar;
var _kw21, Filters, KWC, _kw82, _kw94, __hasProp = {}.hasOwnProperty,
    __extends = function (d, b) {
        for (var a in b) {
            if (__hasProp.call(b, a)) {
                d[a] = b[a]
            }
        }

        function c() {
            this.constructor = d
        }
        c.prototype = b.prototype;
        d.prototype = new c();
        d.__super__ = b.prototype;
        return d
    };
KWC = require("../wrapper.js", KWC);
Filters = require("./filters/filters.coffee", Filters);
_kw21 = require("./filters/enhance.coffee", _kw21);
_kw82 = require("./pageobject.coffee", _kw82);
_kw94 = require("./thumblist.coffee", _kw94);
this._kw53 = (function (b) {
    __extends(a, b);

    function a(c) {
        this.source = c;
        a.__super__.constructor.call(this, "photo");
        this.cropx = 0;
        this.cropy = 0;
        this.cropw = 1;
        this.croph = 1;
        this.can_change_ratio = true;
        this.render_buffer = null;
        this.enhance = false;
        this.frame = null;
        this.filters = [];
        this.filter_chain = [];
        this.locks.push({
            id: "lock_change_photo",
            name: "Lock Change Photo"
        })
    }
    a.prototype.canChangePhoto = function () {
        return !this.isLocked("lock_change_photo")
    };
    a.prototype.clone = function () {
        var d;
        d = new a(this.source);
        d._kw90(this);
        return d
    };
    a.prototype._kw95 = function () {
        return this.enhance
    };
    a.prototype._kw64 = function (d) {
        var h, g, c, e;
        e = this.filters;
        for (g = 0, c = e.length; g < c; g++) {
            h = e[g];
            if (h.id === d.id) {
                return
            }
        }
        return this.filters.push(d.clone())
    };
    a.prototype._kw96 = function (e) {
        var j, d, h, c, g;
        g = this.filters;
        for (d = h = 0, c = g.length; h < c; d = ++h) {
            j = g[d];
            if (j.id === e.id) {
                this.filters.splice(d, 1);
                return
            }
        }
    };
    a.prototype._kw63 = function (e) {
        var p, r, g, o, l, k, h, q, d, c, m, j;
        if (this.frame && this.frame.attr.filter) {
            g = this.frame.attr.filter.split("-");
            for (l = 0, q = g.length; l < q; l++) {
                p = g[l];
                m = this.filters;
                for (o = k = 0, d = m.length; k < d; o = ++k) {
                    r = m[o];
                    if (p === r.id) {
                        this.filters.splice(o, 1);
                        break
                    }
                }
            }
        }
        this.frame = e;
        if (this.frame && this.frame.attr.filter) {
            g = this.frame.attr.filter.split("-");
            j = [];
            for (h = 0, c = g.length; h < c; h++) {
                p = g[h];
                j.push(this._kw64(Filters[p]))
            }
            return j
        }
    };
    a.prototype._kw90 = function (c) {
        this.source = c.source;
        this._kw70(c);
        return this.page = c.page
    };
    a.prototype._kw70 = function (i) {
        var h, g, d, e, c;
        a.__super__._kw70.call(this, i);
        this.cropx = i.cropx;
        this.cropy = i.cropy;
        this.cropw = i.cropw;
        this.croph = i.croph;
        this.frame = i.frame;
        this.enhance = i.enhance;
        this.filters = [];
        e = i.filters;
        c = [];
        for (g = 0, d = e.length; g < d; g++) {
            h = e[g];
            c.push(this.filters.push(h.clone()))
        }
        return c
    };
    a.prototype.interpolate = function (e, d, c) {
        this.x = e.x * (1 - c) + d.x * c;
        this.y = e.y * (1 - c) + d.y * c;
        this.width = e.width * (1 - c) + d.width * c;
        this.height = e.height * (1 - c) + d.height * c;
        this.rotation = e.rotation * (1 - c) + d.rotation * c;
        this.cropx = e.cropx * (1 - c) + d.cropx * c;
        this.cropy = e.cropy * (1 - c) + d.cropy * c;
        this.cropw = e.cropw * (1 - c) + d.cropw * c;
        this.croph = e.croph * (1 - c) + d.croph * c;
        this.frame = c > 0.5 ? d.frame : e.frame;
        return this.source = d.source
    };
    a.prototype._kw65 = function (d) {
        var c;
        if (this.transition_start) {
            c = (d - this.transition_start_time) / (this.transition_end_time - this.transition_start_time);
            if (c >= 0 && c < 1) {
                c = 1 - (1 - c) * (1 - c);
                this.transition_inter.interpolate(this.transition_start, this, c);
                return this.transition_inter
            } else {
                this._kw83()
            }
        }
        return this
    };
    a.prototype.checkOrientation = function (c) {

        if (c.orientation == null) {
            c.orientation = 1
        }
        switch (c.orientation) {
            case 5:
            case 6:
            case 7:
            case 8:
                c.owidth = c.height;
                return c.oheight = c.width;
            default:
                c.owidth = c.width;
                return c.oheight = c.height
        }
    };
    a.prototype._kw72 = function () {
        var g, i, f, e, d, c, j;
        if (!this.canChangeRatio()) {
            this.checkOrientation(this.source);
            this.cropx = 0;
            this.cropy = 0;
            this.cropw = 1;
            this.croph = 1;
            f = Math.min(this.width / this.source.owidth, this.height / this.source.oheight);
            this.width = f * this.source.owidth;
            this.height = f * this.source.oheight;
            return this.can_move_crop = false
        } else {
            if (this.source && this.width > 0 && this.height > 0) {
                this.checkOrientation(this.source);
                f = this.width / this.height;
                e = this.source.owidth / this.source.oheight;
                c = this.cropx + this.cropw / 2;
                j = this.cropy + this.croph / 2;
                d = this.cropw;
                g = this.croph;
                if (f >= e) {
                    d = 1;
                    g = e / f;
                    c = 0 + d / 2;
                    j = (1 - e / f) / 2 + g / 2
                } else {
                    d = f / e;
                    g = 1;
                    c = (1 - f / e) / 2 + d / 2;
                    j = 0 + g / 2
                }
                i = Math.max(this.cropw / d, this.croph / g);
                i = Math.min(i, 1 / d);
                i = Math.min(i, 1 / g);
                d = d * i;
                g = g * i;
                c = Math.max(d / 2, Math.min(1 - d / 2, this.cropx + this.cropw / 2));
                j = Math.max(g / 2, Math.min(1 - g / 2, this.cropy + this.croph / 2));
                this.cropx = c - d / 2;
                this.cropy = j - g / 2;
                this.cropw = d;
                this.croph = g;
                return this.can_move_crop = this.cropw < 0.99 || this.croph < 0.99
            }
        }
    };
    a.prototype._kw77 = function () {
        return Math.min(1 / this.cropw, 1 / this.croph)
    };
    a.prototype._kw97 = function (c) {
        var d;
        c = Math.max(1, Math.min(2, c));
        d = this._kw77() / c;
        this.cropw *= d;
        this.croph *= d;
        this.cropx = (this.cropx - 0.5) * d + 0.5;
        this.cropy = (this.cropy - 0.5) * d + 0.5;
        return this._kw72()
    };
    a.prototype.divide = function (g, k, l) {
        var s, q, j, d, o, e, i, f, c, r, m;
        if (k == null) {
            k = 2
        }
        if (l == null) {
            l = true
        }
        if (l) {
            this._kw52()
        }
        d = this.clone();
        e = 1;
        o = 1;
        if (this.frame) {
            e = 100 / (100 - this.frame.attr.left - this.frame.attr.right);
            o = 100 / (100 - this.frame.attr.top - this.frame.attr.bottom);
            if (this.frame.attr.align) {
                e *= (100 - this.frame.attr.align.left - this.frame.attr.align.right) / 100;
                o *= (100 - this.frame.attr.align.top - this.frame.attr.align.bottom) / 100
            }
        }
        i = Math.cos(-this.rotation / 180 * Math.PI);
        f = Math.sin(-this.rotation / 180 * Math.PI);
        c = -Math.sin(-this.rotation / 180 * Math.PI);
        r = Math.cos(-this.rotation / 180 * Math.PI);
        g = Math.min(Math.max(this.width, this.height) / 4, g);
        if (k === 2) {
            if (this.width > this.height) {
                m = (this.width * e - g) * 0.5 / e;
                s = this.width * e * 0.5 - m * e * 0.5;
                this.width = m;
                d.width = m;
                d.x = this.x + s * i;
                d.y = this.y + s * f;
                this.x = this.x - s * i;
                this.y = this.y - s * f;
                d.height = this.height;
                this.page.insertBefore(d, this);
                return d
            } else {
                j = (this.height * o - g) * 0.5 / o;
                q = this.height * 0.5 * o - j * 0.5 * o;
                this.height = j;
                d.height = j;
                d.y = this.y + q * r;
                d.x = this.x + q * c;
                this.y = this.y - q * r;
                this.x = this.x - q * c;
                d.width = this.width;
                this.page.insertBefore(d, this);
                return d
            }
        } else {
            if (this.width > this.height) {
                m = (this.width * e - 2 * g) / 3 / e;
                s = this.width * 0.5 * e - m * 0.5 * e;
                this.width = m;
                d.width = m;
                d.x = this.x - s * i;
                d.y = this.y - s * f;
                d.height = this.height;
                this.page.insertBefore(d, this);
                d = d.clone();
                d.x = this.x + s * i;
                d.y = this.y + s * f;
                this.page.insertBefore(d, this);
                return d
            } else {
                j = (this.height * o - 2 * g) / 3 / o;
                q = this.height * o * 0.5 - j * 0.5 * o;
                this.height = j;
                d.height = j;
                d.y = this.y - q * r;
                d.x = this.x - q * c;
                d.width = this.width;
                this.page.insertBefore(d, this);
                d = d.clone();
                d.y = this.y + q * r;
                d.x = this.x + q * c;
                this.page.insertBefore(d, this);
                return d
            }
        }
    };
    a.prototype.canChangeRatio = function () {
        if ((this.source != null) && (this.source.stats != null) && (this.source.stats.alpha != null) && this.source.stats.alpha <= 254) {
            return false
        } else {
            return true
        }
    };
    a.prototype._kw98 = function () {
        var o, r, d, m, p, k, j, g, q, c, l, h, e;
        d = [];
        if (this.enhance) {
            d.push(new _kw21())
        }
        l = this.filters;
        for (k = 0, q = l.length; k < q; k++) {
            r = l[k];
            d.push(r)
        }
        p = true;
        for (m = j = 0, h = Math.max(d.length, this.filter_chain.length) - 1; 0 <= h ? j <= h : j >= h; m = 0 <= h ? ++j : --j) {
            if (d[m] !== this.filter_chain[m]) {
                p = false
            }
        }
        if (!p) {
            this.filter_chain = d;
            e = this.filter_chain;
            for (m = g = 0, c = e.length; g < c; m = ++g) {
                o = e[m];
                this.filter_chain[m] = o.clone()
            }
        }
        return this.filter_chain
    };
    a.prototype._kw99 = function () {
        var h, e, d, g, c;
        d = "";
        e = this._kw98();
        for (g = 0, c = e.length; g < c; g++) {
            h = e[g];
            d += h.signature();
            if (h.cropped) {
                d += this.cropx;
                d += this.cropy;
                d += this.cropw;
                d += this.croph
            }
        }
        return d
    };
    a.prototype._kw100 = function (d) {
        var h, i, e, g, c;
        e = this._kw98();
        i = this._kw99();
        if (e.length > 0) {
            if (this.source.filtered != null) {
                if (this.source.filterid === i && this.source.filtered.width === d.width) {
                    return this.source.filtered
                } else {
                    if (this.page.updating && this.source.filterid === i) {
                        this.render_buffer_cropw = 0;
                        return this.source.filtered
                    }
                }
            }
            if (this.buffers_to_clear != null) {
                this.buffers_to_clear.push(d)
            }
            for (g = 0, c = e.length; g < c; g++) {
                h = e[g];
                d = h._kw8(d, this.cropx, this.cropy, this.cropw, this.croph);
                if (this.buffers_to_clear != null) {
                    this.buffers_to_clear.push(d)
                }
            }
            this.source.filtered = d;
            this.source.filterid = i
        }
        return d
    };
    a.prototype._kw101 = function (g, f, o) {
        var q, e, j, l, s, k, d, i, c, m, p;
        if (this.frame) {
            s = (function (h) {
                return function () {
                    h.render_buffer_cropw = 0;
                    return h.page.updated()
                }
            })(this);
            if (this.frame.imageloader) {
                q = this.frame.imageloader.loaded_image
            } else {
                q = this.frame.thumblist._kw39(Math.max(g.width, g.height), s)
            } if ((q != null) && q.complete) {
                d = this.frame.attr.type.length / 2;
                e = q.height / d;
                l = q.width;
                j = this.frame.attr.type.indexOf(o) / 2;
                p = g.width - 2;
                k = g.height - 2;
                if (this.frame.attr.fit === "tile") {
                    m = p / k;
                    c = this.frame.width / this.frame.height;
                    if (m > c) {
                        i = (k * c * 0.25) | 0;
                        f.drawImage(q, 0, j * e, l * 0.25, e, 1, 1, i, k);
                        f.drawImage(q, l * 0.25, j * e, l * 0.5, e, 1 + i, 1, p - 2 * i, k);
                        return f.drawImage(q, l * 0.75, j * e, l * 0.25, e, 1 + p - i, 1, i, k)
                    } else {
                        i = (p / c * 0.25) | 0;
                        f.drawImage(q, 0, j * e, l, e * 0.25, 1, 1, p, i);
                        f.drawImage(q, 0, j * e + e * 0.25, l, e * 0.5, 1, 1 + i, p, k - 2 * i);
                        return f.drawImage(q, 0, j * e + e * 0.75, l, e * 0.25, 1, 1 + k - i, p, i)
                    }
                } else {
                    return f.drawImage(q, 0, j * e, l, e, 1, 1, p, k)
                }
            }
        }
    };
    a.prototype._kw102 = function (d) {
        var e, c;
        c = null;
        if (this.source.imageloader) {
            return this.source.imageloader.loaded_image
        } else {
            if (this.source.thumbs) {
                e = (function (f) {
                    return function () {
                        f.render_buffer_cropw = 0;
                        return f.page.updated()
                    }
                })(this);
                return this.source.thumbs._kw39(d, e)
            } else {
                if (this.source.online) {
                    if (!this.source.online_thumb_list) {
                        this.source.online_thumb_list = new _kw94(this.source.online_thumbs, this.source.online_url)
                    }
                    e = (function (f) {
                        return function () {
                            f.render_buffer_cropw = 0;
                            return f.page.updated()
                        }
                    })(this);
                    return this.source.online_thumb_list._kw39(d, e)
                }
            }
        }
    };
    a.prototype.render = function (f) {
        var d, u, c, l, q, j, i, g, t, e, o, v, s, r, m, k, p;
        this._kw72();
        p = this.width;
        o = this.height;
        i = 0;
        g = 0;
        j = 1;
        q = 1;
        if (this.frame) {
            i = this.frame.attr.left * 0.01;
            g = this.frame.attr.top * 0.01;
            j = 1 - (this.frame.attr.left + this.frame.attr.right) * 0.01;
            q = 1 - (this.frame.attr.top + this.frame.attr.bottom) * 0.01;
            if (this.frame.attr.fit === "tile") {
                s = p / o;
                r = this.frame.width / this.frame.height;
                if (s > r) {
                    i = this.frame.attr.left * 0.01 * r / s;
                    j = 1 - (this.frame.attr.left + this.frame.attr.right) * 0.01 * r / s
                } else {
                    g = this.frame.attr.top * 0.01 * s / r;
                    q = 1 - (this.frame.attr.top + this.frame.attr.bottom) * 0.01 * s / r
                }
            }
            p = p / j;
            o = o / q
        }
        m = (p * f + 2.5) | 0;
        t = (o * f + 2.5) | 0;
        l = this._kw99();
        if (!this.render_buffer) {
            this.render_buffer = KWC.createCanvas();
            this.render_buffer.width = m;
            this.render_buffer.height = t
        } else {
            if (m !== this.render_buffer.width || t !== this.render_buffer.height) {
                this.render_buffer.width = m;
                this.render_buffer.height = t
            } else {
                if (this.cropw === this.render_buffer_cropw && this.croph === this.render_buffer_croph && this.cropx === this.render_buffer_cropx && this.cropy === this.render_buffer_cropy && this.frame === this.render_buffer_frame && ((!this.frame) || this.frame.thumblist.load_status === this.render_buffer_frame_load) && (this.source ? this.source.id : false) === this.render_buffer_source && l === this.render_buffer_filters) {
                    return this.render_buffer
                } else {
                    this.render_buffer.getContext("2d").clearRect(0, 0, this.render_buffer.width, this.render_buffer.height)
                }
            }
        }
        u = this.render_buffer.width;
        d = this.render_buffer.height;
        if (this.source) {
            v = this._kw102(Math.max(this.width * f / this.cropw, this.height * f / this.croph))
        }
        if ((v && (v.complete || !(v instanceof HTMLImageElement))) || !this.source) {
            this.render_buffer_cropw = this.cropw;
            this.render_buffer_croph = this.croph;
            this.render_buffer_cropx = this.cropx;
            this.render_buffer_cropy = this.cropy;
            this.render_buffer_filters = l;
            this.render_buffer_frame = this.frame;
            this.render_buffer_frame_load = this.frame ? this.frame.thumblist.load_status : -1;
            this.render_buffer_source = this.source ? this.source.id : false;
            if (v && v.width > 0 && v.height > 0) {
                v = this._kw100(v)
            }
            c = this.render_buffer.getContext("2d");
            c.save();
            if (this.frame && this.frame.attr.type.indexOf("mk") >= 0) {
                this._kw101(this.render_buffer, c, "mk");
                c.globalCompositeOperation = "source-in"
            }
            c.translate(m / 2, t / 2);
            c.translate((i + j / 2 - 0.5) * u, (g + q / 2 - 0.5) * d);
            this.render_buffer_dx = -(i + j / 2 - 0.5) * u;
            this.render_buffer_dy = -(g + q / 2 - 0.5) * d;
            m = this.width * f;
            t = this.height * f;
            c.beginPath();
            c.rect(-m / 2, -t / 2, m, t);
            c.clip();
            k = m / this.cropw;
            e = t / this.croph;
            if (v) {
                this.checkOrientation(this.source);
                switch (this.source.orientation) {
                    case 8:
                        c.rotate(-Math.PI * 0.5);
                        c.drawImage(v, -t / 2 - e * this.cropy, -m / 2 - k * this.cropx, e, k);
                        c.rotate(Math.PI * 0.5);
                        break;
                    case 6:
                        c.rotate(Math.PI * 0.5);
                        c.drawImage(v, -t / 2 - e * this.cropy, -m / 2 - k * this.cropx, e, k);
                        c.rotate(-Math.PI * 0.5);
                        break;
                    case 3:
                        c.rotate(Math.PI);
                        c.drawImage(v, -m / 2 - k * this.cropx, -t / 2 - e * this.cropy, k, e);
                        c.rotate(-Math.PI);
                        break;
                    case 2:
                        c.scale(-1, 1);
                        c.drawImage(v, -m / 2 - k * this.cropx, -t / 2 - e * this.cropy, k, e);
                        c.scale(-1, 1);
                        break;
                    case 4:
                        c.scale(1, -1);
                        c.drawImage(v, -m / 2 - k * this.cropx, -t / 2 - e * this.cropy, k, e);
                        c.scale(1, -1);
                        break;
                    case 5:
                        c.scale(1, -1);
                        c.rotate(-Math.PI * 0.5);
                        c.drawImage(v, -t / 2 - e * this.cropy, -m / 2 - k * this.cropx, e, k);
                        c.rotate(Math.PI * 0.5);
                        c.scale(1, -1);
                        break;
                    case 7:
                        c.scale(-1, 1);
                        c.rotate(-Math.PI * 0.5);
                        c.drawImage(v, -t / 2 - e * this.cropy, -m / 2 - k * this.cropx, e, k);
                        c.rotate(Math.PI * 0.5);
                        c.scale(-1, 1);
                        break;
                    default:
                        c.drawImage(v, -m / 2 - k * this.cropx, -t / 2 - e * this.cropy, k, e)
                }
            } else {
                c.globalAlpha = 0.5;
                c.fillStyle = "#888";
                c.fillRect(-m / 2 - k * this.cropx, -t / 2 - e * this.cropy, k, e)
            }
            c.restore();
            if (this.frame) {
                if (this.frame.attr.type.indexOf("fg") >= 0) {
                    this._kw101(this.render_buffer, c, "fg")
                }
                if (this.frame.attr.type.indexOf("bg") >= 0) {
                    c.save();
                    c.globalCompositeOperation = "destination-over";
                    this._kw101(this.render_buffer, c, "bg");
                    c.restore()
                }
            }
        }
        return this.render_buffer
    };
    a.prototype._kw103 = function () {
        var f, e, c, d;
        d = this.page.objects;
        for (e = 0, c = d.length; e < c; e++) {
            f = d[e];
            if (f !== this && f.type === "photo") {
                if (f.background) {
                    f._kw69()
                }
            }
        }
        this._kw52();
        if (this.page.view && this.page.view.properties.hide_left) {
            this.x = this.page.width * 0.25;
            this.y = 0;
            this.width = this.page.width / 2 + this.page.spec.bleed.left + this.page.spec.bleed.right;
            this.height = this.page.height + this.page.spec.bleed.top + this.page.spec.bleed.bottom
        } else {
            if (this.page.view && this.page.view.properties.hide_right) {
                this.x = -this.page.width * 0.25;
                this.y = 0;
                this.width = this.page.width / 2 + this.page.spec.bleed.left + this.page.spec.bleed.right;
                this.height = this.page.height + this.page.spec.bleed.top + this.page.spec.bleed.bottom
            } else {
                this.x = 0;
                this.y = 0;
                this.width = this.page.width + this.page.spec.bleed.left + this.page.spec.bleed.right;
                this.height = this.page.height + this.page.spec.bleed.top + this.page.spec.bleed.bottom
            }
        }
        this.rotation = 0;
        this._kw72();
        return this.page._kw85(this)
    };
    a.prototype.orientationFix = function () {
        if (this.source != null) {
            switch (this.source.orientation) {
                case 8:
                    return {
                        x: 1,
                        y: -1
                    };
                case 3:
                    return {
                        x: -1,
                        y: -1
                    };
                case 6:
                    return {
                        x: -1,
                        y: 1
                    };
                default:
                    return {
                        x: 1,
                        y: 1
                    }
            }
        } else {
            return {
                x: 1,
                y: 1
            }
        }
    };
    a.prototype._kw69 = function () {
        this._kw52();
        this.background = false;
        this.width = this.page.width / 4;
        this.height = this.page.height / 4;
        this._kw54();
        this._kw72();
        return this.page._kw84(this)
    };
    a.prototype.action = function (d) {
        var c, e;
        a.__super__.action.call(this, d);
        switch (d.action) {
            case "rotate":
                if (this.source != null) {
                    c = (function (f) {
                        return function () {
                            f.checkOrientation(f.source);
                            f.source.orientation = (function () {
                                switch (this.source.orientation) {
                                    case 1:
                                        return 6;
                                    case 6:
                                        return 3;
                                    case 3:
                                        return 8;
                                    case 8:
                                        return 1;
                                    case 2:
                                        return 5;
                                    case 5:
                                        return 4;
                                    case 4:
                                        return 7;
                                    case 7:
                                        return 2;
                                    default:
                                        return 1
                                }
                            }).call(f);
                            f._kw72();
                            f.page.updated();
                            return manager.updatePhotoSource(f.source)
                        }
                    })(this);
                    e = (function (f) {
                        return function () {
                            f.checkOrientation(f.source);
                            f.source.orientation = (function () {
                                switch (this.source.orientation) {
                                    case 6:
                                        return 1;
                                    case 3:
                                        return 6;
                                    case 8:
                                        return 3;
                                    case 1:
                                        return 8;
                                    case 5:
                                        return 2;
                                    case 4:
                                        return 5;
                                    case 7:
                                        return 4;
                                    case 2:
                                        return 7;
                                    default:
                                        return 1
                                }
                            }).call(f);
                            f._kw72();
                            f.page.updated();
                            return manager.updatePhotoSource(f.source)
                        }
                    })(this);
                    c();
                    return this.page.editor._kw45({
                        undo: e,
                        redo: c
                    })
                }
                break;
            case "zoom_start":
                return this.page._kw74();
            case "zoom":
                if (Math.abs(this._kw77() - d.value) > 0.0001) {
                    this._kw52();
                    this._kw97(d.value);
                    return this.page.updated()
                }
                break;
            case "zoom_end":
                return this.page._kw76();
            case "enhance":
                this.page._kw55((function (f) {
                    return function () {
                        return f.enhance = d.value
                    }
                })(this));
                return this.page.updated();
            case "background":
                this.page._kw55((function (f) {
                    return function () {
                        f.background = d.value;
                        if (f.background) {
                            return f._kw103()
                        } else {
                            return f._kw69()
                        }
                    }
                })(this));
                return this.page.updated();
            case "remove_frame":
                this.page._kw55((function (f) {
                    return function () {
                        return f._kw63(null)
                    }
                })(this));
                return this.page.updated();
            case "remove_filter":
                this.page._kw55((function (f) {
                    return function () {
                        return f._kw96(d.value)
                    }
                })(this));
                return this.page.updated();
            case "add_filter":
                this.page._kw55((function (f) {
                    return function () {
                        return f._kw64(d.value)
                    }
                })(this));
                return this.page.updated();
            case "set_frame":
                this.page._kw55((function (f) {
                    return function () {
                        return f._kw63(d.value)
                    }
                })(this));
                return this.page.updated();
            case "start_filter_update":
                return this.page._kw74();
            case "filter_update":
                break;
            case "end_filter_update":
                this.page._kw76();
                return this.page.updated()
        }
    };
    a.prototype.deleteAction = function () {
        if (this.source === null || (this.canDelete() && !this.canChangePhoto())) {
            return this.page._kw86(this)
        } else {
            this.source = null;
            this.page.creation._kw166();
            manager._kw60(this);
            return this.page.updated()
        }
    };
    a.prototype.save = function (check) {
        check = typeof check !== 'undefined' ? check : 1;
        var d, c;
        var online = true;
        if (this.source && !this.source.online) {
            if (check) {
                return null
            }
            online = false;
        }

        c = a.__super__.save.call(this);
        c.cropx = this.cropx;
        c.cropy = this.cropy;
        c.cropw = this.cropw;
        c.croph = this.croph;
        c.enhance = this.enhance;
        if (this.source) {
            this.checkOrientation(this.source);
            c.source = {
                id: this.source.id,
                width: this.source.width,
                height: this.source.height,
                orientation: this.source.orientation,
                online: online,
                online_url: this.source.online_url,
                online_thumbs: this.source.online_thumbs,
                stats: this.source.stats,
                filename: this.source.filename,
                date: this.source.date,
                thumbindex: this.source.thumbindex
            }
        }
        if (this.frame) {
            c.frame = {
                id: this.frame.id,
                width: this.frame.width,
                height: this.frame.height,
                attr: this.frame.attr,
                thumblist: this.frame.thumblist.save(),
                original: this.frame.original
            }
        }
        c.filters = (function () {
            var h, f, g, e;
            g = this.filters;
            e = [];
            for (h = 0, f = g.length; h < f; h++) {
                d = g[h];
                e.push(d.save())
            }
            return e
        }).call(this);
        return c
    };
    a.prototype.load = function (h) {
        var g, i, e, c, d;
        a.__super__.load.call(this, h);
        if (this.source) {
            this.cropx = h.cropx;
            this.cropy = h.cropy;
            this.cropw = h.cropw;
            this.croph = h.croph;
            if (h.orientation != null) {
                this.orientation = h.orientation
            }
        }
        if (h.enhance != null) {
            this.enhance = h.enhance
        }
        d = h.filters;
        for (e = 0, c = d.length; e < c; e++) {
            g = d[e];
            i = Filters[g.id];
            if (i) {
                i = i.clone();
                i._kw11(g.parameters);
                this._kw64(i)
            }
        }
        if (h.frame) {
            return this.frame = {
                imageloader: h.frame.imageloader,
                id: h.frame.id,
                width: h.frame.width,
                height: h.frame.height,
                attr: h.frame.attr,
                thumblist: new _kw94(h.frame.thumblist),
                original: h.frame.original
            }
        }
    };
    a.prototype._kw61 = function (k, j) {
        var e, d, f, i, g, h, c;
        try {
            if (this.frame && this.frame.attr.type.indexOf("mk") >= 0) {
                g = this.frame.thumblist.list[0]._kw92();
                h = this.frame.attr.type.indexOf("mk") / 2;
                c = this.frame.attr.type.length / 2;
                if (g.complete && g.width > 0 && g.height > 0) {
                    e = KWC.createCanvas();
                    e.width = g.width;
                    e.height = g.height / c;
                    d = e.getContext("2d");
                    d.drawImage(g, 0, -e.height * h, e.width, g.height);
                    f = d.getImageData(0, 0, e.width, e.height);
                    h = ((k * g.width) | 0) + ((j * e.height) | 0) * g.width;
                    return f.data[h * 4 + 3] >= 64
                } else {
                    return true
                }
            } else {
                return true
            }
        } catch (l) {
            i = l;
            return true
        }
    };
    a.prototype._kw88 = function (d) {
        var c;
        this.buffers_to_clear = [];
        if (this.source) {
            c = (function (e) {
                return function () {
                    if ((e.source.imageloader.loaded_image && e.source.imageloader.loaded_image.complete) && ((!e.frame) || (e.frame.imageloader.loaded_image && e.frame.imageloader.loaded_image.complete))) {
                        return d()
                    }
                }
            })(this);
            this.source.imageloader.get_image(c);
            if (this.frame) {
                return this.frame.imageloader.get_image(c)
            }
        } else {
            return d()
        }
    };
    a.prototype._kw89 = function () {
        var c, e, d;
        if (this.frame) {
            delete this.frame.imageloader.loaded_image
        }
        delete this.source.imageloader.loaded_image;
        if (this.render_buffer) {
            this.render_buffer.width = 0;
            this.render_buffer.height = 0;
            this.render_buffer.getContext("2d");
            delete this.render_buffer
        }
        for (c = e = 0, d = this.buffers_to_clear.length - 1; e <= d; c = e += 1) {
            this.buffers_to_clear[c].width = 0;
            this.buffers_to_clear[c].height = 0;
            if (this.buffers_to_clear[c].getContext != null) {
                this.buffers_to_clear[c].getContext("2d")
            }
            delete this.buffers_to_clear[c]
        }
        return delete this.buffers_to_clear
    };
    a.prototype._kw202 = function () {
        if (KWP_CONF.lowres_warning_dpi_ratio == null) {
            return false
        }
        if (KWP_CONF.lowres_warning_pixelsize == null) {
            return false
        }
        if (!this.source) {
            return false
        }
        this.checkOrientation(this.source);
        if (this.source.owidth / (this.width / this.cropw / 25.4) < this.page.spec.dpi * KWP_CONF.lowres_warning_dpi_ratio && this.source.width * this.source.height < KWP_CONF.lowres_warning_pixelsize) {
            return true
        }
        return false
    };
    a.prototype._kw217 = function () {
        var c;
        if (this.page && this.source) {
            c = this.page._kw218(this.source);
            if (this.source._kw178) {
                return this.source._kw178(c)
            }
        }
    };
    a.prototype._kw180 = function () {
        this.cropx = 0;
        this.cropy = 0;
        this.cropw = 1;
        this.croph = 1;
        this._kw72();
        if (this.source && this.source.stats && this.source.stats.center) {
            this.cropx = Math.max(0, Math.min(1 - this.cropw, this.source.stats.center.x - this.cropw / 2));
            return this.cropy = Math.max(0, Math.min(1 - this.croph, this.source.stats.center.y - this.croph / 2))
        }
    };
    a.prototype.reduceCrop = function () {
        var e, f, d, c, g;
        if (this.cropw < 0.7) {
            g = this.y - this.height / 2;
            e = this.height;
            this.height = e * (this.cropw + 0.3);
            f = Math.random();
            if (this.y > 0.1) {
                this.y = g + this.height / 2
            } else {
                if (this.y < -0.1) {
                    this.y = g + e - this.height / 2
                }
            }
            return this._kw180()
        } else {
            if (this.croph < 0.7) {
                c = this.x - this.width / 2;
                d = this.width;
                this.width = d * (this.croph + 0.3);
                f = Math.random();
                if (this.page.creation.product instanceof Book) {
                    if ((this.x > 0.1 && this.x > this.page.width / 4 + 0.1) || (this.x < -0.1 && this.x > -this.page.width / 4 + 0.1)) {
                        this.x = c + this.width / 2
                    } else {
                        if ((this.x > 0.1 && this.x < this.page.width / 4 - 0.1) || (this.x < -0.1 && this.x < -this.page.width / 4 - 0.1)) {
                            this.x = c + d - this.width / 2
                        }
                    }
                } else {
                    if (this.x > 0.1) {
                        this.x = c + this.width / 2
                    } else {
                        if (this.x < -0.1) {
                            this.x = c + d - this.width / 2
                        }
                    }
                }
                return this._kw180()
            }
        }
    };
    a.prototype.insertSource = function (d) {
        var c;
        this.source = d;
        this.checkOrientation(this.source);
        c = Math.min(this.width / this.source.owidth, this.height / this.source.oheight);
        this.width = c * this.source.owidth;
        this.height = c * this.source.oheight;
        return this.page.updated()
    };
    return a
})(_kw82);
module.exports = this._kw53;
var KWC, _kw82, _kw94, __hasProp = {}.hasOwnProperty,
    __extends = function (d, b) {
        for (var a in b) {
            if (__hasProp.call(b, a)) {
                d[a] = b[a]
            }
        }

        function c() {
            this.constructor = d
        }
        c.prototype = b.prototype;
        d.prototype = new c();
        d.__super__ = b.prototype;
        return d
    };
_kw82 = require("./pageobject.coffee", _kw82);
KWC = require("../wrapper.js", KWC);
_kw94 = require("./thumblist.coffee", _kw94);
this._kw59 = (function (a) {
    __extends(b, a);

    function b() {
        b.__super__.constructor.call(this, "text");
        this.frame = null;
        this.can_change_ratio = true;
        this.render_buffer = null;
        this.text = "";
        this.font_name = "Arial";
        this.font_size = 16;
        this.align = "left";
        this.color = "rgb(0,0,0)";
        this.fixedonce = true;
        this.current_edit = null;
        this.placeholder_text = "";
        this.locks.push({
            id: "lock_text_style",
            name: "Lock Text Style"
        });
        this.locks.push({
            id: "lock_text_contents",
            name: "Lock Text Contents"
        })
    }
    b.prototype.canChangeTextStyle = function () {
        return !this.isLocked("lock_text_style")
    };
    b.prototype.canChangeText = function () {
        return !this.isLocked("lock_text_contents")
    };
    b.prototype.clone = function () {
        var d;
        d = new b();
        d._kw90(this);
        return d
    };
    b.prototype._kw90 = function (c) {
        this._kw70(c);
        return this.page = c.page
    };
    b.prototype._kw70 = function (c) {
        b.__super__._kw70.call(this, c);
        this.frame = c.frame;
        this.text = c.text;
        if (c.placeholder_text != null) {
            this.placeholder_text = c.placeholder_text
        }
        this.font_name = c.font_name;
        this.font_size = c.font_size;
        this.color = c.color;
        return this.align = c.align
    };
    b.prototype.interpolate = function (e, d, c) {
        this.x = e.x * (1 - c) + d.x * c;
        this.y = e.y * (1 - c) + d.y * c;
        this.width = e.width * (1 - c) + d.width * c;
        this.height = e.height * (1 - c) + d.height * c;
        this.rotation = e.rotation * (1 - c) + d.rotation * c;
        return this.frame = c > 0.5 ? d.frame : e.frame
    };
    b.prototype._kw52 = function (d, c) {
        this.transition_start_time = d;
        this.transition_end_time = c;
        this.transition_start = this.clone();
        return this.transition_inter = this.clone()
    };
    b.prototype._kw83 = function () {
        this.transition_start = null;
        return this.transition_inter = null
    };
    b.prototype._kw65 = function (d) {
        var c;
        if (this.transition_start) {
            c = (d - this.transition_start_time) / (this.transition_end_time - this.transition_start_time);
            if (c >= 0 && c < 1) {
                c = 1 - (1 - c) * (1 - c);
                this.transition_inter.interpolate(this.transition_start, this, c);
                return this.transition_inter
            } else {
                this._kw83()
            }
        }
        return this
    };
    b.prototype._kw101 = function (g, f, o) {
        var q, e, j, l, s, k, d, i, c, m, p;
        if (this.frame) {
            s = (function (h) {
                return function () {
                    h.render_buffer_frame = 1;
                    return h.page.updated()
                }
            })(this);
            if (this.frame.imageloader) {
                q = this.frame.imageloader.loaded_image
            } else {
                q = this.frame.thumblist._kw39(Math.max(g.width, g.height), s)
            } if ((q != null) && q.complete) {
                d = this.frame.attr.type.length / 2;
                e = (q.naturalHeight || q.height) / d;
                l = q.naturalWidth || q.width;
                j = this.frame.attr.type.indexOf(o) / 2;
                p = g.width - 2;
                k = g.height - 2;
                if (this.frame.attr.fit === "tile") {
                    m = p / k;
                    c = this.frame.width / this.frame.height;
                    if (m > c) {
                        i = (k * c * 0.25) | 0;
                        f.drawImage(q, 0, j * e, l * 0.25, e, 1, 1, i, k);
                        f.drawImage(q, l * 0.25, j * e, l * 0.5, e, 1 + i, 1, p - 2 * i, k);
                        return f.drawImage(q, l * 0.75, j * e, l * 0.25, e, 1 + p - i, 1, i, k)
                    } else {
                        i = (p / c * 0.25) | 0;
                        f.drawImage(q, 0, j * e, l, e * 0.25, 1, 1, p, i);
                        f.drawImage(q, 0, j * e + e * 0.25, l, e * 0.5, 1, 1 + i, p, k - 2 * i);
                        return f.drawImage(q, 0, j * e + e * 0.75, l, e * 0.25, 1, 1 + k - i, p, i)
                    }
                } else {
                    return f.drawImage(q, 0, j * e, l, e, 1, 1, p, k)
                }
            }
        }
    };
    b.prototype.replacedText = function (c) {
        var d;
        if (c == null) {
            c = false
        }
        if (c && this.text.length === 0 && (this.placeholder_text != null)) {
            return KWC.translate(this.placeholder_text)
        }
        d = this.text;
        if ((this.page.properties.month != null) && d.match(/%MONTH%/g)) {
            d = d.replace(/%MONTH%/g, this.page.creation.properties.month_names[this.page.properties.month]).toUpperCase()
        }
        if (this.page.properties.year != null) {
            d = d.replace(/%YEAR%/g, "" + this.page.properties.year)
        }
        return d
    };
    b.prototype.render = function (o) {
        var j, M, g, H, r, q, p, L, E, J, G, P, K, I, C, D, l, B, c, A, F, z, m, v, f, e, d, N, O, u;
        F = this.width;
        E = this.height;
        q = 0;
        p = 0;
        r = 1;
        H = 1;
        this.render_buffer_dx = 0;
        this.render_buffer_dy = 0;
        if (this.frame) {
            q = this.frame.attr.left * 0.01;
            p = this.frame.attr.top * 0.01;
            r = 1 - (this.frame.attr.left + this.frame.attr.right) * 0.01;
            H = 1 - (this.frame.attr.top + this.frame.attr.bottom) * 0.01;
            if (this.frame.attr.fit === "tile") {
                K = F / E;
                I = this.frame.width / this.frame.height;
                if (K > I) {
                    q = this.frame.attr.left * 0.01 * I / K;
                    r = 1 - (this.frame.attr.left + this.frame.attr.right) * 0.01 * I / K
                } else {
                    p = this.frame.attr.top * 0.01 * K / I;
                    H = 1 - (this.frame.attr.top + this.frame.attr.bottom) * 0.01 * K / I
                }
            }
            F = F / r;
            E = E / H
        }
        A = (F * o + 2.5) | 0;
        L = (E * o + 2.5) | 0;
        if (!this.render_buffer) {
            this.render_buffer = KWC.createCanvas();
            this.render_buffer.width = A;
            this.render_buffer.height = L
        } else {
            if (A !== this.render_buffer.width || L !== this.render_buffer.height) {
                this.render_buffer.width = A;
                this.render_buffer.height = L
            } else {
                if (this.frame === this.render_buffer_frame && this.text === this.render_buffer_text) {
                    return this.render_buffer
                } else {
                    this.render_buffer.getContext("2d").clearRect(0, 0, this.render_buffer.width, this.render_buffer.height)
                }
            }
        }
        g = this.render_buffer.getContext("2d");
        M = this.render_buffer.width;
        j = this.render_buffer.height;
        g.save();
        if ((this.frame != null) && this.frame.attr.type.indexOf("mk") >= 0) {
            this._kw101(this.render_buffer, g, "mk");
            g.globalCompositeOperation = "source-in"
        }
        g.translate(A / 2, L / 2);
        g.translate((q + r / 2 - 0.5) * M, (p + H / 2 - 0.5) * j);
        this.render_buffer_dx = -(q + r / 2 - 0.5) * M;
        this.render_buffer_dy = -(p + H / 2 - 0.5) * j;
        A = this.width * o;
        L = this.height * o;
        g.beginPath();
        g.rect(-A / 2, -L / 2, A, L);
        g.clip();
        if (this.imageloader && !((KWC.config != null) && (KWC.config.rerender_texts != null) && KWC.config.rerender_texts)) {
            g.drawImage(this.imageloader.loaded_image, -A / 2, -L / 2, A, L)
        } else {
            D = this.font_size / 72 * 25.4 * o;
            if (this.font_object) {
                g.addFont(this.font_object)
            }
            g.fillStyle = this.color;
            C = b.lineize(this.replacedText(this.imageloader == null), g, o, A - D, this.font_name, D);
            if (this.text.length === 0 && (this.placeholder_text != null) && (this.imageloader == null)) {
                while (true) {
                    if (C.length <= 1 || D < 6) {
                        break
                    }
                    D--;
                    C = b.lineize(this.replacedText(this.imageloader == null), g, o, A - D, this.font_name, D)
                }
            }
            g.font = "" + D + "pt " + this.font_name;
            if (this.align === "left") {
                z = -A / 2 + D * 0.5;
                g.textAlign = "left"
            } else {
                if (this.align === "right") {
                    z = +A / 2 - D * 0.5;
                    g.textAlign = "right"
                } else {
                    if (this.align === "center") {
                        z = 0;
                        g.textAlign = "center"
                    } else {
                        if (this.align === "justify") {
                            z = -A / 2 + D * 0.5;
                            g.textAlign = "left"
                        }
                    }
                }
            }
            v = -L / 2 + D;
            if (this.align === "justify") {
                for (J = f = 0, N = C.length; f < N; J = ++f) {
                    B = C[J];
                    if (B[1] === "last") {
                        g.fillText(B[0], z, -L / 2 + D * (J + 1) * 1.5)
                    } else {
                        c = B[0];
                        if (c.length > 0) {
                            g.fillText(c.charAt(0), z, -L / 2 + D * (J + 1) * 1.5);
                            m = z + g.measureText(c.charAt(0)).width;
                            if (c.length > 1) {
                                P = c.length - 1;
                                l = (A - D - g.measureText(c).width) / P;
                                for (G = e = 1, u = c.length - 1; 1 <= u ? e <= u : e >= u; G = 1 <= u ? ++e : --e) {
                                    m += l;
                                    g.fillText(c.charAt(G), m, -L / 2 + D * (J + 1) * 1.5);
                                    m += g.measureText(c.charAt(G)).width
                                }
                            }
                        }
                    }
                }
            } else {
                if (typeof lineheight == 'undefined') lineheight = 1;
                for (J = d = 0, O = C.length; d < O; J = ++d) {
                    B = C[J];
                    g.fillText(B[0], z, -L / 2 + D * (J + 1) * 1.5 * lineheight)
                }
            }
        }
        g.restore();
        if (this.frame) {
            if (this.frame.attr.type.indexOf("fg") >= 0) {
                this._kw101(this.render_buffer, g, "fg")
            }
            if (this.frame.attr.type.indexOf("bg") >= 0) {
                g.save();
                g.globalCompositeOperation = "destination-over";
                this._kw101(this.render_buffer, g, "bg");
                g.restore()
            }
        }
        if (!this.fixedonce) {
            this.fixedonce = true;
            _kw196._kw148(this, true)
        }
        return this.render_buffer
    };
    b.prototype.action = function (d) {
        var c;
        b.__super__.action.call(this, d);
        switch (d.action) {
            case "text":
                if (this.current_edit == null) {
                    this.current_edit = {};
                    this.page._kw74()
                }
                if (this.current_edit.timer != null) {
                    clearTimeout(this.current_edit.timer)
                }
                this.text = d.value;
                _kw196._kw148(this, true);
                this.page.updated();
                c = (function (e) {
                    return function () {
                        e.text = d.value;
                        _kw196._kw148(e, true);
                        e.page._kw76();
                        e.page.updated();
                        return e.current_edit = null
                    }
                })(this);
                return this.current_edit.timer = setTimeout(c, 1000);
            case "font_name":
                return this.page._kw55((function (e) {
                    return function () {
                        e.font_name = d.value;
                        _kw196._kw148(e, false);
                        e.page.updated();
                        return e.page.creation.preferred_font_name = e.font_name
                    }
                })(this));
            case "font_size":
                return this.page._kw55((function (e) {
                    return function () {
                        e.font_size = d.value;
                        _kw196._kw148(e, false);
                        e.page.updated();
                        return e.page.creation.preferred_font_size = e.font_size
                    }
                })(this));
            case "color":
                return this.page._kw55((function (e) {
                    return function () {
                        e.color = d.value;
                        return e.page.updated()
                    }
                })(this));
            case "align":
                return this.page._kw55((function (e) {
                    return function () {
                        e.align = d.value;
                        return e.page.updated()
                    }
                })(this));
            case "remove_frame":
                return this.page._kw55((function (e) {
                    return function () {
                        e.frame = null;
                        return e.page.updated()
                    }
                })(this));
            case "set_frame":
                return this.page._kw55((function (e) {
                    return function () {
                        e.frame = d.value;
                        if (!e.frame.attr.type) {
                            e.frame.attr.type = "bg"
                        }
                        return e.page.updated()
                    }
                })(this))
        }
    };
    b.lineize = function (k, d, g, c, f, l) {
        var e, m, j, i, h;
        e = d.font;
        c *= 20 / l;
        l = 20;
        d.font = "" + l + "pt " + f;
        h = b.tokenize(k);
        j = [];
        m = "";
        while (h.length > 0) {
            i = h.splice(0, 1)[0];
            if (i === "\n") {
                if (m.charAt(m.length - 1) === " ") {
                    m = m.substring(0, m.length - 1)
                }
                j.push([m, "last"]);
                m = ""
            } else {
                if (m === "") {
                    m = i
                } else {
                    if (i === " ") {
                        m += i
                    } else {
                        if (d.measureText(m + i).width < c) {
                            m += i
                        } else {
                            if (m.charAt(m.length - 1) === " ") {
                                m = m.substring(0, m.length - 1)
                            }
                            j.push([m, ""]);
                            m = i
                        }
                    }
                }
            }
        }
        if (m !== "") {
            j.push([m, "last"])
        }
        d.font = e;
        return j
    };
    b.charBreaks = function (d) {
        d = d.charCodeAt(0);
        return (d >= 19968 && d <= 40959) || (d >= 13312 && d <= 19967) || (d >= 131072 && d <= 173791) || (d >= 63744 && d <= 64255) || (d >= 194560 && d <= 195103)
    };
    b.tokenize = function (e) {
        var h, f, d, g;
        g = [];
        f = 0;
        d = 0;
        while (true) {
            if (d >= e.length) {
                break
            }
            h = e.charAt(d);
            if (h === "\n" || h === " " || b.charBreaks(h)) {
                if (d > f) {
                    g.push(e.substring(f, d))
                }
                g.push(h);
                d++;
                f = d
            } else {
                d++
            }
        }
        if (d > f) {
            g.push(e.substring(f, d))
        }
        return g
    };
    b.prototype.tokenizeOld = function (o) {
        var j, f, c, l, m, g, e, h, d;
        l = o.split(" ");
        c = [];
        for (j = g = 0, h = l.length - 1; 0 <= h ? g <= h : g >= h; j = 0 <= h ? ++g : --g) {
            m = l[j];
            m = m.split("\n");
            if (m[0] !== "") {
                c.push(m[0])
            }
            if (m.length > 1) {
                for (f = e = 1, d = m.length - 1; 1 <= d ? e <= d : e >= d; f = 1 <= d ? ++e : --e) {
                    c.push("\n");
                    if (m[f] !== "") {
                        c.push(m[f])
                    }
                }
            }
        }
        return c
    };
    b.prototype.setDefault = function () {
        var j, i, g, f, e, h, c, d;
        if (!this.page || !this.page.creation) {
            return
        }
        if (this.page.creation.preferred_font_name) {
            this.font_name = this.page.creation.preferred_font_name
        } else {
            h = this.page.objects;
            for (i = 0, f = h.length; i < f; i++) {
                j = h[i];
                if (j instanceof b) {
                    this.font_name = j.font_name
                }
            }
        } if (this.page.creation.preferred_font_size) {
            return this.font_size = this.page.creation.preferred_font_size
        } else {
            c = this.page.objects;
            d = [];
            for (g = 0, e = c.length; g < e; g++) {
                j = c[g];
                if (j instanceof b) {
                    d.push(this.font_size = j.font_size)
                } else {
                    d.push(void 0)
                }
            }
            return d
        }
    };
    b.prototype.handleThemeText = function () {
        if (this.text.toLowerCase().replace(/\n+|\s+/g, "") === "clicktoaddtext") {
            this.text = ""
        }
        if (this.text.indexOf("%") < 0 && this.editable && this.canChangeText()) {
            this.placeholder_text = KWC.translate("Click to add text");
            return this.text = ""
        }
    };
    b.prototype.save = function () {
        var c;
        c = b.__super__.save.call(this);
        c.text = this.text;
        c.placeholder_text = this.placeholder_text;
        c.replacedtext = this.replacedText();
        c.font_name = this.font_name;
        c.font_size = this.font_size;
        c.align = this.align;
        c.color = this.color;
        if (this.frame) {
            c.frame = {
                id: this.frame.id,
                width: this.frame.width,
                height: this.frame.height,
                attr: this.frame.attr,
                thumblist: this.frame.thumblist.save(),
                original: this.frame.original
            }
        }
        return c
    };
    b.prototype.load = function (c) {
        b.__super__.load.call(this, c);
        this.text = c.text;
        if (c.placeholder_text != null) {
            this.placeholder_text = c.placeholder_text
        }
        this.font_object = c.font_object;
        this.font_name = c.font_name;
        this.font_size = c.font_size;
        this.align = c.align;
        this.color = c.color;
        this.imageloader = c.imageloader;
        if (c.frame) {
            return this.frame = {
                imageloader: c.frame.imageloader,
                id: c.frame.id,
                width: c.frame.width,
                height: c.frame.height,
                attr: c.frame.attr,
                thumblist: new _kw94(c.frame.thumblist),
                original: c.frame.original
            }
        }
    };
    b.prototype._kw88 = function (d) {
        var c;
        c = (function (e) {
            return function () {
                if ((e.imageloader.loaded_image && e.imageloader.loaded_image.complete) && ((!e.frame) || (e.frame.imageloader.loaded_image && e.frame.imageloader.loaded_image.complete))) {
                    return d()
                }
            }
        })(this);
        this.imageloader.get_image(c);
        if (this.frame) {
            return this.frame.imageloader.get_image(c)
        }
    };
    b.prototype._kw89 = function () {
        this.imageloader.loaded_image.src = null;
        if (this.frame) {
            this.frame.imageloader.loaded_image.src = null
        }
        delete this.imageloader.loaded_image;
        if (this.frame) {
            delete this.frame.imageloader.loaded_image
        }
        if (this.render_buffer) {
            this.render_buffer.width = 0;
            this.render_buffer.height = 0;
            this.render_buffer.getContext("2d");
            return delete this.render_buffer
        }
    };
    return b
})(_kw82);
module.exports = this._kw59;
this._kw104 = (function () {
    function a(b) {
        this.data = b
    }
    a.prototype.createRenderCanvas = function (g) {
        var f, e, c, b, i, m, k, j, l, d;
        d = this.data.width;
        m = this.data.height;
        j = g / 25.4;
        l = (d * j) | 0;
        i = (m * j) | 0;
        f = KWC.createCanvas();
        f.width = l;
        f.height = i;
        if (l <= 2048 && i <= 2048) {
            return f
        }
        e = f.getContext("2d");
        c = e.getImageData(l - 1, i - 1, 1, 1);
        b = e.getImageData(l - 1, i - 1, 1, 1);
        b.data[0] = 0;
        b.data[1] = 255;
        b.data[2] = 0;
        b.data[3] = 255;
        e.putImageData(b, l - 1, i - 1);
        b = e.getImageData(l - 1, i - 1, 1, 1);
        if (b.data[0] > 128 || b.data[1] < 128 || b.data[2] > 128 || b.data[3] < 128) {
            f = null;
            k = Math.max(l, i);
            l = l / k * 2048;
            i = i / k * 2048;
            f = KWC.createCanvas();
            f.width = l;
            f.height = i
        } else {
            e.putImageData(c, l - 1, i - 1)
        }
        return f
    };
    a.prototype.render = function (g) {
        var f, e, B, A, z, F, l, u, v, D, r, q, p, j, o, d, c, b, C, E, m;
        f = this.createRenderCanvas(g);
        q = f.width;
        B = f.height;
        l = q / this.data.width;
        e = f.getContext("2d");
        e.save();
        e.translate(q / 2, B / 2);
        q = this.data.width * l;
        B = this.data.height * l;
        v = this.data.font_size / 72 * 25.4 * l;
        e.fillStyle = this.data.color;
        u = _kw59.lineize(this.data.replacedtext, e, l, q - v, this.data.font_name, v);
        e.font = "" + v + "pt " + this.data.font_name;
        if (this.data.align === "left") {
            p = -q / 2 + v * 0.5;
            e.textAlign = "left"
        } else {
            if (this.data.align === "right") {
                p = +q / 2 - v * 0.5;
                e.textAlign = "right"
            } else {
                if (this.data.align === "center") {
                    p = 0;
                    e.textAlign = "center"
                } else {
                    if (this.data.align === "justify") {
                        p = -q / 2 + v * 0.5;
                        e.textAlign = "left"
                    }
                }
            }
        }
        o = -B / 2 + v;
        if (this.data.align === "justify") {
            for (A = d = 0, C = u.length; d < C; A = ++d) {
                r = u[A];
                if (r[1] === "last") {
                    e.fillText(r[0], p, -B / 2 + v * (A + 1) * 1.5)
                } else {
                    r = r[0].split(" ");
                    e.fillText(r[0], p, -B / 2 + v * (A + 1) * 1.5);
                    j = p + e.measureText(r[0]).width;
                    if (r.length > 1) {
                        F = r.length - 1;
                        D = e.measureText(" ").width;
                        D = D + (q - v - e.measureText(u[A][0]).width) / F;
                        for (z = c = 1, m = r.length - 1; 1 <= m ? c <= m : c >= m; z = 1 <= m ? ++c : --c) {
                            j += D;
                            e.fillText(r[z], j, -B / 2 + v * (A + 1) * 1.5);
                            j += e.measureText(r[z]).width
                        }
                    }
                }
            }
        } else {
            if (typeof lineheight == 'undefined') lineheight = 1;
            for (A = b = 0, E = u.length; b < E; A = ++b) {
                r = u[A];
                e.fillText(r[0], p, -B / 2 + v * (A + 1) * 1.5 * lineheight)
            }
        }
        e.restore();
        return f.toDataURL("image/png")
    };
    return a
})();
this.Theme = (function () {
    function a(b) {
        this.creation = b
    }
    a.prototype.applyBookTheme = function (c, f) {
        var e, j, b, g, k, h, d;
        f._kw174();
        this.creation._kw181();
        this.index = 1;
        while (true) {
            if (this.index >= c.length) {
                break
            }
            if (c[this.index].objects.length === 0) {
                c.splice(this.index, 1)
            } else {
                this.index++
            }
        }
        this.index = 0;
        h = this.creation.pages;
        d = [];
        for (j = g = 0, k = h.length; g < k; j = ++g) {
            b = h[j];
            if (j === 0) {
                b._kw109(c[this.index], f);
                if (this.creation.product.properties.right_to_left) {
                    b.flip()
                }
                d.push(this.index = Math.max(1, (this.index + 1) % c.length))
            } else {
                if (b._kw50() === 0 && b.getTextCount() === 0) {
                    if (j === 1) {
                        this.index = 1
                    } else {
                        if (j === this.creation.pages.length - 1) {
                            this.index = c.length - 1
                        } else {
                            this.index = this.index + 1;
                            if (this.index >= c.length - 2) {
                                this.index = 2
                            }
                        }
                    }
                    d.push(b._kw109(c[this.index], f))
                } else {
                    e = this.findBestLayout(c, b._kw50(), b.getTextCount());
                    d.push(b._kw109(e, f))
                }
            }
        }
        return d
    };
    a.prototype.countPhotos = function (f) {
        var g, c, e, b, d;
        c = 0;
        d = f.objects;
        for (e = 0, b = d.length; e < b; e++) {
            g = d[e];
            if (g.type === "photo") {
                c++
            }
        }
        return c
    };
    a.prototype.countTexts = function (f) {
        var g, c, e, b, d;
        c = 0;
        d = f.objects;
        for (e = 0, b = d.length; e < b; e++) {
            g = d[e];
            if (g.type === "text") {
                c++
            }
        }
        return c
    };
    a.prototype.findBestLayout = function (b, j, d) {
        var f, o, m, l, g, e, h, i;
        f = b[this.index];
        o = this.countPhotos(f);
        m = this.countTexts(f);
        for (g = h = 0, i = b.length - 1; 0 <= i ? h <= i : h >= i; g = 0 <= i ? ++h : --h) {
            l = this.countPhotos(b[this.index]);
            e = this.countTexts(b[this.index]);
            if (l <= j && Math.abs(l - j) < Math.abs(l - o)) {
                o = l;
                m = e;
                f = b[this.index]
            } else {
                if (l === o && Math.abs(e - d) < Math.abs(e - m)) {
                    o = l;
                    m = e;
                    f = b[this.index]
                }
            }
            this.index = Math.max(1, (this.index + 1) % b.length);
            if ((o === j || j === 0) && (m === d || d === 0)) {
                break
            }
        }
        return f
    };
    return a
})();
var AgendaStyle, _kw57, PageCalendar, _kw56, _kw152, PagePattern, _kw53, _kw59, _kw94;
_kw94 = require("./thumblist.coffee", _kw94);
_kw57 = require("./pagebackground.coffee", _kw57);
_kw152 = require("./pageforeground.coffee", _kw152);
_kw53 = require("./pagephoto.coffee", _kw53);
_kw56 = require("./pageclipart.coffee", _kw56);
PagePattern = require("./pagepattern.coffee", PagePattern);
_kw59 = require("./pagetext.coffee", _kw59);
PageCalendar = require("./pagecalendar.coffee", PageCalendar);
AgendaStyle = require("./agenda/agendastyle.coffee", AgendaStyle);
this.Page = (function () {
    function a(c, e, b, d) {
        this.creation = c;
        this.width = e;
        this.height = b;
        this.spec = d;
        this.objects = [];
        this.background = new _kw57();
        this.min_dimension = Math.min(this.width, this.height) / 100;
        this.screenview_listeners = [];
        this.screenview_up_to_date = false;
        this.properties = {};
        this.screenview_minsize = 0
    }
    a.prototype.addUpdateListener = function (b) {
        return this.screenview_listeners.push(b)
    };
    a.prototype.clone = function () {
        var f, e, d, b, c;
        e = new a(this.creation, this.width, this.height, this.spec);
        c = this.objects;
        for (d = 0, b = c.length; d < b; d++) {
            f = c[d];
            e.add(f.clone())
        }
        e.background = this.background.clone();
        e.properties = this.properties;
        return e
    };
    a.prototype.cloneObjects = function () {
        var c, g, f, e, b, d;
        f = [];
        d = this.objects;
        for (c = e = 0, b = d.length; e < b; c = ++e) {
            g = d[c];
            f[c] = g.clone()
        }
        return f
    };
    a.prototype._kw90 = function (e) {
        var f, d, b, c;
        this.background = e.background.clone();
        this.objects = this.cloneObjects();
        this.removeEditableObjects();
        c = e.objects;
        for (d = 0, b = c.length; d < b; d++) {
            f = c[d];
            this.add(f.clone())
        }
    };
    a.prototype.add = function (b) {
        b.page = this;
        this.objects.push(b);
        if (this.creation && b._kw217) {
            b._kw217()
        }
        return b
    };
    a.prototype.insertBefore = function (g, f) {
        var c, h, e, b, d;
        d = this.objects;
        for (c = e = 0, b = d.length; e < b; c = ++e) {
            h = d[c];
            if (h === f) {
                this.objects.splice(c, 0, g);
                return
            }
        }
        return this.add(g)
    };
    a.prototype.clear = function (b) {
        if (b == null) {
            b = true
        }
        if (b) {
            this._kw55((function (c) {
                return function () {
                    c.background.clear();
                    return c.removeEditableObjects()
                }
            })(this))
        } else {
            this.background.clear();
            this.removeEditableObjects()
        }
        this.updated();
        if (this.creation) {
            return this.creation._kw166()
        }
    };
    a.prototype.removeEditableObjects = function () {
        var c, e, d, b;
        b = [];
        for (c = e = d = this.objects.length - 1; e >= 0; c = e += -1) {
            if (this.objects[c].editable && this.objects[c].canDelete()) {
                b.push(this.objects.splice(c, 1))
            } else {
                b.push(void 0)
            }
        }
        return b
    };
    a.prototype._kw181 = function () {
        var f, e, c, d, b;
        d = this.objects;
        b = [];
        for (e = 0, c = d.length; e < c; e++) {
            f = d[e];
            b.push(f._kw181())
        }
        return b
    };
    a.prototype.updated = function () {
        this.screenview_up_to_date = false;
        if (this.editor && this.editor.view && this.editor.view.page === this) {
            return this.editor.refresh()
        } else {
            return setTimeout(((function (b) {
                return function () {
                    return b._kw153()
                }
            })(this)), 16)
        }
    };
    a.prototype._kw153 = function () {
        var c, e, b, d;
        d = this.screenview_listeners;
        for (e = 0, b = d.length; e < b; e++) {
            c = d[e];
            c()
        }
    };
    a.prototype._kw84 = function (b) {
        var c, e, d;
        for (c = e = 0, d = this.objects.length; 0 <= d ? e <= d : e >= d; c = 0 <= d ? ++e : --e) {
            if (b === this.objects[c]) {
                this.objects.splice(c, 1);
                this.objects.push(b);
                this.updated();
                return
            }
        }
    };
    a.prototype._kw85 = function (b) {
        var c, e, d;
        for (c = e = 0, d = this.objects.length; 0 <= d ? e <= d : e >= d; c = 0 <= d ? ++e : --e) {
            if (b === this.objects[c]) {
                this.objects.splice(c, 1);
                this.objects.splice(0, 0, b);
                this.updated();
                return
            }
        }
    };
    a.prototype.isForward = function (b) {
        return this.objects.length > 0 && b === this.objects[this.objects.length - 1]
    };
    a.prototype._kw86 = function (c) {
        var d, f, e, b;
        b = [];
        for (d = f = 0, e = this.objects.length; 0 <= e ? f <= e : f >= e; d = 0 <= e ? ++f : --f) {
            if (c === this.objects[d]) {
                this.objects.splice(d, 1);
                this.updated();
                if (this.creation && c._kw217) {
                    b.push(c._kw217())
                } else {
                    b.push(void 0)
                }
            } else {
                b.push(void 0)
            }
        }
        return b
    };
    a.prototype._kw106 = function () {
        var f, c, e, b, d;
        c = [];
        d = this.objects;
        for (e = 0, b = d.length; e < b; e++) {
            f = d[e];
            if (f.type === "photo" && f.source) {
                c.push(f.source)
            }
        }
        return c
    };
    a.prototype._kw50 = function () {
        var f, c, e, b, d;
        c = 0;
        d = this.objects;
        for (e = 0, b = d.length; e < b; e++) {
            f = d[e];
            if (f.type === "photo") {
                c++
            }
        }
        return c
    };
    a.prototype.getDefinedPhotoCount = function () {
        var f, c, e, b, d;
        c = 0;
        d = this.objects;
        for (e = 0, b = d.length; e < b; e++) {
            f = d[e];
            if (f.type === "photo" && f.source) {
                c++
            }
        }
        return c
    };
    a.prototype.getTextCount = function () {
        var f, c, e, b, d;
        c = 0;
        d = this.objects;
        for (e = 0, b = d.length; e < b; e++) {
            f = d[e];
            if (f.type === "text") {
                c++
            }
        }
        return c
    };
    a.prototype.getDefinedTextCount = function () {
        var f, c, e, b, d;
        c = 0;
        d = this.objects;
        for (e = 0, b = d.length; e < b; e++) {
            f = d[e];
            if (f.type === "text" && f.text !== "") {
                c++
            }
        }
        return c
    };
    a.prototype.divideMargin = function () {
        var b;
        b = editor.grid.spacing;
        return b
    };
    a.prototype._kw51 = function (g, j) {
        var h, d, c, b, i, m, k, e, l, f;
        if (g == null) {
            g = 2
        }
        if (j == null) {
            j = true
        }
        i = 0;
        f = this.objects;
        for (e = 0, l = f.length; e < l; e++) {
            c = f[e];
            if (c.type === "photo" && c.canResize() && c.canMove()) {
                i++
            }
        }
        if (i === 0) {
            return null
        }
        d = this.divideMargin();
        h = 0;
        while (true) {
            if (h++ > 100) {
                break
            }
            m = Math.random() * this.width - this.width / 2;
            k = Math.random() * this.height - this.height / 2;
            c = this._kw48(m, k, "photo");
            if (c && c.type === "photo" && c.canMove() && c.canResize()) {
                b = c.divide(d, g, j);
                _kw196._kw147(b, this, true);
                _kw196._kw147(c, this, true);
                return b
            }
        }
        return null
    };
    a.prototype._kw48 = function (u, t, s) {
        var h, p, f, e, g, m, d, c, l, b, q, j, k;
        if (this.objects.length > 0) {
            for (m = j = k = this.objects.length - 1; k <= 0 ? j <= 0 : j >= 0; m = k <= 0 ? ++j : --j) {
                d = this.objects[m];
                b = d.x;
                q = d.y;
                l = d.width;
                g = d.height;
                h = u - b;
                f = t - q;
                c = d.rotation * Math.PI / 180;
                p = Math.cos(c) * h - Math.sin(c) * f;
                e = Math.sin(c) * h + Math.cos(c) * f;
                if (p >= -l / 2 && p < l / 2 && e >= -g / 2 && e < g / 2 && (d.type === s || !s)) {
                    return d
                }
            }
        }
        return null
    };
    a.prototype._kw49 = function () {
        var e, d, b, c;
        c = this.objects;
        for (d = 0, b = c.length; d < b; d++) {
            e = c[d];
            if (e.type === "photo" && !e.source) {
                return e
            }
        }
        return null
    };
    a.prototype._kw107 = function () {
        var g, c, d, f, b, e;
        c = [];
        e = this.objects;
        for (f = 0, b = e.length; f < b; f++) {
            g = e[f];
            if (g.type === "text") {
                d = g.save();
                c.push(d)
            }
        }
        return c
    };
    a.prototype._kw108 = function (f, d) {
        var c, e, b;
        for (e = 0, b = f.length; e < b; e++) {
            c = f[e];
            if (c.id === d) {
                return c
            }
        }
        return null
    };
    a.prototype.save = function (check) {
        check = typeof check !== 'undefined' ? check : 1;
        var h, g, c, d, f, b, e;
        g = [];
        e = this.objects;
        for (f = 0, b = e.length; f < b; f++) {
            h = e[f];
            d = h.save(check);
            if (d) {
                g.push(d)
            } else {
                return null
            }
        }
        c = {
            background: this.background.save(),
            width: this.width,
            height: this.height,
            unit: this.spec.index,
            objects: g,
            properties: this.properties
        };
        return c
    };
    a.prototype.loadObject = function (g, f) {
        var h, e, d, b;
        if (!g.width || !g.height) {
            return
        }
        if (g.width <= 0 || g.height <= 0) {
            return
        }
        switch (g.type) {
            case "photo":
                if (f && ((g.properties == null) || (g.properties.locks == null) || !g.properties.locks.lock_change_photo)) {
                    e = new _kw53(null)
                } else {
                    e = new _kw53(g.source)
                }
                e.load(g);
                return this.add(e);
            case "clipart":
                d = {
                    imageloader: g.source.imageloader,
                    id: g.source.id,
                    thumblist: new _kw94(g.source.thumblist),
                    width: g.source.width,
                    height: g.source.height,
                    original: g.source.original
                };
                h = new _kw56(d);
                h.load(g);
                return this.add(h);
            case "pattern":
                d = {
                    imageloader: g.source.imageloader,
                    id: g.source.id,
                    thumblist: new _kw94(g.source.thumblist),
                    width: g.source.width,
                    height: g.source.height,
                    original: g.source.original,
                    vertical_stretch: g.source.vertical_stretch,
                    horizontal_stretch: g.source.horizontal_stretch
                };
                h = new PagePattern(d);
                h.load(g);
                return this.add(h);
            case "foreground":
                d = {
                    imageloader: g.source.imageloader,
                    id: g.source.id,
                    thumblist: new _kw94(g.source.thumblist),
                    width: g.source.width,
                    height: g.source.height,
                    original: g.source.original
                };
                h = new _kw152(d);
                h.load(g);
                return this.add(h);
            case "text":
                b = new _kw59();
                b.load(g);
                return this.add(b);
            case "calendar":
                b = new PageCalendar();
                b.load(g);
                return this.add(b)
        }
    };
    a.prototype.load = function (f, c, g) {
        var h, e, b, d;
        if (g == null) {
            g = false
        }
        this.width = f.width;
        this.height = f.height;
        if (f.spec != null) {
            this.spec = f.spec
        }
        if (f.unit != null) {
            this.spec = this.creation.product.units[Math.min(f.unit, this.creation.product.units.length - 1)]
        }
        this.background = new _kw57();
        this.background.load(f.background);
        if (f.properties && !g) {
            this.properties = f.properties
        }
        this.objects = [];
        d = f.objects;
        for (e = 0, b = d.length; e < b; e++) {
            h = d[e];
            this.loadObject(h, g)
        }
        return this.updated()
    };
    a.prototype._kw173 = function (g) {
        var k, j, d, b, c, h, e, i, f;
        this.background = g.background.clone();
        c = g.width;
        k = g.height;
        h = this.width / c;
        j = this.height / k;
        b = Math.sqrt(h * j);
        f = g.objects;
        for (e = 0, i = f.length; e < i; e++) {
            d = f[e];
            d = d.clone();
            d.x *= h;
            d.y *= j;
            if (d.type === "clipart") {
                d.width *= b;
                d.height *= b
            } else {
                if ((d.rotation + 360 - 90) % 180 === 0) {
                    d.width *= j;
                    d.height *= h
                } else {
                    d.width *= h;
                    d.height *= j
                }
            } if (d.type === "text") {
                d.font_size = (d.font_size * b) | 0
            }
            this.add(d)
        }
        return this.updated()
    };
    a.prototype.flip = function () {
        var e, d, b, c;
        c = this.objects;
        for (d = 0, b = c.length; d < b; d++) {
            e = c[d];
            e.x = -e.x;
            e.rotation = 360 - e.rotation
        }
        return this.updated()
    };
    a.prototype._kw109 = function (G, q) {
        var r, F, v, w, s, d, k, m, u, t, f, i, g, e, c, B, E, C, A, z, y, x, b, H, D, p, l, j, h;
        if (G.pages) {
            G = G.pages[0]
        }
        t = this.width;
        r = this.height;
        d = this.objects;
        w = this._kw106();
        m = this.spec;
        v = [];
        p = this.objects;
        for (i = 0, B = p.length; i < B; i++) {
            s = p[i];
            if (s.sticky && s.type === "clipart" && !s.editable) {
                v.push(s)
            }
        }
        this.load(G, q, true);
        f = t / this.width;
        F = r / this.height;
        u = Math.sqrt(f * F);
        this.width = t;
        this.height = r;
        this.spec = m;
        l = this.objects;
        for (g = 0, E = l.length; g < E; g++) {
            s = l[g];
            s.x *= f;
            s.y *= F;
            if (s.type === "clipart") {
                s.width *= u;
                s.height *= u
            } else {
                if ((s.rotation + 360 - 90) % 180 === 0) {
                    s.width *= F;
                    s.height *= f
                } else {
                    s.width *= f;
                    s.height *= F
                }
            } if (s.type === "text") {
                s.font_size = (s.font_size * u) | 0;
                s.handleThemeText()
            }
            if (s.type === "calendar") {
                s.sticky = true;
                s.editable = false
            }
        }
        for (e = 0, C = v.length; e < C; e++) {
            s = v[e];
            this.objects.push(s)
        }
        if ((this.view != null) && this.view.properties.hide_left) {
            k = [];
            j = this.objects;
            for (c = 0, A = j.length; c < A; c++) {
                s = j[c];
                if (s.x < 0) {
                    k.push(s)
                }
            }
            for (b = 0, z = k.length; b < z; b++) {
                s = k[b];
                this._kw86(s)
            }
        }
        if ((this.view != null) && this.view.properties.hide_right) {
            k = [];
            h = this.objects;
            for (H = 0, y = h.length; H < y; H++) {
                s = h[H];
                if (s.x > 0) {
                    k.push(s)
                }
            }
            for (D = 0, x = k.length; D < x; D++) {
                s = k[D];
                this._kw86(s)
            }
        }
        if (w.length > 0) {
            this._kw80(w, false, true)
        }
        if ((this.editor != null) && this.editor.page === this) {
            this.animate(d)
        }
        return this.updated()
    };
    a.prototype.applyLayoutPair = function (i, g) {
        var m, j, d, p, f, e, c, r, q, b, l, h, s, k;
        m = i[0].page._kw50();
        j = i[1].page._kw50();
        r = i[0].page.getTextCount();
        q = i[1].page.getTextCount();
        p = 0;
        f = 0;
        b = 0;
        l = 0;
        k = this.objects;
        for (h = 0, s = k.length; h < s; h++) {
            d = k[h];
            if (d.x < 0) {
                if (d.type === "photo") {
                    p++
                } else {
                    if (d.type === "text" && d.text !== "") {
                        b++
                    }
                }
            } else {
                if (d.type === "photo") {
                    f++
                } else {
                    if (d.type === "text" && d.text !== "") {
                        l++
                    }
                }
            }
        }
        e = Math.abs(p - m) + Math.abs(b - r) + Math.abs(f - j) + Math.abs(l - q);
        c = Math.abs(p - j) + Math.abs(b - q) + Math.abs(f - m) + Math.abs(l - r);
        if (e < c) {
            this._kw189(i[0], g);
            return this._kw190(i[1], g)
        } else {
            this._kw189(i[1], g);
            return this._kw190(i[0], g)
        }
    };
    a.prototype._kw189 = function (y, Q) {
        var c, K, w, G, I, E, d, A, x, q, B, P, b, R, O, N, M, L, v, l, k, j, i, h, g, f, e, J, H, F, D, C, z, u, s, r, m;
        d = y.page;
        I = [];
        z = this.objects;
        for (O = 0, v = z.length; O < v; O++) {
            G = z[O];
            I.push(G)
        }
        x = [];
        A = [];
        u = this.objects;
        for (N = 0, l = u.length; N < l; N++) {
            G = u[N];
            if (G.x < 0) {
                x.push(G)
            }
        }
        for (M = 0, k = x.length; M < k; M++) {
            G = x[M];
            this._kw86(G)
        }
        w = [];
        P = [];
        for (L = 0, j = x.length; L < j; L++) {
            G = x[L];
            if (G.type === "photo" && G.source) {
                w.push(G.source)
            }
            if (G.type === "text" && G.text !== "") {
                P.push(G.text)
            }
        }
        b = this.width / 2;
        c = this.height;
        R = b / d.width;
        K = c / d.height;
        q = Math.sqrt(R * K);
        this.background._kw210(d.background);
        s = d.objects;
        for (J = 0, i = s.length; J < i; J++) {
            G = s[J];
            G = G.clone();
            G.x *= R;
            G.x -= b / 2;
            G.y *= K;
            if (G.type === "clipart") {
                G.width *= q;
                G.height *= q
            } else {
                if ((G.rotation + 360 - 90) % 180 === 0) {
                    G.width *= K;
                    G.height *= R
                } else {
                    G.width *= R;
                    G.height *= K
                }
            } if (G.type === "text") {
                G.font_size = (G.font_size * q) | 0;
                G.handleThemeText()
            }
            this.add(G)
        }
        for (H = 0, h = w.length; H < h; H++) {
            E = w[H];
            this._kw219(E)
        }
        for (F = 0, g = P.length; F < g; F++) {
            B = P[F];
            this.insertText(B)
        }
        r = this.objects;
        for (D = 0, f = r.length; D < f; D++) {
            G = r[D];
            if (G.type === "photo") {
                _kw196._kw147(G, this, true)
            }
        }
        m = this.objects;
        for (C = 0, e = m.length; C < e; C++) {
            G = m[C];
            if (G.type === "text") {
                _kw196._kw148(G)
            }
        }
        return this.updated()
    };
    a.prototype._kw190 = function (y, Q) {
        var c, K, w, G, I, E, d, A, x, q, B, P, b, R, O, N, M, L, v, l, k, j, i, h, g, f, e, J, H, F, D, C, z, u, s, r, m;
        d = y.page;
        I = [];
        z = this.objects;
        for (O = 0, v = z.length; O < v; O++) {
            G = z[O];
            I.push(G)
        }
        x = [];
        A = [];
        u = this.objects;
        for (N = 0, l = u.length; N < l; N++) {
            G = u[N];
            if (G.x >= 0) {
                x.push(G)
            }
        }
        for (M = 0, k = x.length; M < k; M++) {
            G = x[M];
            this._kw86(G)
        }
        w = [];
        P = [];
        for (L = 0, j = x.length; L < j; L++) {
            G = x[L];
            if (G.type === "photo" && G.source) {
                w.push(G.source)
            }
            if (G.type === "text" && G.text !== "") {
                P.push(G.text)
            }
        }
        b = this.width / 2;
        c = this.height;
        R = b / d.width;
        K = c / d.height;
        q = Math.sqrt(R * K);
        this.background._kw211(d.background);
        s = d.objects;
        for (J = 0, i = s.length; J < i; J++) {
            G = s[J];
            G = G.clone();
            G.x *= R;
            G.x += b / 2;
            G.y *= K;
            if (G.type === "clipart") {
                G.width *= q;
                G.height *= q
            } else {
                if ((G.rotation + 360 - 90) % 180 === 0) {
                    G.width *= K;
                    G.height *= R
                } else {
                    G.width *= R;
                    G.height *= K
                }
            } if (G.type === "text") {
                G.font_size = (G.font_size * q) | 0;
                G.handleThemeText()
            }
            this.add(G)
        }
        for (H = 0, h = w.length; H < h; H++) {
            E = w[H];
            this._kw219(E)
        }
        for (F = 0, g = P.length; F < g; F++) {
            B = P[F];
            this.insertText(B)
        }
        r = this.objects;
        for (D = 0, f = r.length; D < f; D++) {
            G = r[D];
            if (G.type === "photo") {
                _kw196._kw147(G, this, true)
            }
        }
        m = this.objects;
        for (C = 0, e = m.length; C < e; C++) {
            G = m[C];
            if (G.type === "text") {
                _kw196._kw148(G)
            }
        }
        return this.updated()
    };
    a.prototype._kw188 = function (y, Q) {
        var c, K, w, G, I, E, d, A, x, q, B, P, b, R, O, N, M, L, v, l, k, j, i, h, g, f, e, J, H, F, D, C, z, u, s, r, m;
        d = y.page;
        if (d.width / d.height < this.width / this.height * 0.75) {
            this._kw189(y, Q);
            this._kw190(y, Q);
            return
        }
        I = [];
        z = this.objects;
        for (O = 0, v = z.length; O < v; O++) {
            G = z[O];
            I.push(G)
        }
        x = [];
        A = [];
        u = this.objects;
        for (N = 0, l = u.length; N < l; N++) {
            G = u[N];
            x.push(G)
        }
        for (M = 0, k = x.length; M < k; M++) {
            G = x[M];
            this._kw86(G)
        }
        w = [];
        P = [];
        for (L = 0, j = x.length; L < j; L++) {
            G = x[L];
            if (G.type === "photo" && G.source) {
                w.push(G.source)
            }
            if (G.type === "text" && G.text !== "") {
                P.push(G.text)
            }
        }
        b = this.width;
        c = this.height;
        R = b / d.width;
        K = c / d.height;
        q = Math.sqrt(R * K);
        this.background.copy(d.background);
        s = d.objects;
        for (J = 0, i = s.length; J < i; J++) {
            G = s[J];
            G = G.clone();
            G.x *= R;
            G.y *= K;
            if (G.type === "clipart") {
                G.width *= q;
                G.height *= q
            } else {
                if ((G.rotation + 360 - 90) % 180 === 0) {
                    G.width *= K;
                    G.height *= R
                } else {
                    G.width *= R;
                    G.height *= K
                }
            } if (G.type === "text") {
                G.font_size = (G.font_size * q) | 0;
                G.handleThemeText()
            }
            this.add(G)
        }
        for (H = 0, h = w.length; H < h; H++) {
            E = w[H];
            this._kw219(E)
        }
        for (F = 0, g = P.length; F < g; F++) {
            B = P[F];
            this.insertText(B)
        }
        r = this.objects;
        for (D = 0, f = r.length; D < f; D++) {
            G = r[D];
            if (G.type === "photo") {
                _kw196._kw147(G, this, true)
            }
        }
        m = this.objects;
        for (C = 0, e = m.length; C < e; C++) {
            G = m[C];
            if (G.type === "text") {
                _kw196._kw148(G)
            }
        }
        return this.updated()
    };
    a.prototype._kw219 = function (b) {
        var c;
        c = this._kw49();
        if (!c) {
            c = this._kw51(2, false)
        }
        if (c) {
            c.source = b;
            return c._kw180()
        }
    };
    a.prototype.insertText = function (c) {
        var f, e, b, d;
        d = this.objects;
        for (e = 0, b = d.length; e < b; e++) {
            f = d[e];
            if (f.type === "text" && f.text === "") {
                f.text = c;
                return
            }
        }
    };
    a.prototype.resize = function (c, j) {
        var i, d, e, b, g, f, h;
        e = this.objects;
        this.objects = [];
        g = c / this.width;
        i = j / this.height;
        b = Math.sqrt(g * i);
        this.width = c;
        this.height = j;
        for (f = 0, h = e.length; f < h; f++) {
            d = e[f];
            d = d.clone();
            this.add(d);
            d.x *= g;
            d.y *= i;
            if (d.type === "clipart") {
                d.width *= b;
                d.height *= b
            } else {
                if ((d.rotation + 360 - 90) % 180 === 0) {
                    d.width *= i;
                    d.height *= g
                } else {
                    d.width *= g;
                    d.height *= i
                }
            } if (d.type === "text") {
                d.font_size *= b
            }
        }
        this.animate(e);
        return this.updated()
    };
    a.prototype.animate = function (e) {
        var f, j, b, h, d, g, c;
        g = this.objects;
        c = [];
        for (h = 0, d = g.length; h < d; h++) {
            j = g[h];
            c.push((function () {
                var l, i, k;
                k = [];
                for (f = l = 0, i = e.length; l < i; f = ++l) {
                    b = e[f];
                    if (b.type === "photo" && j.type === "photo") {
                        if (j.source === b.source) {
                            j._kw52();
                            j.transition_start = b;
                            e.splice(f, 1);
                            break
                        } else {
                            k.push(void 0)
                        }
                    } else {
                        k.push(void 0)
                    }
                }
                return k
            })())
        }
        return c
    };
    a.prototype._kw80 = function (k, h, d) {
        var r, j, e, c, q, l, g, f, m, b, i;
        if (h == null) {
            h = true
        }
        if (d == null) {
            d = false
        }
        if (this.creation && this.creation.pages.length > 1 && !d) {
            return
        }
        if (this._kw50() === 0) {
            c = new _kw53(null);
            c.x = 0;
            c.y = 0;
            c.width = this.width + this.spec.bleed.left + this.spec.bleed.right;
            c.height = this.height + this.spec.bleed.top + this.spec.bleed.bottom;
            this.add(c)
        }
        q = [];
        for (g = 0, m = k.length; g < m; g++) {
            c = k[g];
            q.push(c)
        }
        r = q.length - this._kw50();
        l = r;
        while (r-- > 0) {
            j = 2;
            if (r > 5 && r > l / 2 && Math.random() > 0.5) {
                j = 3;
                r--
            }
            this._kw51(j)
        }
        i = this.objects;
        for (f = 0, b = i.length; f < b; f++) {
            e = i[f];
            if (e.type === "photo" && q.length > 0) {
                e.source = this._kw110(q, e.width / e.height);
                e._kw180()
            }
        }
        if (h) {
            return this.updated()
        }
    };
    a.prototype._kw110 = function (l, h) {
        var d, k, f, g, c, b, e, j;
        k = 100000;
        d = null;
        g = -1;
        for (f = e = 0, j = l.length; e < j; f = ++e) {
            c = l[f];
            b = c.width / c.height;
            b = Math.abs(1 - b / h);
            if (b < k) {
                k = b;
                d = c;
                g = f
            }
        }
        l.splice(g, 1);
        return d
    };
    a.prototype.action = function (b) {
        switch (b.action) {
            case "set_background":
                if (this.editor && this.editor.view && this.editor.view.crop && this.editor.view.crop.width < 1) {
                    if (this.editor.view.crop.x < 0.25) {
                        this._kw55((function (c) {
                            return function () {
                                return c.background._kw169(b.value)
                            }
                        })(this))
                    } else {
                        this._kw55((function (c) {
                            return function () {
                                return c.background._kw171(b.value)
                            }
                        })(this))
                    }
                } else {
                    this._kw55((function (c) {
                        return function () {
                            if (c.view && c.view.properties.hide_left) {
                                return c.background._kw171(b.value)
                            } else {
                                if (c.view && c.view.properties.hide_right) {
                                    return c.background._kw169(b.value)
                                } else {
                                    return c.background.set(b.value)
                                }
                            }
                        }
                    })(this))
                }
                return this.updated();
            case "set_left_background":
                this._kw55((function (c) {
                    return function () {
                        return c.background._kw169(b.value)
                    }
                })(this));
                return this.updated();
            case "set_right_background":
                this._kw55((function (c) {
                    return function () {
                        return c.background._kw171(b.value)
                    }
                })(this));
                return this.updated();
            case "set_foreground":
                return this._kw55((function (c) {
                    return function () {
                        var h, e, j, g, d, f;
                        f = c.objects;
                        for (e = g = 0, d = f.length; g < d; e = ++g) {
                            j = f[e];
                            if (j instanceof _kw152) {
                                c.objects.splice(e, 1);
                                break
                            }
                        }
                        h = new _kw152(b.value);
                        c.add(h);
                        h.fix();
                        if (c.editor) {
                            c.editor.selected = h
                        }
                        h.width *= 0.1;
                        h.height *= 0.1;
                        h._kw52();
                        h.width *= 10;
                        return h.height *= 10
                    }
                })(this));
            case "apply_layout_left":
                return this._kw55((function (c) {
                    return function () {
                        return c._kw189(b.value)
                    }
                })(this));
            case "apply_layout_right":
                return this._kw55((function (c) {
                    return function () {
                        return c._kw190(b.value)
                    }
                })(this));
            case "apply_layout":
                return this._kw55((function (c) {
                    return function () {
                        return c._kw188(b.value)
                    }
                })(this))
        }
    };
    a.prototype._kw55 = function (b) {
        this._kw74();
        b();
        return this._kw76()
    };
    a.prototype._kw74 = function () {
        var c, b;
        c = this.clone();
        if (this.editor) {
            b = this.editor.selected
        }
        return this.undo_action = {
            undo: (function (d) {
                return function () {
                    var e;
                    e = d.objects;
                    d._kw90(c);
                    d.animate(e);
                    if (d.editor) {
                        d.editor.select(b)
                    }
                    if (d.creation) {
                        return d.creation._kw166()
                    }
                }
            })(this)
        }
    };
    a.prototype._kw76 = function () {
        var c, b;
        c = this.clone();
        if (this.editor) {
            b = this.editor.selected
        }
        this.undo_action.redo = (function (d) {
            return function () {
                var e;
                e = d.objects;
                d._kw90(c);
                d.animate(e);
                if (d.editor) {
                    d.editor.select(b)
                }
                if (d.creation) {
                    return d.creation._kw166()
                }
            }
        })(this);
        if (this.editor) {
            return this.editor._kw45(this.undo_action)
        }
    };
    a.prototype.undoCancelled = function () {
        if (this.undo_action) {
            return this.undo_action.undo()
        }
    };
    a.prototype._kw172 = function (c) {
        var e, d, b;
        if (c == null) {
            c = 400
        }
        c = Math.max(c, this.screenview_minsize);
        if (this.screenview_up_to_date && this.screenview && Math.max(this.screenview.width, this.screenview.height) * 1.1 > c) {
            return this.screenview
        } else {
            d = Math.min(c / this.width, c / this.height);
            if (!this.screenview) {
                this.screenview = KWC.createCanvas()
            }
            b = Math.round(d * this.width);
            e = Math.round(d * this.height);
            if (b !== this.screenview.width || e !== this.screenview.height) {
                this.screenview.width = b;
                this.screenview.height = e
            }
            new _kw150(this).render(this.screenview, this.screenview.width / this.width, false);
            this.screenview_up_to_date = true;
            return this.screenview
        }
    };
    a.prototype._kw220 = function () {
        var f, c, e, b, d;
        c = 0;
        d = this.objects;
        for (e = 0, b = d.length; e < b; e++) {
            f = d[e];
            if (f.type === "photo") {
                c += f.width * f.height
            }
        }
        return c
    };
    a.prototype._kw47 = function (d, b) {
        var g, c, f, e, h;
        if (b == null) {
            b = this.view
        }
        if (this.editor && this.editor.selected && editor.selected.page === this && this.editor.selected.type === "photo" && this.editor.selected.source === null) {
            g = this.editor.selected
        } else {
            g = this._kw49()
        }
        h = 1;
        if (b && (b.cropw === 0.5 || b.properties.hide_left || b.properties.hide_right)) {
            h = 0.5
        }
        e = this.creation.product instanceof AgendaProduct ? 0.1 : 1;
        if (!g) {
            if (this.editor && this.editor.selected && this.editor.selected.type === "photo" && this.editor.selected.canMove() && this.editor.selected.canResize()) {
                g = this.editor.selected.divide(this.divideMargin());
                g.source = null;
                g._kw52();
                g.transition_start.x = -this.width * 0.75;
                g.transition_start.y = 0;
                g.transition_start.width = this.width * 0.25;
                g.transition_start.height = this.height * 0.25;
                this.editor.selected = null
            } else {
                if (this._kw220() > this.width * h * this.height * 0.6 * e && (g = this._kw51()) !== null) {
                    g.source = null;
                    g._kw52();
                    g.transition_start.x = -this.width * 0.75;
                    g.transition_start.y = 0;
                    g.transition_start.width = this.width * 0.25;
                    g.transition_start.height = this.height * 0.25
                } else {
                    if (this._kw50() === 0) {
                        c = new _kw53(d);
                        if (b && b.crop) {
                            c.width = b.crop.width * (this.width + this.spec.bleed.left + this.spec.bleed.right);
                            c.height = b.crop.height * (this.height + this.spec.bleed.top + this.spec.bleed.bottom);
                            c.x = -this.width / 2 + b.crop.x * this.width + c.width / 2;
                            c.y = -this.height / 2 + b.crop.y * this.height + c.height / 2
                        } else {
                            if (b && b.properties.hide_left) {
                                c.x = this.width * 0.25;
                                c.y = 0;
                                c.width = 0.5 * this.width + this.spec.bleed.left + this.spec.bleed.right;
                                c.height = this.height + this.spec.bleed.top + this.spec.bleed.bottom
                            } else {
                                if (b && b.properties.hide_right) {
                                    c.x = -this.width * 0.25;
                                    c.y = 0;
                                    c.width = 0.5 * this.width + this.spec.bleed.left + this.spec.bleed.right;
                                    c.height = this.height + this.spec.bleed.top + this.spec.bleed.bottom
                                } else {
                                    c.x = 0;
                                    c.y = 0;
                                    c.width = this.width + this.spec.bleed.left + this.spec.bleed.right;
                                    c.height = this.height + this.spec.bleed.top + this.spec.bleed.bottom
                                }
                            }
                        } if (this.creation.product instanceof AgendaProduct) {
                            c.x += (Math.round(Math.random()) - 0.5) * this.width * 0.5;
                            c.width *= 0.25;
                            c.height *= 0.25
                        }
                        this.add(c);
                        c.width *= 0.5;
                        c.height *= 0.5;
                        c._kw52();
                        c.width *= 2;
                        c.height *= 2
                    } else {
                        c = new _kw53(d);
                        c.checkOrientation(d);
                        f = Math.min(this.width / d.owidth, this.height / d.oheight) / 4;
                        c.width = f * d.owidth;
                        c.height = f * d.oheight;
                        this.add(c);
                        c.x = -this.width / 2;
                        c.y = 0;
                        c.width *= 0.5;
                        c.height *= 0.5;
                        c._kw52();
                        c.width *= 2;
                        c.height *= 2;
                        c._kw54(b)
                    }
                }
            }
        }
        if (g && !g.source) {
            g.source = d;
            g._kw180()
        }
        if (this.editor) {
            return this.editor.refresh()
        }
    };
    a.prototype._kw177 = function (f) {
        var c, g, e, b, d;
        c = 0;
        d = this.objects;
        for (e = 0, b = d.length; e < b; e++) {
            g = d[e];
            if (g.source === f) {
                c++
            }
        }
        return c
    };
    a.prototype._kw218 = function (b) {
        if (this.creation) {
            return this.creation._kw177(b)
        } else {
            return this._kw177(b)
        }
    };
    a.prototype._kw179 = function () {
        var b;
        if (this.view && (this.view.properties.hide_left || (this.view.properties.is_cover && !this.creation.product.properties.right_to_left))) {
            b = new _kw53(null);
            b.x = this.width * 0.25;
            b.y = 0;
            b.width = this.width * 0.4;
            b.height = this.height * 0.8;
            this.add(b);
            return 1
        } else {
            if (this.view && (this.view.properties.hide_right || (this.view.properties.is_cover && this.creation.product.properties.right_to_left))) {
                b = new _kw53(null);
                b.x = -this.width * 0.25;
                b.y = 0;
                b.width = this.width * 0.4;
                b.height = this.height * 0.8;
                this.add(b);
                return 1
            } else {
                if (this.view && this.view.properties.double_background) {
                    b = new _kw53(null);
                    if (Math.random() < 0.5) {
                        b.x = -this.width * 0.25 - this.spec.bleed.left / 2;
                        b.y = 0;
                        b.width = this.width * 0.5 + this.spec.bleed.left;
                        b.height = this.height + this.spec.bleed.top + this.spec.bleed.bottom
                    } else {
                        b.x = -this.width * 0.25;
                        b.y = 0;
                        b.width = this.width * 0.4;
                        b.height = this.height * 0.8
                    }
                    this.add(b);
                    b = new _kw53(null);
                    if (Math.random() < 0.5) {
                        b.x = this.width * 0.25 + this.spec.bleed.right / 2;
                        b.y = 0;
                        b.width = this.width * 0.5 + this.spec.bleed.right;
                        b.height = this.height + this.spec.bleed.top + this.spec.bleed.bottom
                    } else {
                        b.x = this.width * 0.25;
                        b.y = 0;
                        b.width = this.width * 0.4;
                        b.height = this.height * 0.8
                    }
                    this.add(b);
                    return 2
                } else {
                    b = new _kw53(null);
                    b.x = 0;
                    b.y = 0;
                    if (Math.random() < 0.5) {
                        b.width = this.width + this.spec.bleed.left + this.spec.bleed.right;
                        b.height = this.height + this.spec.bleed.top + this.spec.bleed.bottom
                    } else {
                        b.width = this.width * 0.8;
                        b.height = this.height * 0.8
                    }
                    this.add(b);
                    return 1
                }
            }
        }
    };
    a.prototype._kw88 = function (b) {
        return b()
    };
    a.prototype._kw87 = function (b, c, d) {
        if (d.spec.prerender != null) {
            return new AgendaStyle(d.creation).paintPage(0, b, d)
        }
    };
    a.prototype._kw89 = function () { };
    return a
})();
module.exports = this.Page;
var KWC, _kw111;
KWC = require("../wrapper.js", KWC);
this._kw111 = (function () {
    function a(c, b) {
        this.size = c;
        this.url = b;
        this.image = null;
        this.loading = false
    }
    a.prototype.fixSource = function (d) {
        var b, c, e;
        c = (typeof navigator !== "undefined" && navigator !== null) && /(iPad|iPhone|iPod)/g.test(navigator.userAgent);
        if (false) {
            e = new MegaPixImage(d);
            b = KWC.createCanvas();
            b.width = d.width;
            b.height = d.height;
            e.render(b, {
                width: b.width,
                height: b.height
            });
            return b
        } else {
            return d
        }
    };
    a.prototype._kw92 = function (d, c) {
        var b;
        if (!this.image && c && c.file) {
            if (this.loading) {
                return
            }
            this.loading = true;
            b = new Image;
            b.onload = (function (e) {
                return function () {
                    var f, g;
                    b = e.fixSource(b);
                    f = KWC.createCanvas();
                    if (b.width > b.height) {
                        f.width = e.size;
                        f.height = e.size * b.height / b.width
                    } else {
                        f.height = e.size;
                        f.width = e.size * b.width / b.height
                    }
                    g = f.getContext("2d");
                    g.drawImage(b, 0, 0, f.width, f.height);
                    b.src = null;
                    b = null;
                    e.image = f;
                    if (d) {
                        return d()
                    }
                }
            })(this);
            setTimeout(((function (e) {
                return function () {
                    return b.src = window.URL.createObjectURL(c.file)
                }
            })(this)), 500)
        } else {
            if ((!this.image) && (!this.url) && c && c.source_url) {
                if (this.loading) {
                    return
                }
                this.loading = true;
                b = KWC.createImage();
                b.crossOrigin = "Anonymous";
                b.onload = (function (e) {
                    return function () {
                        var f, g;
                        f = KWC.createCanvas();
                        if (b.width > b.height) {
                            f.width = e.size;
                            f.height = e.size * b.height / b.width
                        } else {
                            f.height = e.size;
                            f.width = e.size * b.width / b.height
                        }
                        g = f.getContext("2d");
                        g.drawImage(b, 0, 0, f.width, f.height);
                        e.image = f;
                        if (d) {
                            return d()
                        }
                    }
                })(this);
                setTimeout(((function (e) {
                    return function () {
                        return b.src = c.getBestSourceURL().replace("http://", "//")
                    }
                })(this)), 500)
            } else {
                if ((!this.image) && this.url) {
                    this.image = KWC.createImage();
                    this.image.crossOrigin = "Anonymous";
                    this.image.onerror = (function (e) {
                        return function (f) {
                            e.image = null;
                            return e.url = null
                        }
                    })(this);
                    this.image.onload = d;
                    this.image.src = this.url.replace("http://", "//")
                }
            }
        }
        return this.image
    };
    a.prototype.unload = function () {
        return delete this.image
    };
    return a
})();
module.exports = this._kw111;
_kw111 = require("./thumblist.coffee", _kw111);
this._kw94 = (function () {
    function a(g, j) {
        var l, k, i, f, d, c, h, b, e;
        this.source_url = j;
        this.list = [];
        this.callbacks = [];
        this.load_status = 0;
        for (d = 0, h = g.length; d < h; d++) {
            i = g[d];
            f = i;
            if (i._kw92 == null) {
                f = new _kw111(i.size, i.url)
            }
            if (i.image) {
                f.image = i.image
            }
            if ((f.image != null) || (f.url != null) || (f._kw92 != null)) {
                this.list.push(f)
            }
        }
        if (this.source_url) {
            k = [];
            e = this.list;
            for (c = 0, b = e.length; c < b; c++) {
                i = e[c];
                k.push(i.size)
            }
            l = KWP_CONF.memory_saving_mode ? 480 : 960;
            while (true) {
                if (k.indexOf(l) < 0) {
                    this.list.push(new _kw111(l, null))
                }
                l = l / 2;
                if (l <= KWP_CONF.photoThumbSize) {
                    break
                }
            }
        }
        this.list.sort(function (o, m) {
            return o.size - m.size
        })
    }
    a.prototype.unload = function () {
        var b, d, c;
        for (b = d = 1, c = this.list.length - 1; d <= c; b = d += 1) {
            if (this.list[b].unload) {
                this.list[b].unload()
            }
        }
    };
    a.prototype.loaded = function () {
        var f, b, e, d;
        this.load_status++;
        b = this.callbacks;
        this.callbacks = [];
        for (e = 0, d = b.length; e < d; e++) {
            f = b[e];
            f()
        }
    };
    a.prototype.getUploadList = function () {
        var d, f, c, h, e, b, g;
        c = [];
        c.push(this.list[0]);
        for (d = h = g = this.list.length - 1; h >= 1; d = h += -1) {
            if (this.list[d].image) {
                c.push(this.list[d]);
                break
            }
        }
        for (e = 0, b = c.length; e < b; e++) {
            f = c[e];
            f.uploaded = false
        }
        return c
    };
    a.prototype.getBestSourceURL = function () {
        var c, e, b, d;
        d = this.list;
        for (e = 0, b = d.length; e < b; e++) {
            c = d[e];
            if (c.size === 960 && (c.url != null)) {
                return c.url
            }
        }
        return this.source_url
    };
    a.prototype._kw39 = function (o, l, k, i) {
        var f, m, c, g, e, j, b, h, d;
        if (k == null) {
            k = true
        }
        if (i == null) {
            i = false
        }
        f = null;
        h = this.list;
        for (g = 0, j = h.length; g < j; g++) {
            m = h[g];
            f = m;
            if (o < f.size) {
                break
            }
        }
        if (f.image && (f.image.complete || f.image instanceof HTMLCanvasElement)) {
            return f.image
        }
        if (l != null) {
            this.callbacks.push(l)
        }
        if ((!f.image) && k) {
            if (f._kw92 != null) {
                f._kw92(((function (p) {
                    return function () {
                        return p.loaded()
                    }
                })(this)), this)
            }
        }
        if (i) {
            return f.image
        }
        d = this.list;
        for (e = 0, b = d.length; e < b; e++) {
            c = d[e];
            if ((c.image != null) && (c.image.complete || c.image instanceof HTMLCanvasElement)) {
                if ((!f.image || !f.image.complete || !(f.image instanceof HTMLCanvasElement)) || Math.abs(f.size - o) > Math.abs(c.size - o)) {
                    f = c
                }
            }
        }
        return f.image
    };
    a.prototype.addOrientedThumb = function (h, c, g, f) {
        var d, e, i, b;
        if (f == null) {
            f = false
        }
        jQuery(g).empty();
        i = (function (j) {
            return function () {
                return j.addOrientedThumb(h, c, g)
            }
        })(this);
        b = this._kw39(h, i, true, true);
        if (b !== null) {
            switch (c) {
                case 8:
                    d = KWC.createCanvas();
                    d.width = b.height;
                    d.height = b.width;
                    e = d.getContext("2d");
                    e.translate(d.width / 2, d.height / 2);
                    e.rotate(-Math.PI * 0.5);
                    e.drawImage(b, -b.width / 2, -b.height / 2, b.width, b.height);
                    return g.appendChild(d);
                case 6:
                    d = KWC.createCanvas();
                    d.width = b.height;
                    d.height = b.width;
                    e = d.getContext("2d");
                    e.translate(d.width / 2, d.height / 2);
                    e.rotate(Math.PI * 0.5);
                    e.drawImage(b, -b.width / 2, -b.height / 2, b.width, b.height);
                    return g.appendChild(d);
                case 3:
                    d = KWC.createCanvas();
                    d.width = b.width;
                    d.height = b.height;
                    e = d.getContext("2d");
                    e.translate(d.width / 2, d.height / 2);
                    e.rotate(Math.PI);
                    e.drawImage(b, -b.width / 2, -b.height / 2, b.width, b.height);
                    return g.appendChild(d);
                case 4:
                    d = KWC.createCanvas();
                    d.width = b.width;
                    d.height = b.height;
                    e = d.getContext("2d");
                    e.translate(d.width / 2, d.height / 2);
                    e.scale(1, -1);
                    e.drawImage(b, -b.width / 2, -b.height / 2, b.width, b.height);
                    return g.appendChild(d);
                case 2:
                    d = KWC.createCanvas();
                    d.width = b.width;
                    d.height = b.height;
                    e = d.getContext("2d");
                    e.translate(d.width / 2, d.height / 2);
                    e.scale(-1, 1);
                    e.drawImage(b, -b.width / 2, -b.height / 2, b.width, b.height);
                    return g.appendChild(d);
                case 5:
                    d = KWC.createCanvas();
                    d.width = b.height;
                    d.height = b.width;
                    e = d.getContext("2d");
                    e.translate(d.width / 2, d.height / 2);
                    e.scale(1, -1);
                    e.rotate(-Math.PI * 0.5);
                    e.drawImage(b, -b.width / 2, -b.height / 2, b.width, b.height);
                    return g.appendChild(d);
                case 7:
                    d = KWC.createCanvas();
                    d.width = b.height;
                    d.height = b.width;
                    e = d.getContext("2d");
                    e.translate(d.width / 2, d.height / 2);
                    e.scale(-1, 1);
                    e.rotate(-Math.PI * 0.5);
                    e.drawImage(b, -b.width / 2, -b.height / 2, b.width, b.height);
                    return g.appendChild(d);
                default:
                    if (f) {
                        d = KWC.createCanvas();
                        d.width = b.width;
                        d.height = b.height;
                        e = d.getContext("2d");
                        e.drawImage(b, 0, 0);
                        return g.appendChild(d)
                    } else {
                        return g.appendChild(b)
                    }
            }
        } else {
            return null
        }
    };
    a.prototype.save = function () {
        var d, c, f, b, e;
        d = [];
        e = this.list;
        for (f = 0, b = e.length; f < b; f++) {
            c = e[f];
            if (c.url != null) {
                d.push({
                    size: c.size,
                    url: c.url
                })
            }
        }
        return d
    };
    return a
})();
module.exports = this._kw94;
window.URL = window.URL || window.webkitURL;
var KWP_utils = {
    CORSimgTester: function (b, c) {
        var a = new Image();
        a.crossOrigin = "anonymous";
        a.onload = function () {
            var e = document.createElement("canvas");
            var d = e.getContext("2d");
            d.drawImage(a, 0, 0);
            try {
                var g = d.getImageData(0, 0, 1, 1);
                b()
            } catch (f) { } finally {
                c()
            }
        };
        a.src = KWP_CONF.CORSImg || "//s3-eu-west-1.amazonaws.com/static.creator5.koffeeware.eu/img/thumb.jpg"
    },
    applicationCompatible: function () {
        return (!!window.URL || !!window.webkitURL) && !!window.HTMLCanvasElement && !!window.CanvasRenderingContext2D && !!window.atob && !!window.FormData && !!window.Blob && !!window.Uint8Array && !!window.File && !!window.FileReader
    },
    setAuthorization: function (b) {
        KWP_CONF.authorizationServerOrigin = KWP_CONF.authorizationServer;
        var a = Math.floor(Math.random() * KWP_CONF.authorizationServerSD.length);
        KWP_CONF.authorizationServer = KWP_CONF.authorizationServerOrigin.replace("<sub>", KWP_CONF.authorizationServerSD[a]);
        if (typeof b == "function") {
            b()
        }
    },
    addLogo: function (a) {
        jQuery("#logozone").html("<a href='" + a.href + "'><img src='" + a.url + "'></a>")
    },
    addTextLogo: function (a) {
        jQuery("#logozone").html("<a style='text-decoration:none; color:#2c2c2c;' href='" + a.href + "'>" + a.text + "</a>").addClass("retroshadow")
    },
    createSimpleThumbnail: function (b, c) {
        jQuery(".thumbnail").empty();
        KWP.imagesLoaded.simpleimage = {
            upload: {
                data_prepared: false,
                progress: false,
                complete: false,
                online_url: null,
                hash: false,
                can_retry: KWP_CONF.maxUploadRetries
            },
            image_source: window.URL.createObjectURL(b),
            file: b
        };
        var a = new Image();
        a.onload = function () {
            var d = new _kw34(a);
            var e = d.create(250);
            jQuery(".thumbnail").append(e);
            KWP.imagesLoaded.simpleimage.width = a.width;
            KWP.imagesLoaded.simpleimage.height = a.height;
            KWP.imagesLoaded.simpleimage.upload.hash = CryptoJS.SHA1(a.width + a.height + KWP.imagesLoaded.simpleimage.file.name + KWP.imagesLoaded.simpleimage.file.size).toString();
            uploader.uploadPhoto("simpleimage", function (f) {
                c(f)
            })
        };
        a.onerror = function (d) {
            window.URL.revokeObjectURL(a.src);
            a = null
        };
        a.src = KWP.imagesLoaded.simpleimage.image_source
    },
    thumbFromCreation: function (a) {
        return creation._kw172(a)
    },
    setImage: function (a) {
        creation.pages[0].clear();
        creation.pages[0].add(new _kw53(a));
        return creation.pages[0].objects[0]._kw103()
    },
    _kw114: function (a) {
        return Math.floor(KWP_CONF.minFontSize + Math.pow(a, 2) * (KWP_CONF.maxFontSize - KWP_CONF.minFontSize))
    },
    _kw115: function (a) {
        return Math.sqrt((a - KWP_CONF.minFontSize) / (KWP_CONF.maxFontSize - KWP_CONF.minFontSize))
    },
    randomString: function (c) {
        var b = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz-_".split("");
        if (!c) {
            c = Math.floor(Math.random() * b.length)
        }
        var d = "";
        for (var a = 0; a < c; a++) {
            d += b[Math.floor(Math.random() * b.length)]
        }
        return d
    },
    _kw112: function (a) {
        var e = atob(a.split(",")[1]);
        var d = new ArrayBuffer(e.length);
        var b = new Uint8Array(d);
        for (var c = 0; c < e.length; c++) {
            b[c] = e.charCodeAt(c)
        }
        return new Blob([d], {
            type: a.split(",")[0].split(":")[1].split(";")[0]
        })
    },
    Cookie: {
        create: function (c, d, e) {
            if (e) {
                var b = new Date();
                b.setTime(b.getTime() + (e * 24 * 60 * 60 * 1000));
                var a = "; expires=" + b.toGMTString()
            } else {
                var a = ""
            }
            document.cookie = c + "=" + d + a + "; path=/"
        },
        read: function (b) {
            var e = b + "=";
            var a = document.cookie.split(";");
            for (var d = 0; d < a.length; d++) {
                var f = a[d];
                while (f.charAt(0) == " ") {
                    f = f.substring(1, f.length)
                }
                if (f.indexOf(e) == 0) {
                    return f.substring(e.length, f.length)
                }
            }
            return null
        },
        erase: function (a) {
            Cookie.create(a, "", -1)
        }
    },
    _kw113: function () {
        var a = 0;
        jQuery.each(KWP.imagesLoaded, function (b, c) {
            a += c.config.quantity
        });
        return a
    },
    saveJPG: function () {
        editor.selected = null;
        editor.update();
        var b = editor._kw172(1024).toDataURL("image/jpeg").split(",")[1];
        var a = new FormData();
        a.append("content-type", "image/jpeg");
        a.append("file-data", b);
        a.append("file-name", KWP_CONF.client + ".jpg");
        jQuery.ajax({
            url: KWP_CONF.downloadServer,
            type: "POST",
            data: a,
            processData: false,
            contentType: false,
            success: function (c) {
                jQuery(window).unbind("beforeunload");
                window.location = KWP_CONF.downloadServer + "?file=" + KWP_CONF.client + ".jpg"
            },
            error: function (d, c) { }
        })
    },
    _kw116: function (b) {
        var a = b.font_name;
        a += b.font_size;
        a += b.align;
        a += b.color;
        a += b.width;
        a += b.height;
        a += b.replacedtext;
        return CryptoJS.SHA1(a)
    },
    localDefaultSave: function (b, d, a, c) {
        var e = {};
        if (localStorage.getItem("cfivestorage")) {
            e = JSON.parse(localStorage.getItem("cfivestorage"))
        }
        e[a] = {
            client: KWP_CONF.client,
            thumburl: d,
            url: document.location.href.split("#")[0],
            date: new Date().getTime(),
            key: b
        };
        localStorage.setItem("cfivestorage", JSON.stringify(e))
    },
    saveProject: function () {
        if (jQuery("#save_project").hasClass("disabled")) {
            return
        }
        if (!uploader.in_progress && uploader.should_save) {
            var b = function () {
                jQuery("#save_project").effect("highlight", {
                    color: "#99C316"
                });
                jQuery("#save_project").attr("src", KWP_CONF.static_serv + "img/preloader.gif");
                uploader.autosaving = false;
                uploader.save_once_triggered = true;
                uploader.done_callback = null;
                uploader.save_callback = window.save_callback;
                uploader.uploadList()
            };
            if (KWP_CONF.full_save_request) {
                var a = true;
                jQuery.each(manager.getImageList(), function (c, d) {
                    if (d.usecount == 0) {
                        a = false
                    }
                });
                if (!window.savechoice && !a) {
                    window.savechoice = true;
                    jQuery("#full_save_modal").modal();
                    jQuery("#full_save_modal").find("[name=save_mode]").on("change", function () {
                        switch (jQuery(this).val()) {
                            case "full":
                                uploader.full_save = true;
                                break;
                            case "partial":
                                uploader.full_save = false;
                                break
                        }
                    });
                    jQuery("#save_now").on("click", function () {
                        KWP_utils.saveProject()
                    })
                } else {
                    b()
                }
            } else {
                b()
            }
        }
    },
    buildFontList: function () {
        jQuery("#font_selector").empty();
        var f = [].concat(KWP_CONF.regularFontList);
        var c = {
            fontactive: function (h, g) {
                editor.update()
            },
            active: function () {
                editor.update()
            }
        };
        c.custom = {
            families: f
        };
        if (KWP_CONF.googleFontList.length > 0) {
            var b = [];
            for (var a in KWP_CONF.googleFontList) {
                b.push(KWP_CONF.googleFontList[a].replace(/\s/g, "+") + "::latin,latin-ext")
            }
            c.google = {
                families: b
            }
        }
        WebFontConfig = c;
        var d = f.concat(KWP_CONF.googleFontList);
        jQuery.each(d, function (g, i) {
            var h = i.replace(/\+/g, " ");
            var j = h.split(":")[0];
            var m = j;
            if (m.substr(0, 1) == '-')
                m = m.substr(1);
            jQuery("#font_selector").append("<div data-font='" + m + "' style='font-family:" + h + "' class='google-font'>" + j + "</div>")
        });
        var e = false;
        jQuery("script[src]").each(function () {
            if (jQuery(this).attr("src").indexOf("webfont.js") != -1) {
                e = true
            }
        });
        if (e && WebFont) {
            WebFont.load(WebFontConfig)
        } else {
            (function () {
                var g = document.createElement("script");
                g.src = ("https:" == document.location.protocol ? "https" : "http") + "://ajax.googleapis.com/ajax/libs/webfont/1.4.7/webfont.js";
                g.type = "text/javascript";
                g.async = "true";
                var h = document.getElementsByTagName("script")[0];
                h.parentNode.insertBefore(g, h)
            })()
        }
    },
    addFontToList: function (a) {
        if (jQuery.inArray(a, KWP_CONF.googleFontList) === -1 && !jQuery.inArray([], a)) {
            KWP_CONF.googleFontList.push(a)
        }
    },
    createShareButtons: function (a, c, b) {
        if (document.location.protocol == "https:") {
            a = a.replace("http:", "https:")
        }
        jQuery("#share_fb").attr("href", "https://www.facebook.com/share.php?u=" + a);
        jQuery("#share_twt").attr("href", "https://twitter.com/share?url=" + escape(a));
        jQuery("#share_pnt").attr("href", "https://pinterest.com/pin/create/button/?url=" + a + "&media=" + b + "&description=" + c);
        jQuery(".sharelink").attr("data-url", a);
        jQuery("#share_toggle").fadeIn().effect("highlight");
        if (!controller.sharepoped) {
            controller.sharepoped = true;
            jQuery("#share_toggle").show().popover("show")
        }
    },
    creationContentsReport: function () {
        return creation.getContentsReport()
    },
    buildFilterList: function () {
        registerFilters();
        jQuery("#frames_zone").empty();
        var b = "";
        b += "<div class='filter-title'>" + KWC.translate("Filters") + "</div>";
        b += "<div id='filters_menu'></div>";
        b += "<div class='filters-zone'>";
        for (var a in Filters) {
            if (Filters.hasOwnProperty(a)) {
                b += "<div data-id='" + Filters[a].id + "' id='" + Filters[a].id + "' class='filter-image'>";
                b += "<p class='title'>" + Filters[a].name + "</p>";
                b += "</div>"
            }
        }
        b += "</div>";
        b += "<div class='frame-title'>" + KWC.translate("Frames") + "</div>";
        b += "<div id='frame_active'></div>";
        b += "<div id='frames_frames'></div>";
        jQuery("#frames_zone").prepend(b)
    },
    _kw119: function (c) {
        if (!c) {
            return
        }
        var b = document.createElement("canvas");
        b.width = c.width;
        b.height = c.height;
        var a = b.getContext("2d");
        a.drawImage(c, 0, 0);
        return b
    },
    _kw127: function (c) {
        c = c.replace(/^\s+|\s+$/g, "");
        c = c.toLowerCase();
        var e = "ãàáäâẽèéëêìíïîõòóöôùúüûñç·/_,:;";
        var d = "aaaaaeeeeeiiiiooooouuuunc------";
        for (var b = 0, a = e.length; b < a; b++) {
            c = c.replace(new RegExp(e.charAt(b), "g"), d.charAt(b))
        }
        return c.replace(/[^a-z0-9 -]/g, "").replace(/\s+/g, "-").replace(/-+/g, "-")
    },
    _kw120: function (a, b) {
        jQuery(".menu-block .content").removeClass("active");
        jQuery(".menu-block .title img").attr("src", KWP_CONF.static_serv + "img/icons/menu_down.png");
        jQuery(".menu-block .content:visible").slideUp(a, function () {
            if (typeof b == "function") {
                b()
            }
        })
    },
    imageStorage: function (c) {
        var a = false;
        jQuery("#thumbnails_zone").find(".menu-thumbnail").removeClass("removing").draggable({
            disabled: false
        });
        jQuery(".delete-photos-btn").removeClass("active");
        jQuery("#thumbnails_zone .placeholder").stop(true, true).remove();
        for (var b = 0, e; e = c[b]; b++) {
            if (e.type != "image/jpeg" && e.type != "image/jpg" && e.type != "image/png" && e.type != "image/pjpeg" && e.type != "image/x-png") {
                if (!a) {
                    a = true;
                    alert(KWC.translate("This application only accepts JPEG and PNG files. Please check your list."))
                }
                continue
            }
            var g = jQuery.MD5(e.name + e.size);
            var d = false;
            jQuery.each(KWP.imagesLoaded, function (f, h) {
                if (f === g) {
                    d = true;
                    return false
                }
            });
            if (!d) {
                KWP.imagesLoaded[g] = {
                    to_canvas: {
                        type: "photo"
                    },
                    file: e
                }
            }
        }
        if (manager.getImageList()[0]) {
            return true
        }
        return false
    },
    updateCounts: function (c, b) {
        KWP.imagesLoaded[c].to_canvas.usecount = b;
        jQuery("#" + c).find(".number").html(b).removeClass("badge-success").removeClass("badge-important");
        if (b == 0) {
            jQuery("#" + c).find(".number").hide()
        } else {
            if (b == 1) {
                jQuery("#" + c).find(".number").show().addClass("badge-success")
            } else {
                jQuery("#" + c).find(".number").show().addClass("badge-important")
            }
        }
        var a = creation.product.pagespec && creation.product.pagespec.inc_pages && creation.product.pagespec.min_pages && creation.product.pagespec.max_pages;
        if (KWP_utils.unusedPhotos() == 0 && !a) {
            jQuery("#autofill_toggle").addClass("disabled");
            jQuery("#autofill_toggle").popover("hide")
        } else {
            jQuery("#autofill_toggle").removeClass("disabled")
        }
    },
    displayTotalPhoto: function () {
        var a = parseInt(jQuery("#thumbnails_zone .menu-thumbnail").length);
        jQuery("#nb_photos").html(a > 0 ? "(" + a + ")" : "")
    },
    popBookAutofill: function (b) {
        var a = creation.product.pagespec.inc_pages && creation.product.pagespec.min_pages && creation.product.pagespec.max_pages;
        if (a && KWP_CONF.advancedAutofill) {
            jQuery("#autofill_toggle").popover("show");
            if (b) {
                jQuery("#autofill_pages_slider").slider("value", b)
            }
        }
    },
    getSortedPhotoList: function (c, a) {
        var d;
        var b = [];
        switch (c) {
            case "input":
                d = function (f, e) {
                    return f.thumbindex - e.thumbindex
                };
                break;
            case "hue":
                d = function (f, e) {
                    return f.stats.hue - e.stats.hue
                };
                break;
            case "saturation":
                d = function (f, e) {
                    return f.stats.saturation - e.stats.saturation
                };
                break;
            case "lightness":
                d = function (f, e) {
                    return f.stats.lightness - e.stats.lightness
                };
                break;
            case "filename":
                d = function (f, e) {
                    return f.filename - e.filename
                };
                break;
            case "timestamp":
                d = function (f, e) {
                    return f.date - e.date
                };
                break;
            default:
                return;
                break
        }
        jQuery.each(manager.getImageList(), function (f, e) {
            if (!a || (a && e.usecount == 0)) {
                b.push(e)
            }
        });
        return b.sort(d)
    },
    unusedPhotos: function () {
        var a = 0;
        jQuery.each(KWP.imagesLoaded, function (c, b) {
            if (typeof b.to_canvas != "undefined" && b.to_canvas.usecount == 0) {
                if (!a) {
                    a = 1
                } else {
                    a++
                }
            }
        });
        return a
    },
    thumbnailDisplay: function () {
        jQuery("#photos_btn_group").hide();
        jQuery.each(KWP.imagesLoaded, function (a, b) {
            if (typeof (b.to_canvas) != "undefined" && b.to_canvas.type === "photo") {
                if (typeof (b.to_canvas.thumbnails) === "undefined" && typeof (b.file) !== "undefined") {
                    jQuery("#thumbnails_zone").append("<div data-selected='0' data-built='0' id='" + a + "' class='menu-thumbnail'><img src='" + KWP_CONF.static_serv + "img/image_loader.gif' /></div>")
                }
            }
        });
        KWP_utils.progressbar = new KWP_utils._kw128();
        KWP_utils.progressbar.check_advancement();
        new KWP_utils._kw129().check()
    },
    _kw124: function () {
        var a = function () {
            var e = false;
            var c = jQuery(".menu-thumbnail[data-loaded=0]:visible:first");
            if (c[0]) {
                e = jQuery(c[0]).attr("id")
            }
            if (e) {
                jQuery("[id=" + e + "]").attr("data-loaded", "1");
                var d = function (h, i) {
                    switch (KWP.imagesLoaded[e].to_canvas.type) {
                        case "frame":
                            var g = new Image();
                            g.onload = function () {
                                var j = new _kw38(KWP.imagesLoaded[e].to_canvas).create(g, 60, h);
                                jQuery(j).attr("id", KWP.imagesLoaded[e].to_canvas.id);
                                jQuery("#" + e).addClass("frame-image").html(j);
                                jQuery("#" + e).attr("data-loaded", "2");
                                i()
                            };
                            if (jQuery("#" + e).attr("data-sourceonline") == "0") {
                                g.src = KWP.imagesLoaded[jQuery("#" + e).attr("data-imageid")].to_canvas.thumbs.list[0].image.toDataURL("image/jpeg", 0.7)
                            } else {
                                g.crossOrigin = "Anonymous";
                                g.src = KWP.imagesLoaded[jQuery("#" + e).attr("data-imageid")].to_canvas.online_thumbs[0].url
                            }
                            break;
                        case "background":
                            jQuery("#" + e).addClass("background-image").html(f);
                            jQuery("#" + e).attr("data-loaded", "2");
                            i();
                            break;
                        case "clipart":
                            jQuery("#" + e).addClass("clipart-image").html(f);
                            jQuery("#" + e).draggable({
                                cursor: "crosshair",
                                appendTo: "body",
                                helper: "clone"
                            });
                            jQuery("#" + e).attr("data-loaded", "2");
                            i();
                            break;
                        case "pattern":
                            jQuery("#" + e).addClass("pattern-image").html(f);
                            jQuery("#" + e).draggable({
                                cursor: "crosshair",
                                appendTo: "body",
                                helper: "clone"
                            });
                            jQuery("#" + e).attr("data-loaded", "2");
                            i();
                            break;
                        case "foreground":
                            jQuery("#" + e).addClass("foreground-image").html(f);
                            jQuery("#" + e).attr("data-loaded", "2");
                            i();
                            break;
                        case "textframe":
                            jQuery("#" + e).addClass("textblock-image").html(f);
                            jQuery("#" + e).attr("data-loaded", "2");
                            i();
                            break;
                        default:
                            jQuery("#" + e).html(f);
                            jQuery("#" + e).attr("data-loaded", "2");
                            i();
                            break
                    }
                };
                var f = KWP.imagesLoaded[e].to_canvas.thumblist.list[0]._kw92();
                f.onload = function () {
                    d(f, function () {
                        setTimeout(KWP_utils._kw124, 1)
                    })
                };
                f.onerror = function () {
                    delete KWP.imagesLoaded[e];
                    jQuery("#" + e).remove();
                    KWP_utils._kw124()
                };
                if (f.complete) {
                    d(f, function () {
                        KWP_utils._kw124()
                    })
                }
            }
        };
        for (var b = 0; b < KWP_CONF.maxThumbGet; b++) {
            a()
        }
    },
    buildThumbnailIndex: 0,
    _kw129: function () {
        this.concurrent_thumbs_build = 0;
        this.max_concurrent_thumbs_build = KWP_CONF.maxThumbBuilds;
        this.get_process = function () {
            var b = false;
            jQuery(".menu-thumbnail").each(function () {
                if (jQuery(this).attr("data-built") === "0") {
                    b = jQuery(this).attr("id");
                    return false
                }
            });
            return b
        };
        this.check = function () {
            var b = this.get_process();
            if (b && this.concurrent_thumbs_build < this.max_concurrent_thumbs_build) {
                this.concurrent_thumbs_build++;
                this.build_thumbnail(b)
            }
        };
        this.build_thumbnail = function (d) {
            jQuery("#" + d).attr("data-built", "1");
            var c = d;
            var b = new Image();
            b.onload = function () {
                window.URL.revokeObjectURL(b.src);
                var g = [];
                for (var e = KWP_CONF.photoThumbSize; e <= 960; e *= 2) {
                    g.push({
                        size: e
                    })
                }
                var f = new _kw34(b);
                f._kw35(g, function () {
                    var i = 1;
                    jQuery("#" + c).empty();
                    var k = document.getElementById(c);
                    f.list.addOrientedThumb(0, i, k);
                    jQuery("#" + c).append("<span class='badge number'>0</span>");
                    jQuery("#" + c).draggable({
                        cursor: "crosshair",
                        appendTo: "body",
                        start: function (l, m) {
                            m.helper.append("<img src='" + jQuery(this).find("canvas").get()[0].toDataURL("image/jpeg") + "' />")
                        },
                        drag: function (l, m) {
                            editor.over(KWP.imagesLoaded[m.helper.context.id].to_canvas, l)
                        },
                        helper: "clone"
                    });
                    var j = function (m, l) {
                        jQuery("#" + m).tooltip({
                            delay: {
                                show: 500,
                                hide: 0
                            },
                            html: true,
                            animation: true,
                            placement: "right",
                            container: "body",
                            title: function () {
                                var o = document.createElement("span");
                                f.list.addOrientedThumb(480, l, o);
                                return o
                            },
                            template: '<div class="tooltip thumbnail-tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
                            callback: function () {
                                var o = parseInt(jQuery(".thumbnail-tooltip").css("top"));
                                if (o < 0) {
                                    jQuery(".thumbnail-tooltip").css({
                                        bottom: "auto",
                                        top: "0"
                                    })
                                }
                                if (o + 480 > jQuery(window).height()) {
                                    jQuery(".thumbnail-tooltip").css({
                                        top: "auto",
                                        bottom: "0"
                                    })
                                }
                            }
                        })
                    };
                    j(c, i);
                    f.list.file = KWP.imagesLoaded[c].file;
                    var h = new Date(KWP.imagesLoaded[c].file.lastModifiedDate).getTime();
                    KWP.imagesLoaded[c].to_canvas = {
                        _kw178: function (l) {
                            KWP_utils.updateCounts(c, l)
                        },
                        usecount: 0,
                        date: h,
                        filename: KWP.imagesLoaded[c].file.name,
                        thumbindex: KWP_utils.buildThumbnailIndex++,
                        stats: f.stats,
                        upload_hash: CryptoJS.SHA1(f.tohash + h + b.width + b.height + KWP.imagesLoaded[c].file.length).toString(),
                        type: "photo",
                        id: c,
                        width: b.width,
                        height: b.height,
                        thumbnails: g,
                        thumbs: f.list,
                        online: false,
                        online_url: "",
                        online_thumbs: [],
                        orientation: i
                    };
                    jQuery("#" + c).attr("data-built", "2");
                    delete f.tohash;
                    KWP_utils.progressbar.check_advancement();
                    a.concurrent_thumbs_build--;
                    b.src = "";
                    b = null;
                    KWP_utils._kw1(KWP.imagesLoaded[c].file, function (l, m) {
                        KWP.imagesLoaded[c].to_canvas.orientation = l;
                        if (l != 1) {
                            jQuery("#" + c).tooltip("destroy");
                            j(c, l);
                            manager.updatePhotoSource(KWP.imagesLoaded[c].to_canvas)
                        }
                        if (m) {
                            KWP.imagesLoaded[c].to_canvas.date = m.getTime()
                        }
                    });
                    KWP_utils.displayTotalPhoto();
                    setTimeout(function () {
                        a.check()
                    }, 5)
                })
            };
            b.onerror = function (e) {
                if (!b) {
                    return
                }
                window.URL.revokeObjectURL(b.src);
                delete KWP.imagesLoaded[c];
                jQuery("#" + c).remove();
                KWP_utils.progressbar.total_elements--;
                KWP_utils.progressbar.check_advancement();
                a.concurrent_thumbs_build--;
                a.check()
            };
            b.src = window.URL.createObjectURL(KWP.imagesLoaded[c].file)
        };
        var a = this
    },
    search: function (b) {
        var a = jQuery(b).parent().next().attr("id");
        jQuery("#" + a).find("div").hide();
        jQuery("#" + a).find("div").each(function () {
            var c = jQuery(this).attr("data-tags").split(",");
            jQuery.each(c, function (e, d) {
                if (KWP_utils._kw127(d).indexOf(KWP_utils._kw127(b.value)) !== -1) {
                    jQuery(this).show()
                }
            })
        })
    },
    hideClipartsTagSearch: function () {
        jQuery("#cliparts_block").find(".search-container").hide()
    },
    hideBackgroundsTagSearch: function () {
        jQuery("#backgrounds_block").find(".search-container").hide()
    },
    reset_form_element: function (a) {
        a.wrap("<form>").parent("form").trigger("reset");
        a.unwrap()
    },
    _kw128: function () {
        this.elements_to_load = 0;
        this.total_elements = 0;
        this.unloaded_elements;
        this.loaded_elements;
        this.init = function () {
            jQuery("#photo_load_progress").show().progressbar({
                value: 0
            });
            if (KWP_CONF.photosLoaderLayout) {
                jQuery("body").prepend(jQuery("#photos_loading_layout").html());
                jQuery("#photos_loading").show();
                jQuery("#photos_loading_progress").progressbar({
                    value: 0
                })
            }
            jQuery("#thumbnails_zone .menu-thumbnail").each(function () {
                a.total_elements++;
                if (jQuery(this).attr("data-built") !== "2") {
                    a.elements_to_load++
                }
            });
            if (controller.started && !KWP_utils.keepController) {
                controller.destroy()
            }
        };
        this.check_advancement = function () {
            this.unloaded_elements = 0;
            this.loaded_elements = 0;
            jQuery("#thumbnails_zone .menu-thumbnail").each(function () {
                if (jQuery(this).attr("data-built") === "0") {
                    a.unloaded_elements++
                } else {
                    if (jQuery(this).attr("data-built") === "2") {
                        a.loaded_elements++
                    }
                }
            });
            if (this.elements_to_load > this.unloaded_elements) {
                var b = (this.elements_to_load - this.unloaded_elements) / this.elements_to_load * 100;
                jQuery("#photo_load_progress").progressbar({
                    value: b
                });
                if (KWP_CONF.photosLoaderLayout) {
                    jQuery("#photos_loading_progress").progressbar({
                        value: b
                    })
                }
            }
            if (this.loaded_elements === this.total_elements) {
                manager.clearWelcome();
                editor._kw79();
                jQuery("#photo_load_progress").fadeOut("normal", function () {
                    jQuery("#photos_btn_group").fadeIn()
                });
                jQuery("#photos_loading").remove();
                if (!controller.started) {
                    controller.start()
                }
                if (jQuery("#thumbnails_zone .menu-thumbnail").length > 0) {
                    jQuery(".delete-photos-btn").removeClass("disabled")
                }
                var c = KWP_utils.unusedPhotos();
                if (c > 0) {
                    jQuery("#autofill_toggle").removeClass("disabled")
                }
                if (c > 5) {
                    jQuery("#autofill_toggle").popover("show")
                }
            }
        };
        var a = this;
        this.init()
    },
    loadProject: function (a, b) {
        jQuery.getJSON(KWP_CONF.s3bucket + KWP_CONF.client + "/creations/" + a + ".json", function (c) {
            if (typeof b == "function") {
                b(c)
            }
        })
    },
    setBusinessCardForm: function () {
        if (!KWP_CONF.business_card_fields) {
            return
        }
        $modal = jQuery('<div class="modal hide fade">');
        $modal.append('<div class="modal-header" style="text-align:center;"><h4>' + KWC.translate("Insert your informations") + "</h4></div>");
        $mb = jQuery('<div class="modal-body" style="background:#EEE; text-align:center;">');
        $form = jQuery("<form>").on("submit", function (c) {
            c.preventDefault();
            $modal.modal("hide");
            jQuery.getJSON(kwtemplates.tplist[Object.keys(kwtemplates.tplist)[0]].url, function (g) {
                creation.applyThemeImpl(g, manager);
                for (var d in KWP_CONF.business_card_fields) {
                    var e = KWP_CONF.business_card_fields[d];
                    creation.replaceTextContents("%" + e.id + "%", $form.find("#" + e.id).val())
                }
            })
        });
        $sideform = jQuery("<form>").on("submit", function (c) {
            c.preventDefault()
        });
        for (var a in KWP_CONF.business_card_fields) {
            var b = KWP_CONF.business_card_fields[a];
            $form.append("<div class='form-group'><input id='" + b.id + "' style='width:80%' type='text' class='form-control select2-input' placeholder='" + b.name + "'></div>");
            $sideform.append("<label style='margin:0 0 -3px 3px; font-size:0.9em;' for='" + b.id + "'>" + b.name + "</label><input id='" + b.id + "' style='width:100%; height:auto;' type='text' class='form-control select2-input'>")
        }
        $submit = jQuery('<input type="submit" class="btn btn-info btn-large" value="' + KWC.translate("Send and start creation") + '">');
        $form.append($submit);
        $mb.append($form);
        $modal.append($mb);
        jQuery("body").append($modal);
        jQuery("#cardinfo_form").css({
            padding: "10px 10%"
        }).append($sideform);
        $sideform.find("input").on("input", function (c) {
            creation.replaceTextContents("%" + jQuery(this).attr("id") + "%", jQuery(this).val())
        });
        $modal.modal({
            keyboard: false,
            backdrop: "static"
        });
        jQuery("[data-related=cardinfo_block]").removeClass("hide").show()
    },
    loadPhotosFromFileManager: function (b, d) {
        jQuery("#upload-ways").hide();
        jQuery.each(b, function (e, h) {
            if (h.online) {
                if (!h.online_thumb_list) {
                    h.online_thumb_list = new _kw94(h.online_thumbs, h.online_url)
                }
                e = (function (f) {
                    return function () {
                        f.render_buffer_cropw = 0;
                    }
                })(this);
                h.online_thumb_list._kw39(d, e)
            }

            if (typeof KWP.imagesLoaded[h.id] == "undefined") {
                KWP.imagesLoaded[h.id] = {};
                KWP.imagesLoaded[h.id].upload = {
                    uploaded: true,
                    in_progress: false,
                    can_retry: 0,
                    hash: jQuery.MD5(h.online_url),
                    data: ""
                };
                KWP.imagesLoaded[h.id].to_canvas = h;
                KWP.imagesLoaded[h.id].to_canvas.type = "photo";
                KWP.imagesLoaded[h.id].to_canvas._kw178 = function (i) {
                    KWP_utils.updateCounts(h.id, i)
                };
                KWP.imagesLoaded[h.id].to_canvas.usecount = 0;
                jQuery("#thumbnails_zone .placeholder").remove();
                var g = document.createElement("span");
                h.online_thumb_list.addOrientedThumb(0, h.orientation, g);
                var f = jQuery("<div data-selected='0' data-built='2' id='" + h.id + "' class='menu-thumbnail'></div>");
                f.append(g);
                f.append("<span class='badge number'>0</span>");
                f.draggable({
                    cursor: "crosshair",
                    appendTo: "body",
                    drag: function (i, j) {
                        editor.over(KWP.imagesLoaded[h.id].to_canvas, i)
                    },
                    helper: "clone"
                });
                f.tooltip({
                    delay: {
                        show: 500,
                        hide: 0
                    },
                    html: true,
                    animation: true,
                    placement: "right",
                    container: "body",
                    title: function () {
                        var i = document.createElement("span");
                        h.online_thumb_list.addOrientedThumb(480, h.orientation, i);
                        return i
                    },
                    template: '<div class="tooltip thumbnail-tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
                    callback: function () {
                        var i = parseInt(jQuery(".thumbnail-tooltip").css("top"));
                        if (i < 0) {
                            jQuery(".thumbnail-tooltip").css({
                                bottom: "auto",
                                top: "0"
                            })
                        }
                        if (i + 480 > jQuery(window).height()) {
                            jQuery(".thumbnail-tooltip").css({
                                top: "auto",
                                bottom: "0"
                            })
                        }
                    }
                });
                jQuery("#thumbnails_zone").append(f);
                KWP_utils.displayTotalPhoto()

            }
        });


    },
    loadPhotosFromProject: function (a, d) {
        var b = a._kw106();
        jQuery.each(b, function (e, h) {
            if (typeof KWP.imagesLoaded[h.id] == "undefined") {
                KWP.imagesLoaded[h.id] = {};
                KWP.imagesLoaded[h.id].upload = {
                    uploaded: true,
                    in_progress: false,
                    can_retry: 0,
                    hash: jQuery.MD5(h.online_url),
                    data: ""
                };
                KWP.imagesLoaded[h.id].to_canvas = h;
                KWP.imagesLoaded[h.id].to_canvas.type = "photo";
                KWP.imagesLoaded[h.id].to_canvas._kw178 = function (i) {
                    KWP_utils.updateCounts(h.id, i)
                };
                KWP.imagesLoaded[h.id].to_canvas.usecount = 0;
                jQuery("#thumbnails_zone .placeholder").remove();
                var g = document.createElement("span");
                h.online_thumb_list.addOrientedThumb(0, h.orientation, g);
                var f = jQuery("<div data-selected='0' data-built='2' id='" + h.id + "' class='menu-thumbnail'></div>");
                f.append(g);
                f.append("<span class='badge number'>0</span>");
                f.draggable({
                    cursor: "crosshair",
                    appendTo: "body",
                    drag: function (i, j) {
                        editor.over(KWP.imagesLoaded[h.id].to_canvas, i)
                    },
                    helper: "clone"
                });
                f.tooltip({
                    delay: {
                        show: 500,
                        hide: 0
                    },
                    html: true,
                    animation: true,
                    placement: "right",
                    container: "body",
                    title: function () {
                        var i = document.createElement("span");
                        h.online_thumb_list.addOrientedThumb(480, h.orientation, i);
                        return i
                    },
                    template: '<div class="tooltip thumbnail-tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
                    callback: function () {
                        var i = parseInt(jQuery(".thumbnail-tooltip").css("top"));
                        if (i < 0) {
                            jQuery(".thumbnail-tooltip").css({
                                bottom: "auto",
                                top: "0"
                            })
                        }
                        if (i + 480 > jQuery(window).height()) {
                            jQuery(".thumbnail-tooltip").css({
                                top: "auto",
                                bottom: "0"
                            })
                        }
                    }
                });
                jQuery("#thumbnails_zone").append(f);
                KWP_utils.displayTotalPhoto()
            }
        });
        a._kw166();
        controller.set_sizes();
        if (d) {
            var c = [];
            jQuery.each(d, function (e, f) {
                c.push({
                    id: f.id,
                    width: f.width,
                    height: f.height,
                    created_time: new Date(f.date),
                    filename: f.filename,
                    source: f.online_url,
                    thumbnails: f.online_thumbs
                })
            });
            KWP_utils.registerPhotos(c)
        }
    },
    _kw126: function (a) {
        editor.editable = false;
        jQuery.getJSON(KWP_CONF.s3bucket + KWP_CONF.client + "/creations/" + a + ".json", function (b) {
            creation.load(b, manager)
        })
    },
    launchFullScreen: function (a) {
        if (a.requestFullScreen) {
            a.requestFullScreen()
        } else {
            if (a.mozRequestFullScreen) {
                a.mozRequestFullScreen()
            } else {
                if (a.webkitRequestFullScreen) {
                    a.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT)
                } else {
                    jQuery("#rq_fullsrc").hide()
                }
            }
        }
    },
    _kw118: function () {
        if (document.cancelFullScreen) {
            document.cancelFullScreen()
        } else {
            if (document.mozCancelFullScreen) {
                document.mozCancelFullScreen()
            } else {
                if (document.webkitCancelFullScreen) {
                    document.webkitCancelFullScreen()
                }
            }
        }
    },
    registerPhotos: function (c) {
        for (var a in c) {
            (function (d) {
                var f = c[d];
                if (typeof KWP.imagesLoaded[f.id] != "undefined") {
                    return
                }
                jQuery("#thumbnails_zone .placeholder").remove();
                KWP.imagesLoaded[f.id] = {};
                KWP.imagesLoaded[f.id].upload = {
                    uploaded: true,
                    in_progress: false,
                    can_retry: 0,
                    hash: "",
                    data: ""
                };
                KWP.imagesLoaded[f.id].to_canvas = {
                    type: "photo",
                    date: f.created_time ? new Date(f.created_time).getTime() : Date.now(),
                    filename: f.filename || "image-" + KWP_utils.buildThumbnailIndex + ".jpg",
                    thumbindex: KWP_utils.buildThumbnailIndex++,
                    stats: {
                        hue: 0,
                        saturation: 0,
                        lightness: 0,
                        red: 0,
                        green: 0,
                        blue: 0,
                        center: {
                            x: 0.5,
                            y: 0.5
                        }
                    },
                    width: f.width,
                    height: f.height,
                    id: f.id,
                    online: true,
                    online_url: f.source,
                    online_thumbs: f.thumbnails.sort(function (h, g) {
                        return h.size - g.size
                    }),
                    _kw178: function (g) {
                        KWP_utils.updateCounts(f.id, g)
                    },
                    usecount: 0
                };
                var e = new Image();
                e.crossOrigin = "Anonymous";
                e.onload = function () {
                    KWP.imagesLoaded[f.id].to_canvas.stats = _kw34.computeStats(e)
                };
                e.src = KWP.imagesLoaded[f.id].to_canvas.online_thumbs[0].url;
                jQuery("#thumbnails_zone .placeholder").remove();
                jQuery("#thumbnails_zone").append("<div data-selected='0' data-loaded='2' data-built='2' id='" + f.id + "' class='menu-thumbnail'></div>");
                jQuery("#" + f.id).append(e);
                jQuery("#" + f.id).append("<span class='badge number'>0</span>");
                jQuery("#" + f.id).draggable({
                    cursor: "crosshair",
                    appendTo: "body",
                    helper: "clone"
                });
                jQuery("#" + f.id).tooltip({
                    delay: {
                        show: 500,
                        hide: 0
                    },
                    html: true,
                    animation: true,
                    placement: "right",
                    container: "body",
                    title: "<img src='" + f.source + "' />",
                    template: '<div class="tooltip thumbnail-tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
                    callback: function () {
                        var g = parseInt(jQuery(".thumbnail-tooltip").css("top"));
                        if (g < 0) {
                            jQuery(".thumbnail-tooltip").css({
                                bottom: "auto",
                                top: "0"
                            })
                        }
                        if (g + 480 > jQuery(window).height()) {
                            jQuery(".thumbnail-tooltip").css({
                                top: "auto",
                                bottom: "0"
                            })
                        }
                    }
                });
                KWP_utils.displayTotalPhoto()
            })(a)
        }
        creation._kw166();
        uploader.should_save = true;
        controller.set_sizes();
        manager.clearWelcome();
        var b = KWP_utils.unusedPhotos();
        if (b > 0) {
            jQuery("#autofill_toggle").removeClass("disabled");
            jQuery(".delete-photos-btn").removeClass("disabled")
        }
        if (b > 5) {
            jQuery("#autofill_toggle").popover("show")
        }
    },
    registerPrints: function (b) {
        jQuery("#content .placeholder").hide();
        jQuery("#choose_image").show();
        for (var a in b) {
            (function (c) {
                var d = b[c];
                var f = jQuery.MD5(d.id);
                var e = false;
                for (var c in KWP.imagesLoaded) {
                    if (c === f) {
                        e = true;
                        break
                    }
                }
                if (!e) {
                    KWP.imagesLoaded[f] = {
                        config: {
                            quantity: 1,
                            effects: {
                                blackwhite: false,
                                autoenhance: false
                            },
                            borderidx: 0
                        },
                        upload: {
                            progress: false,
                            complete: false,
                            hash: false,
                            completion: 0,
                            can_retry: KWP_CONF.maxUploadRetries
                        },
                        file: {
                            name: d.source.substring(d.source.lastIndexOf("%2F") + 1).substring(d.source.lastIndexOf("/") + 1).split("%")[0]
                        },
                        thumbloaded: false,
                        online_url: d.source
                    }
                }
                jQuery("#upload_images").hide();
                if (jQuery("#load_progress")[0]) {
                    jQuery(".informations-wrapper").hide();
                    jQuery("#load_progress").empty().append("<div/>").show()
                }
                if (typeof printbuilder.options.photoLoadInit == "function") {
                    printbuilder.options.photoLoadInit()
                }
                printbuilder.build_thumbs(function () {
                    if (jQuery("#load_progress")[0]) {
                        jQuery(".informations-wrapper").show();
                        jQuery("#load_progress").fadeOut()
                    }
                    if (typeof printbuilder.options.photoLoadComplete == "function") {
                        printbuilder.options.photoLoadComplete()
                    }
                    jQuery("#choose_image").show();
                    jQuery("#upload_images").show();
                    jQuery(".price-zone").show();
                    jQuery("*[rel=tooltip]").tooltip({
                        delay: 500,
                        animation: false
                    });
                    if (!printbuilder.limit_photos || printbuilder.current_photo_count == printbuilder.limit_photos) {
                        jQuery("#upload_images").show()
                    }
                    printbuilder.total_price_update();
                    printbuilder.updatePhotoCount()
                })
            })(a)
        }
    },
    abortAllXHR: function () {
        jQuery.each(jQuery.xhrPool, function (a, c) {
            try {
                c.abort();
                jQuery.xhrPool.slice(a, 1)
            } catch (b) { }
        })
    },
    getProductFromId: function (a, b) {
        jQuery.getJSON(KWP_CONF.s3bucket + KWP_CONF.client + "/creations/" + a + ".json", function (d) {
            var e = d.product.type;
            var f = Creation._kw163(d);
            b(e, f)
        })
    },
    update_product: function (a) {
        creation.updateProduct(a, true);
        editor._kw201(creation._kw161());
        controller.set_sizes();
        if (jQuery("#preview_3D")[0] && KWP_utils.webgl_detect()) {
            creation.views[0].page.addUpdateListener(function () {
                jQuery("#preview_3D").html("<p class='kwp-icon p-icon'><span>" + KWC.translate("Preview") + "</span></p>");
                jQuery("#preview_3D p").prepend(creation._kw172(40))
            })
        }
    },
    updatePhotoPrice: function (a, b) {
        jQuery("#" + a).find(".price").html(b)
    },
    calcTieredPrice: function (e, a, f) {
        var d = 0;
        var b = 0;
        for (var c = 1; c <= f; c++) {
            if (b < a.length && c >= a[b].quantity) {
                e = a[b].price;
                b++
            }
            d += e
        }
        return d
    },
    calcSimpleTieredPrice: function (d, c, e) {
        for (var a in c) {
            var b = c[a];
            if (e >= b.quantity) {
                d = b.price
            }
        }
        return d * e
    },
    getPrintList: function () {
        var b = [];
        for (var a in KWP.imagesLoaded) {
            var c = KWP.imagesLoaded[a];
            c.photo_id = a;
            b.push(c)
        }
        return b
    },
    webgl_detect: function (d) {
        if (!!window.WebGLRenderingContext) {
            var a = document.createElement("canvas"),
                g = ["webgl", "experimental-webgl", "moz-webgl", "webkit-3d"],
                c = false;
            for (var b = 0; b < 4; b++) {
                try {
                    c = a.getContext(g[b]);
                    if (c && typeof c.getParameter == "function") {
                        if (d) {
                            return {
                                name: g[b],
                                gl: c
                            }
                        }
                        return true
                    }
                } catch (f) { }
            }
            return false
        }
        return false
    },
    getUsedFontList: function (a) {
        var d = [];
        var c = function (e) {
            return e.sort().filter(function (g, f, h) {
                return (f === 0) || (g !== h[f - 1])
            })
        };
        var b = a._kw107();
        jQuery.each(b, function (e, f) {
            if (f.type == "text" && f.font_name) {
                d.push(f.font_name)
            }
        });
        return c(d)
    },
    _kw1: function (b, c) {
        if (b.slice) {
            var a = b.slice(0, 16 * 1024)
        } else {
            if (b.mozSlice) {
                var a = b.mozSlice(0, 16 * 1024)
            } else {
                if (b.webkitSlice) {
                    var a = b.webkitSlice(0, 16 * 1024)
                }
            }
        }
        EXIF.getData(a, function () {
            var e = 1,
                f = null;
            e = EXIF.getTag(this, "Orientation");
            f = EXIF.getTag(this, "DateTimeOriginal");
            if (f) {
                var g = f.split(/[:\s]/).map(function (d) {
                    return parseInt(d)
                });
                f = new Date(g[0], g[1] - 1, g[2], g[3], g[4], g[5])
            }
            return c(e, f)
        })
    }
};
Number.prototype.moneyformat = function (b, d) {
    var e = (navigator.language || navigator.userLanguage || "en");
    if (navigator.languages && navigator.languages[0]) {
        e = navigator.languages[0]
    }
    if (typeof Number.toLocaleString == "function" && Number(0).toLocaleString("fr", {
        style: "currency",
        currency: "EUR"
    }) == "0,00 €") {
        return this.toLocaleString(e, {
            style: "currency",
            currency: b
        })
    }
    var d = d || 2;
    if (b == "ISK") {
        d = 0
    }
    var a = {
        EUR: "€",
        USD: "$",
        GBP: "£"
    };
    var f = a[b] || b;
    switch (e.substring(0, 2)) {
        case "fr":
            return this.toFixed(d).replace(".", ",") + " " + f;
        default:
            return f + " " + this.toFixed(d)
    }
};
jQuery.xhrPool = [];
jQuery.ajaxSetup({
    beforeSend: function (a) {
        jQuery.xhrPool.push(a)
    },
    timeout: KWP_CONF.uploadTimeout
});
var tooltip_tmp = jQuery.fn.tooltip.Constructor.prototype.show;
jQuery.fn.tooltip.Constructor.prototype.show = function () {
    tooltip_tmp.call(this);
    if (this.options.callback) {
        this.options.callback()
    }
};
var KWPController = {
    main: {
        init: function (a, b) {
            this.started;
            this.sharepoped = false;
            this.hide_interface = b;
            this.container = a || window;
            this.background_preloaded;
            this.initialize = function () {
                var i = function () {
                    var l = "";
                    for (var j = 1; j <= 10; j++) {
                        l += "<option " + (editor.grid.size == j ? "selected" : "") + " value='" + j + "'>" + j + "mm</option>"
                    }
                    var k = jQuery("#popvr_grid_tpl").html().replace("#options_sizes#", l).replace("#magnet_active#", editor.grid.active ? "checked" : "").replace("#display_active#", editor.grid.display ? "checked" : "");
                    return k
                };
                var d = function () {
                    var l = "";
                    for (var j = 0; j <= 10; j++) {
                        l += "<option " + (editor.grid.spacing == j ? "selected" : "") + " value='" + j + "'>" + j + "mm</option>"
                    }
                    var k = jQuery("#popvr_guides_tpl").html().replace("#options_sizes#", l).replace("#guides_active#", editor.grid.active ? "checked" : "").replace("#guides_displayed#", editor.grid.display ? "checked" : "");
                    return k
                };
                jQuery("#grid_toggle").popover({
                    html: true,
                    placement: "bottom",
                    title: KWC.translate("Grid options"),
                    content: i
                });
                jQuery("#guides_toggle").popover({
                    html: true,
                    placement: "bottom",
                    title: KWC.translate("Smart Guides options"),
                    content: d
                });
                jQuery("#autofill_toggle").popover({
                    html: true,
                    placement: "bottom",
                    trigger: "manual",
                    title: KWC.translate("Automatic fill"),
                    content: function () {
                        return jQuery("#popvr_autofill_tpl").html()
                    }
                });
                jQuery("#share_toggle").popover({
                    html: true,
                    placement: "bottom",
                    content: function () {
                        return jQuery("#popvr_share_tpl").html()
                    }
                });
                if (!!KWP_CONF.save_warning) {
                    jQuery("#save_project").parent().popover({
                        template: '<div class="popover savepop"><div class="arrow"></div><div class="popover-inner" style="width:200px;"><h3 class="popover-title"></h3><div class="popover-content"><p></p></div></div></div>',
                        placement: "right",
                        trigger: "manual",
                        content: KWC.translate("Remember to save your project!")
                    })
                }
                jQuery(".kwp-icon").on("click", function (j) {
                    if (jQuery(this).hasClass("disabled")) {
                        j.stopPropagation();
                        return
                    }
                });
                jQuery("#delete_placeholder").on("click", function () {
                    editor.keyPressedDelete()
                });
                jQuery("#placeholder_photo").on("click", function () {
                    jQuery("#photos_block").prev().click()
                });
                jQuery(document).on("click", function (j) {
                    editor.unselect(j);
                    jQuery(".popover-link").each(function () {
                        if (!jQuery(this).is(j.target) && jQuery(this).has(j.target).length === 0 && jQuery(".popover").has(j.target).length === 0) {
                            jQuery(this).popover("hide")
                        }
                    })
                });
                jQuery(document).on("focus", ".select2-input", keypress.stop_listening);
                jQuery(document).on("blur", ".select2-input", keypress.listen);
                document.addEventListener("fullscreeneventchange", function () {
                    if (document.fullScreen) {
                        jQuery("#rq_fullsrc").hide();
                        jQuery("#rq_windowed").show()
                    } else {
                        jQuery("#rq_windowed").hide();
                        jQuery("#rq_fullsrc").show()
                    }
                }, false);
                document.addEventListener("mozfullscreenchange", function () {
                    if (document.mozFullScreen) {
                        jQuery("#rq_fullsrc").hide();
                        jQuery("#rq_windowed").show()
                    } else {
                        jQuery("#rq_windowed").hide();
                        jQuery("#rq_fullsrc").show()
                    }
                }, false);
                document.addEventListener("webkitfullscreenchange", function () {
                    if (document.webkitIsFullScreen) {
                        jQuery("#rq_fullsrc").hide();
                        jQuery("#rq_windowed").show()
                    } else {
                        jQuery("#rq_windowed").hide();
                        jQuery("#rq_fullsrc").show()
                    }
                }, false);
                var e = function (j) {
                    j.stopPropagation();
                    j.preventDefault();
                    j.dataTransfer.dropEffect = "copy"
                };
                document.getElementById("main_application").addEventListener("dragover", e, false);
                var f = function (l) {
                    l.stopPropagation();
                    l.preventDefault();
                    var o = l.dataTransfer.files;
                    if (KWP_utils.imageStorage(o)) {
                        KWP_utils.thumbnailDisplay()
                    }
                    var m = 65;
                    var k = jQuery("#thumbnails_zone")[0].clientWidth;
                    var p = Math.floor(k / (m + 8));
                    var j = Math.floor((k - m * p) / (p * 2))
                };
                document.getElementById("main_application").addEventListener("drop", f, false);
                if (!c.hide_interface) {
                    var h = new Splitter("#splitter", 23, function (j) {
                        jQuery("#sidebar").css("width", j[0] + "%");
                        jQuery("#splitter").css("width", j[1] + "%");
                        jQuery("#main").css("width", j[2] + "%");
                        c.set_sizes()
                    });
                    jQuery("#splitter").on("click", function (j) {
                        j.stopPropagation()
                    });
                    h.callback(h.getValues())
                } else {
                    jQuery("#header").hide();
                    jQuery("#splitter").hide();
                    jQuery("#sidebar").hide();
                    jQuery("#main").css("width", "100%")
                }
                jQuery("#options_block").on("click", function (j) {
                    j.stopPropagation()
                });
                keypress.combo("meta x", function () {
                    jQuery("#cut_item").effect("highlight").click()
                });
                keypress.combo("meta z", function () {
                    jQuery("#undo").effect("highlight").click()
                });
                keypress.combo("meta y", function () {
                    jQuery("#redo").effect("highlight").click()
                });
                keypress.combo("meta c", function () {
                    jQuery("#copy_item").effect("highlight").click()
                });
                keypress.combo("meta v", function () {
                    jQuery("#paste_item").effect("highlight").click()
                });
                if (KWP_CONF.photozoom) {
                    var g = function (j) {
                        jQuery("#extrastyle").text(".koffeeware-creator #main_application #sidebar .menu-block #thumbnails_zone .menu-thumbnail { width:" + j + "px;height:" + j + "px; line-height:" + j + "px;}")
                    };
                    jQuery(".photo-zoom").show();
                    jQuery("html head").append("<style id='extrastyle' />");
                    jQuery(".plus-zoom").on("click", function (j) {
                        var k = Math.min(120, jQuery("#photosize_slider").slider("value") + 5);
                        g(k);
                        jQuery("#photosize_slider").slider("value", k);
                        j.stopPropagation()
                    });
                    jQuery(".minus-zoom").on("click", function (j) {
                        var k = Math.max(30, jQuery("#photosize_slider").slider("value") - 5);
                        g(k);
                        jQuery("#photosize_slider").slider("value", k);
                        j.stopPropagation()
                    });
                    jQuery("#photosize_slider").slider({
                        min: 30,
                        max: 120,
                        step: 5,
                        value: 75,
                        slide: function (j, k) {
                            g(k.value)
                        }
                    })
                }
                c.start();
                c.set_sizes()
            };
            this.show_menu = function () {
                if (!jQuery("#object_options .content").hasClass("active")) {
                    jQuery(".menu-block .content").removeClass("active");
                    jQuery(".menu-block .title img").attr("src", KWP_CONF.static_serv + "img/icons/menu_down.png");
                    jQuery("#object_options").show();
                    jQuery(".menu-block .content:visible").hide();
                    c.set_sizes();
                    jQuery("#object_options .title img").attr("src", KWP_CONF.static_serv + "img/icons/menu_up.png");
                    jQuery("#object_options .content").addClass("active");
                    jQuery("#object_options .content").slideDown("slow", KWP_utils._kw124)
                }
            };
            this.show_placeholder_options = function () {
                jQuery("#general_actions").hide();
                jQuery("#clipart_menu").hide();
                jQuery("#pattern_menu").hide();
                jQuery("#image_menu").hide();
                jQuery("#text_menu").hide();
                jQuery("#object_title").html("<span class='object-title'>" + KWC.translate("Placeholder options") + "</span>");
                jQuery("#placeholder_action").show();
                c.show_menu()
            };
            this.hide_placeholder_options = function () {
                jQuery("#general_actions").show();
                jQuery("#placeholder_action").hide()
            };
            this.show_photos_tab = function () {
                if (jQuery("#photos_block").hasClass("active")) {
                    return
                }
                KWP_utils._kw120("fast", function () {
                    controller.set_sizes();
                    KWP.selectedMenu = "photos_block";
                    jQuery(".content").removeClass("active");
                    jQuery("#photos_block.title img").attr("src", KWP_CONF.static_serv + "img/icons/menu_up.png");
                    jQuery("#photos_block.content").addClass("active");
                    jQuery("#photos_block.content").slideDown("slow", KWP_utils._kw124)
                })
            };
            this.hide_menu = function () {
                jQuery("#object_options .content").removeClass("active");
                jQuery("#object_options").hide();
                jQuery("#" + KWP.selectedMenu).addClass("active");
                jQuery("#" + KWP.selectedMenu).show();
                c.set_sizes()
            };
            this.start = function () {
                this.started = true;
                jQuery(window).resize(function () {
                    c.set_sizes();
                    if (jQuery("#backgrounds_zone").is(":visible")) {
                        backgrounds.set_thumbpage()
                    }
                    if (jQuery("#cliparts_zone").is(":visible")) {
                        cliparts.set_thumbpage()
                    }
                    if (jQuery("#patterns_zone").is(":visible")) {
                        patterns.set_thumbpage()
                    }
                    if (jQuery("#foregrounds_zone").is(":visible")) {
                        foregrounds.set_thumbpage()
                    }
                });
                jQuery("#main").disableSelection();
                jQuery("#cliparts_zone .menu-thumbnail").draggable({
                    disabled: false
                });
                jQuery("#patterns_zone .menu-thumbnail").draggable({
                    disabled: false
                });
                jQuery("#foregrounds_zone .menu-thumbnail").draggable({
                    disabled: false
                });
                jQuery("#thumbnails_zone .menu-thumbnail").draggable({
                    disabled: false
                });
                jQuery("#autofill_toggle").on("click", function () {
                    if (jQuery(this).hasClass("disabled")) {
                        return
                    }
                    jQuery(this).popover("toggle")
                });
                jQuery("#header").on("click", ".popautofill li", function () {
                    if (jQuery(this).hasClass("selected")) {
                        return
                    }
                    jQuery("#header").find(".popautofill li").removeClass("selected");
                    jQuery(this).addClass("selected");
                    jQuery.each(KWP_utils.getSortedPhotoList(jQuery(this).attr("data-sort")), function (d, e) {
                        jQuery("#thumbnails_zone div[id=" + e.id + "]").appendTo(jQuery("#thumbnails_zone"))
                    })
                });
                jQuery("#header").on("click", "#autofill_apply", function () {
                    var d = jQuery("#header").find(".popautofill li[class=selected]").attr("data-sort");
                    creation.fill(KWP_utils.getSortedPhotoList(d));
                    jQuery("#autofill_toggle").popover("hide")
                });
                jQuery("#header").on("click", ".sharelink", function () {
                    jQuery("#link_sharing").val(jQuery(this).attr("data-url"));
                    jQuery("#linkshare_modal").modal()
                });
                jQuery("#link_sharing").on("click", function () {
                    this.focus();
                    this.selectionStart = 0;
                    this.selectionEnd = 9999
                });
                jQuery("#header").on("change", "#grid_magnet", function () {
                    if (jQuery("#grid_magnet").is(":checked")) {
                        editor.grid.active = true
                    } else {
                        editor.grid.active = false
                    }
                });
                jQuery("#header").on("change", "#grid_display", function () {
                    if (jQuery("#grid_display").is(":checked")) {
                        editor.grid.display = true
                    } else {
                        editor.grid.display = false
                    }
                    editor.update()
                });
                jQuery("#header").on("change", "#grid_size", function () {
                    editor.grid.size = jQuery(this).val() | 0;
                    editor.update()
                });
                jQuery("#header").on("click", "#grid_apply", function () {
                    editor.grid.apply(creation._kw161().page);
                    editor.update();
                    jQuery("#grid_toggle").popover("hide")
                });
                jQuery("#header").on("change", "#guides_active", function () {
                    if (jQuery("#guides_active").is(":checked")) {
                        editor.grid.active = true
                    } else {
                        editor.grid.active = false
                    }
                });
                jQuery("#header").on("change", "#guides_display", function () {
                    if (jQuery("#guides_display").is(":checked")) {
                        editor.grid.display = true
                    } else {
                        editor.grid.display = false
                    }
                    editor.update()
                });
                jQuery("#header").on("change", "#guides_size", function () {
                    editor.grid.spacing = jQuery(this).val() | 0;
                    editor.update()
                });
                jQuery("#clear_creation").on("click", function () {
                    if (confirm(KWC.translate("Are you sure you want to clear your creation ?"))) {
                        uploader.creation_id = KWP_utils.randomString(16);
                        creation.clear();
                        editor.update()
                    }
                });
                jQuery("#preview_btn").on("click", function () {
                    jQuery("#preview_modal").find(".modal-body").empty();
                    jQuery("#preview_modal").find(".modal-body").html(creation._kw172(395));
                    jQuery("#preview_modal").css({
                        height: 480,
                        width: 500,
                        marginLeft: -240,
                        top: (jQuery(window).height() - 480) / 2,
                        textAlign: "center"
                    });
                    jQuery("#preview_modal").modal()
                });
                jQuery(".creatorpage").on("click", function () {
                    var d = jQuery(".page.active").index();
                    var e = (jQuery(this).hasClass("right") ? d + 1 : d - 1);
                    if (jQuery(".page[data-index=" + e + "]")[0]) {
                        jQuery(".page[data-index=" + e + "]").click()
                    } else {
                        jQuery(this).hasClass("right") ? jQuery(".page:first").click() : jQuery(".page:last").click()
                    }
                });
                jQuery("#pages").on("click", ".page", function () {
                    var e = jQuery(this);
                    if (jQuery(this).hasClass("active")) {
                        return
                    }
                    var d = jQuery(".page.active").index();
                    var f = jQuery(this).attr("data-index") | 0;
                    var h = function () {
                        var k = 0;
                        for (var i = 0; i <= f; i++) {
                            k += jQuery(".page[data-index=" + i + "]").outerWidth(true)
                        }
                        var j = k / f / 3;
                        jQuery("#pages").stop().animate({
                            scrollLeft: k - jQuery("#pages").innerWidth() / 2 - j
                        }, 1000, "easeInOutCubic")
                    };
                    var g = function () {
                        creation._kw162(f);
                        editor._kw201(creation._kw161());
                        h();
                        c.set_sizes();
                        jQuery("#layout_zone .layout").hide();
                        if (!creation._kw161().properties.is_cover) {
                            jQuery("#layout_zone .layout").not(".cover").show()
                        } else {
                            jQuery("#layout_zone .layout.cover").show()
                        }
                    };
                    jQuery(".page.active").removeClass("active");
                    jQuery(this).addClass("active");
                    if (typeof flipper != "undefined") {
                        jQuery("#creator").hide();
                        flipper.turn(d, f, function () {
                            setTimeout(function () {
                                jQuery("#creator").show();
                                g()
                            }, 1)
                        })
                    } else {
                        g()
                    }
                });
                jQuery("#order_btn").on("click", function () {
                    var d = function () {
                        if (typeof window.cart_posting == "function") {
                            if (typeof window.customOrderInit == "function") {
                                window.customOrderInit()
                            } else {
                                if (jQuery("body > #order_zone").length == 0) {
                                    jQuery("body").prepend(jQuery("#order_layout_tpl").html())
                                }
                                jQuery("#order_zone").show();
                                uploader.draw_progress(0)
                            }
                            jQuery("#save_project").attr("src", KWP_CONF.static_serv + "img/preloader.gif");
                            uploader.autosaving = false;
                            uploader.save_once_triggered = true;
                            uploader.order_triggered = true;
                            uploader.save_callback = null;
                            uploader.done_callback = window.cart_posting;
                            uploader.uploadList()
                        }
                    };
                    if (typeof window.onOrder == "function") {
                        onOrder(function () {
                            d()
                        })
                    } else {
                        d()
                    }
                });
                jQuery(document).on("click", ".cancel-order", function () {
                    uploader.abort();
                    jQuery("#order_zone").fadeOut()
                });
                jQuery("#undo").on("click", function () {
                    if (jQuery(this).hasClass("disabled")) {
                        return
                    }
                    editor.undo();
                    manager._kw46()
                });
                jQuery("#redo").on("click", function () {
                    if (jQuery(this).hasClass("disabled")) {
                        return
                    }
                    editor.redo();
                    manager._kw46()
                });
                jQuery("#rq_fullsrc").on("click", function () {
                    KWP_utils.launchFullScreen(document.documentElement);
                    jQuery(this).hide();
                    jQuery("#rq_windowed").show()
                });
                jQuery("#rq_windowed").on("click", function () {
                    KWP_utils._kw118();
                    jQuery(this).hide();
                    jQuery("#rq_fullsrc").show()
                });
                jQuery(".menu-block .title").on("click", function (d) {
                    var e = jQuery(d.currentTarget).next().attr("id");
                    if (jQuery(".menu-block .content:visible")[0]) {
                        KWP_utils._kw120("slow");
                        jQuery(d.currentTarget).next().slideDown("slow", KWP_utils._kw124)
                    } else {
                        jQuery(".menu-block .content").removeClass("active");
                        jQuery(".menu-block .title img").attr("src", KWP_CONF.static_serv + "img/icons/menu_down.png");
                        jQuery(d.currentTarget).next().show();
                        KWP_utils._kw124()
                    } if (e != "options_block") {
                        KWP.selectedMenu = e
                    }
                    jQuery(d.currentTarget).next().addClass("active");
                    jQuery(d.currentTarget).find("img").attr("src", KWP_CONF.static_serv + "img/icons/menu_up.png");
                    if (e == "cliparts_block") {
                        cliparts.set_thumbpage("cliparts_zone")
                    }
                    if (e == "patterns_block") {
                        patterns.set_thumbpage("patterns_zone")
                    }
                    if (e == "backgrounds_block") {
                        backgrounds.set_thumbpage()
                    }
                    if (e == "foregrounds_block") {
                        foregrounds.set_thumbpage()
                    }
                    if (e == "themes_block") {
                        kwtemplates.display_templates()
                    }
                    d.stopPropagation()
                });
                jQuery("#add_text_block").on("click", function (d) {
                    manager.clearWelcome();
                    editor._kw58();
                    d.stopPropagation()
                });
                jQuery("#theme_zone, #welcome_modal").on("click", ".theme", function (d) {
                    manager.clearWelcome();
                    var f = jQuery(this).attr("data-descriptor");
                    var e = jQuery(this).attr("data-hash");
                    jQuery.getJSON(f, function (h) {
                        creation._kw109(h, manager, e);
                        if (KWP_utils.unusedPhotos() > 0) {
                            jQuery("#autofill_toggle").removeClass("disabled").popover("show")
                        }
                        if (typeof flipper == "object") {
                            flipper.refresh(true)
                        }
                        var g = KWP_utils.getUsedFontList(creation);
                        jQuery.each(g, function (i, j) {
                            KWP_utils.addFontToList(j)
                        });
                        KWP_utils.buildFontList()
                    });
                    d.stopPropagation()
                });
                jQuery("#theme_zone, #welcome_modal").on("click", ".kwtheme", function (d) {
                    manager.clearWelcome();
                    jQuery.get(kwtemplates.tplist[jQuery(this).attr("data-hash")].url, function (f) {
                        var e = jQuery.parseXML(f);
                        creation._kw164(e ? e : f);
                        if (KWP_utils.unusedPhotos() > 0) {
                            jQuery("#autofill_toggle").removeClass("disabled").popover("show")
                        }
                        if (typeof flipper == "object") {
                            flipper.refresh(true)
                        }
                    });
                    d.stopPropagation()
                });


                jQuery("#file-manager").on("click", function (d) {
                    d.preventDefault();
                    jQuery('#modal-image').remove();
                    jQuery.ajax({
                        url: 'index.php?route=common/k_filemanager',
                        dataType: 'html',
                        beforeSend: function () {
                            jQuery('#button-image i').replaceWith('<i class="fa fa-circle-o-notch fa-spin"></i>');
                            jQuery('#button-image').prop('disabled', true);
                        },
                        complete: function () {
                            jQuery('#button-image i').replaceWith('<i class="fa fa-pencil"></i>');
                            jQuery('#button-image').prop('disabled', false);
                        },
                        success: function (html) {
                            jQuery('body').append('<div id="modal-image" class="modal">' + html + '</div>');

                            jQuery('#modal-image').modal({ backdrop: 'static', keyboard: false });
                        }
                    });


                    // jQuery("#add_photos_input").click();
                    // d.stopPropagation()
                });
                jQuery("#add_photos_button").on("click", function (d) {
                    d.preventDefault();
                    jQuery("#add_photos_input").click();
                    d.stopPropagation()
                });
                jQuery("#edit_photo").on("click", function (d) {
                    d.preventDefault();
                    var f = editor.editPhoto();
                    if (!f) {
                        jQuery("#edit_photo_failed").modal()
                    } else {
                        jQuery("#object_options").stop(true, true).effect("highlight", {
                            duration: 1000,
                            color: "#ff5"
                        })
                    }
                    d.stopPropagation()
                });
                jQuery(".delete-photos-btn").on("click", function (d) {
                    d.preventDefault();
                    if (jQuery(this).hasClass("disabled")) {
                        return
                    }
                    if (jQuery(this).hasClass("active")) {
                        jQuery("#thumbnails_zone").find(".menu-thumbnail").removeClass("removing").draggable({
                            disabled: false
                        });
                        jQuery(this).removeClass("active")
                    } else {
                        jQuery("#thumbnails_zone").find(".menu-thumbnail").addClass("removing").draggable({
                            disabled: true
                        });
                        jQuery(this).addClass("active")
                    }
                    d.stopPropagation()
                });
                jQuery("#add_photos_input").on("change", function (d) {
                    jQuery("#upload-ways").hide();
                    var e = d.target.files;
                    d.preventDefault();
                    if (KWP_utils.imageStorage(e)) {
                        jQuery("#thumbnails_zone .ui-effects-wrapper").remove();
                        KWP_utils.thumbnailDisplay()
                    }
                    KWP_utils.reset_form_element(jQuery("#add_photos_input"))
                });
                jQuery("#creator").droppable({
                    over: function (d, e) {
                        if (KWP.imagesLoaded[e.draggable[0].id].to_canvas.type == "photo") {
                            jQuery(".ui-draggable-dragging").hide()
                        }
                    },
                    drop: function (d, e) {
                        manager.clearWelcome();
                        editor.drop(KWP.imagesLoaded[e.draggable[0].id].to_canvas, d);
                        manager._kw46();
                        uploader.preparePhotoList();
                        switch (KWP.imagesLoaded[e.draggable[0].id].to_canvas.type) {
                            default: break
                        }
                    },
                    out: function (d, e) {
                        jQuery(".ui-draggable-dragging").show();
                        editor.dragCancelled(KWP.imagesLoaded[e.draggable[0].id].to_canvas, d)
                    }
                });
                jQuery("#font_chooser").on("click", function (d) {
                    d.preventDefault();
                    this.blur();
                    jQuery("#size_selector").hide();
                    jQuery("#color_selector").hide();
                    if (jQuery("#font_selector").is(":hidden")) {
                        jQuery(".object-menu").stop().animate({
                            scrollTop: jQuery("#font_chooser").position().top
                        }, "fast")
                    }
                    jQuery("#font_selector").slideToggle();
                    d.stopPropagation()
                });
                jQuery("#size_chooser").on("click", function (d) {
                    d.preventDefault();
                    this.blur();
                    jQuery("#font_selector").hide();
                    jQuery("#color_selector").hide();
                    jQuery("#size_selector").slideToggle("normal", function () {
                        jQuery(".object-menu").stop().animate({
                            scrollTop: jQuery("#size_chooser").position().top
                        }, "fast")
                    });
                    d.stopPropagation()
                });
                jQuery("#layout_zone").on("click", ".layout", function (j) {
                    var g = jQuery(this).attr("data-lytid");
                    var m, o;
                    var h = Object.keys(kwtemplates.lylist).length > 0 ? kwtemplates.lylist : kwtemplates.tplist;
                    jQuery.each(h, function (p, q) {
                        o = false;
                        jQuery.each(q.layouts, function (s, r) {
                            if (r.id == g) {
                                m = r;
                                o = true;
                                return false
                            }
                        });
                        if (o) {
                            return false
                        }
                    });
                    if (!creation._kw161().properties.double_background) {
                        manager.clearWelcome();
                        creation._kw161().page.action({
                            action: "apply_layout",
                            value: m
                        });
                        manager._kw46();
                        return
                    }
                    jQuery("#applyto_modal .image-zone").html("<img src='" + jQuery(this).find("canvas").get()[0].toDataURL() + "' />");
                    jQuery("#applyto_modal .object-location").attr("data-id", g);
                    jQuery("#applyto_modal .object-location").attr("data-type", "layout");
                    var l = creation._kw161().page.clone();
                    var f = creation._kw161().page.clone();
                    var k = creation._kw161().page.clone();
                    l.action({
                        action: "apply_layout_left",
                        value: m
                    });
                    f.action({
                        action: "apply_layout",
                        value: m
                    });
                    k.action({
                        action: "apply_layout_right",
                        value: m
                    });
                    l.addUpdateListener(function () {
                        var p = creation._kw161()._kw172(220, l);
                        jQuery(".object-location").find(".left-page").html(p)
                    });
                    f.addUpdateListener(function () {
                        var p = creation._kw161()._kw172(220, f);
                        jQuery(".object-location").find(".both-pages").html(p)
                    });
                    k.addUpdateListener(function () {
                        var p = creation._kw161()._kw172(220, k);
                        jQuery(".object-location").find(".right-page").html(p)
                    });
                    var e = creation._kw161()._kw172(220, l);
                    var i = creation._kw161()._kw172(220, f);
                    var d = creation._kw161()._kw172(220, k);
                    jQuery(".object-location").find(".left-page").html(e);
                    jQuery(".object-location").find(".both-pages").html(i);
                    jQuery(".object-location").find(".right-page").html(d);
                    if (creation._kw161().properties.apply_to_all) {
                        jQuery(".apply-to-all").show()
                    } else {
                        jQuery(".apply-to-all").hide()
                    }
                    jQuery("#applyto_modal").css({
                        height: 600,
                        width: 900,
                        marginLeft: -450,
                        top: (jQuery(window).height() - 600) / 2,
                        textAlign: "center"
                    });
                    jQuery("#applyto_modal .modal-body").css("max-height", 600);
                    jQuery("#applyto_modal").modal()
                });
                jQuery("#backgrounds_zone").on("click", ".background-image", function (j) {
                    var m = j.currentTarget.id;
                    var i = KWP.imagesLoaded[m].to_canvas;
                    if (creation._kw161().properties.double_background) {
                        var g = new Image();
                        g.src = i.thumblist.list[0].url;
                        jQuery("#applyto_modal .image-zone").html(g);
                        jQuery("#applyto_modal .object-location").attr("data-id", m);
                        jQuery("#applyto_modal .object-location").attr("data-type", "background");
                        var l = creation._kw161().page.clone();
                        var f = creation._kw161().page.clone();
                        var k = creation._kw161().page.clone();
                        l.action({
                            action: "set_left_background",
                            value: i
                        });
                        f.action({
                            action: "set_background",
                            value: i
                        });
                        k.action({
                            action: "set_right_background",
                            value: i
                        });
                        l.addUpdateListener(function () {
                            var o = creation._kw161()._kw172(220, l);
                            jQuery(".object-location").find(".left-page").html(o)
                        });
                        f.addUpdateListener(function () {
                            var o = creation._kw161()._kw172(220, f);
                            jQuery(".object-location").find(".both-pages").html(o)
                        });
                        k.addUpdateListener(function () {
                            var o = creation._kw161()._kw172(220, k);
                            jQuery(".object-location").find(".right-page").html(o)
                        });
                        var e = creation._kw161()._kw172(220, l);
                        var h = creation._kw161()._kw172(220, f);
                        var d = creation._kw161()._kw172(220, k);
                        jQuery(".object-location").find(".left-page").html(e);
                        jQuery(".object-location").find(".both-pages").html(h);
                        jQuery(".object-location").find(".right-page").html(d);
                        if (creation._kw161().properties.apply_to_all) {
                            jQuery(".apply-to-all").show()
                        } else {
                            jQuery(".apply-to-all").hide()
                        }
                        jQuery("#applyto_modal").css({
                            height: 600,
                            width: 900,
                            marginLeft: -480,
                            top: (jQuery(window).height() - 600) / 2,
                            textAlign: "center"
                        });
                        jQuery("#applyto_modal .modal-body").css("max-height", 600);
                        jQuery("#applyto_modal").modal()
                    } else {
                        manager.clearWelcome();
                        creation._kw161().page.action({
                            action: "set_background",
                            value: i
                        });
                        manager._kw46()
                    }
                });
                jQuery("#applyto_modal .location-box").on("click", function (e) {
                    var d = jQuery("#applyto_modal .object-location").attr("data-id");
                    var i = jQuery("#applyto_modal .object-location").attr("data-type");
                    var h = jQuery("#applytoall_checked").is(":checked");
                    manager.clearWelcome();
                    switch (i) {
                        case "background":
                            var g = KWP.imagesLoaded[d].to_canvas;
                            if (jQuery(this).attr("data-position") == "left") {
                                if (h) {
                                    creation._kw168(g)
                                } else {
                                    creation._kw161().page.action({
                                        action: "set_left_background",
                                        value: g
                                    })
                                }
                            } else {
                                if (jQuery(this).attr("data-position") == "right") {
                                    if (h) {
                                        creation._kw170(g)
                                    } else {
                                        creation._kw161().page.action({
                                            action: "set_right_background",
                                            value: g
                                        })
                                    }
                                } else {
                                    if (h) {
                                        creation._kw167(g)
                                    } else {
                                        creation._kw161().page.action({
                                            action: "set_background",
                                            value: g
                                        })
                                    }
                                }
                            }
                            break;
                        case "layout":
                            var k, j;
                            var f = Object.keys(kwtemplates.lylist).length > 0 ? kwtemplates.lylist : kwtemplates.tplist;
                            jQuery.each(f, function (l, m) {
                                j = false;
                                jQuery.each(m.layouts, function (p, o) {
                                    if (o.id == d) {
                                        k = o;
                                        j = true;
                                        return false
                                    }
                                });
                                if (j) {
                                    return false
                                }
                            });
                            if (jQuery(this).attr("data-position") == "left") {
                                if (h) {
                                    creation.applyLeftLayoutToAll(k)
                                } else {
                                    creation._kw161().page.action({
                                        action: "apply_layout_left",
                                        value: k
                                    })
                                }
                            } else {
                                if (jQuery(this).attr("data-position") == "right") {
                                    if (h) {
                                        creation.applyRightLayoutToAll(k)
                                    } else {
                                        creation._kw161().page.action({
                                            action: "apply_layout_right",
                                            value: k
                                        })
                                    }
                                } else {
                                    if (h) {
                                        creation.applyLayoutToAll(k)
                                    } else {
                                        creation._kw161().page.action({
                                            action: "apply_layout",
                                            value: k
                                        })
                                    }
                                }
                            }
                            break;
                        default:
                            break
                    }
                    manager._kw46();
                    jQuery("#applyto_modal").modal("hide")
                });
                jQuery("#foregrounds_zone").on("click", ".foreground-image", function (d) {
                    manager.clearWelcome();
                    creation._kw161().page.action({
                        action: "set_foreground",
                        value: KWP.imagesLoaded[d.currentTarget.id].to_canvas
                    });
                    manager._kw46()
                });
                jQuery("#thumbnails_zone, #cliparts_zone, #patterns_zone").on("click", ".menu-thumbnail", function (d) {
                    if (jQuery(this).hasClass("removing")) {
                        uploader.abort();
                        jQuery(this).tooltip("disable");
                        jQuery(this).tooltip("hide");
                        jQuery(this).remove();
                        creation.deletePhotoSource(KWP.imagesLoaded[d.currentTarget.id].to_canvas);
                        delete KWP.imagesLoaded[d.currentTarget.id];
                        if (jQuery("#thumbnails_zone .menu-thumbnail").length == 0) {
                            jQuery(".delete-photos-btn").removeClass("active");
                            jQuery(".delete-photos-btn").addClass("disabled")
                        }
                        KWP_utils.displayTotalPhoto();
                        return
                    }
                    manager.clearWelcome();
                    editor.drop(KWP.imagesLoaded[d.currentTarget.id].to_canvas);
                    uploader.preparePhotoList();
                    manager._kw46()
                });
                jQuery("#background_color").on("click", function (d) {
                    jQuery(".text-color").hide();
                    if (creation._kw161().properties.double_background) {
                        jQuery(".single-page").hide();
                        jQuery(".multi-pages").show()
                    } else {
                        jQuery(".single-page").show();
                        jQuery(".multi-pages").hide()
                    }
                    var e = creation._kw161().page;
                    if (typeof (e.background) == "string") {
                        KWP_utils.colorPicker._kw3(e.background)
                    }
                    KWP_utils.colorPicker.callback = function (f) {
                        jQuery(".color-picker").attr("data-color", f);
                        rgb = f.match(/^rgb\((\d+),\s*(\d+),\s*(\d+)\)$/);
                        rgbv = "#" + ("0" + parseInt(rgb[1]).toString(16)).slice(-2) + ("0" + parseInt(rgb[2]).toString(16)).slice(-2) + ("0" + parseInt(rgb[3]).toString(16)).slice(-2);
                        jQuery("#color-rgb-input").val(rgbv);
                    };
                    KWP_utils.colorPicker.update();
                    jQuery("#colorpicker_modal").css({
                        height: 580,
                        width: 900,
                        marginLeft: -450,
                        top: (jQuery(window).height() - 580) / 2,
                        textAlign: "center"
                    });
                    jQuery("#colorpicker_modal .modal-body").css({
                        "max-height": 580,
                        padding: "0 15px"
                    });
                    jQuery("#colorpicker_modal").modal()
                });
                jQuery(".color-apply-btn").on("click", function () {
                    var reg = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/;
                    String.prototype.colorRgb = function () {
                        var sColor = this.toLowerCase();
                        if (sColor && reg.test(sColor)) {
                            if (sColor.length === 4) {
                                var sColorNew = "#";
                                for (var i = 1; i < 4; i += 1) {
                                    sColorNew += sColor.slice(i, i + 1).concat(sColor.slice(i, i + 1));
                                }
                                sColor = sColorNew;
                            }
                            //处理六位的颜色值
                            var sColorChange = [];
                            for (var i = 1; i < 7; i += 2) {
                                sColorChange.push(parseInt("0x" + sColor.slice(i, i + 2)));
                            }
                            return "rgb(" + sColorChange.join(",") + ")";
                        } else {
                            return sColor;
                        }
                    };
                    var d = jQuery("#color-rgb-input").val();
                    d = d.colorRgb(d);
                    var e = jQuery("#applytoall_color_checked").is(":checked");
                    if (creation._kw161().properties.is_cover) {
                        e = false
                    }
                    manager.clearWelcome();
                    if (jQuery(this).attr("data-position") == "left") {
                        if (e) {
                            creation._kw168(d)
                        } else {
                            creation._kw161().page.action({
                                action: "set_left_background",
                                value: d
                            })
                        }
                    } else {
                        if (jQuery(this).attr("data-position") == "right") {
                            if (e) {
                                creation._kw170(d)
                            } else {
                                creation._kw161().page.action({
                                    action: "set_right_background",
                                    value: d
                                })
                            }
                        } else {
                            if (e) {
                                creation._kw167(d)
                            } else {
                                creation._kw161().page.action({
                                    action: "set_background",
                                    value: d
                                })
                            }
                        }
                    }
                    manager._kw46();
                    jQuery("#colorpicker_modal").modal("hide")
                });
                jQuery("#backgrounds_block").on("click", ".next", function (d) {
                    backgrounds.page++;
                    backgrounds.set_thumbpage()
                });
                jQuery("#backgrounds_block").on("click", ".prev", function (d) {
                    backgrounds.page--;
                    backgrounds.set_thumbpage()
                });
                jQuery("#cliparts_block").on("click", ".next", function (d) {
                    cliparts.page++;
                    cliparts.set_thumbpage()
                });
                jQuery("#cliparts_block").on("click", ".prev", function (d) {
                    cliparts.page--;
                    cliparts.set_thumbpage()
                });
                jQuery("#patterns_block").on("click", ".next", function (d) {
                    patterns.page++;
                    patterns.set_thumbpage()
                });
                jQuery("#patterns_block").on("click", ".prev", function (d) {
                    patterns.page--;
                    patterns.set_thumbpage()
                });
                jQuery("#foregrounds_block").on("click", ".next", function (d) {
                    foregrounds.page++;
                    foregrounds.set_thumbpage()
                });
                jQuery("#foregrounds_block").on("click", ".prev", function (d) {
                    foregrounds.page--;
                    foregrounds.set_thumbpage()
                });
                jQuery("#edit_creation").on("click", function (d) {
                    c.set_view_mode(false)
                });
                jQuery("#save_jpg").on("click", function () {
                    KWP_utils.saveJPG()
                });
                jQuery("#show_themes").on("click", function () {
                    jQuery("#themes_choices .btn").removeClass("active");
                    jQuery(this).addClass("active");
                    jQuery("#layout_zone").hide();
                    jQuery("#theme_zone").show()
                });
                jQuery("#show_layouts").on("click", function () {
                    if (jQuery("#layout_zone").is(":empty")) {
                        kwtemplates.page = 1;
                        kwtemplates.display_layouts()
                    }
                    jQuery("#themes_choices .btn").removeClass("active");
                    jQuery(this).addClass("active");
                    jQuery("#theme_zone").hide();
                    jQuery("#layout_zone").show()
                });
                jQuery("#cut_item").on("click", function () {
                    editor.cut();
                    jQuery("#paste_item").removeClass("disabled")
                });
                jQuery("#copy_item").on("click", function () {
                    editor.copy();
                    jQuery("#paste_item").removeClass("disabled")
                });
                jQuery("#paste_item").on("click", function () {
                    editor.paste()
                })
            };
            this.destroy = function () {
                this.started = false;
                jQuery(".delete-photos-btn").unbind();
                jQuery("#header").unbind();
                jQuery("#autofill_toggle").unbind("click");
                jQuery("#show_themes").unbind();
                jQuery("#show_layouts").unbind();
                jQuery("#layout_zone").unbind();
                jQuery("#main_application").unbind();
                jQuery("#order_btn").unbind();
                jQuery("#cut_item").unbind("click");
                jQuery("#copy_item").unbind("click");
                jQuery("#paste_item").unbind("click");
                jQuery("#undo").unbind("click");
                jQuery("#redo").unbind("click");
                jQuery("#clear_creation").unbind("click");
                jQuery("#edit_photo").unbind("click");
                jQuery("#creator").droppable("destroy");
                jQuery("#add_photos_button").unbind();
                jQuery("#add_photos_input").unbind();
                jQuery("#backgrounds_zone").unbind();
                jQuery("#thumbnails_zone").unbind();
                jQuery("#cliparts_zone").unbind();
                jQuery("#patterns_zone").unbind();
                jQuery("#save_jpg").unbind();
                jQuery("#theme_zone").unbind();
                jQuery(".creatorpage").unbind();
                jQuery(".location-box").unbind();
                jQuery(".color-apply-btn").unbind();
                jQuery("#pages").unbind("click");
                jQuery("#font_chooser").unbind();
                jQuery("#size_chooser").unbind();
                jQuery(".menu-block .title").unbind();
                jQuery(".menu-block .titletext").unbind();
                jQuery("#cliparts_zone .menu-thumbnail").draggable({
                    disabled: true
                });
                jQuery("#patterns_zone .menu-thumbnail").draggable({
                    disabled: true
                });
                jQuery("#foregrounds_zone .menu-thumbnail").draggable({
                    disabled: true
                });
                jQuery("#thumbnails_zone .menu-thumbnail").draggable({
                    disabled: true
                });
                jQuery("#backgrounds_block").unbind();
                jQuery("#cliparts_block").unbind();
                jQuery("#patterns_block").unbind();
                jQuery("#foregrounds_block").unbind()
            };
            this.set_sizes = function () {
                var r = 110;
                var v = creation._kw161();
                jQuery(".menu-block .content").hide();
                jQuery("#order_zone, #photos_loading").css("padding-top", jQuery(window).height() / 2 - 50);
                var d = Math.floor(jQuery("#main").width() / 2) * 2;
                var h = d - r;
                var g = jQuery(c.container).height() - jQuery("#header").outerHeight(true);
                var A = Math.floor((g - jQuery(".pages-wrapper:visible").height()) / 2) * 2;
                var u = g - (jQuery(".menu-block:visible").outerHeight(true) * jQuery(".menu-block:visible").length);
                jQuery(".menu-block .content").css("height", u);
                jQuery(".object-menu").css({
                    "min-height": 100,
                    "max-height": u
                });
                jQuery("#sidebar, #main, #splitter").css("height", g + "px");
                var f = KWP_CONF.searchEnabled ? 23 : 0;
                if (typeof kwtemplates != "undefined") {
                    f = kwtemplates.layouts_enabled ? f + 35 : f
                }
                jQuery("#theme_zone, #layout_zone").css("height", u - f - 5);
                var f = KWP_CONF.searchEnabled ? 70 : 35;
                jQuery("#cliparts_zone").css("height", u - f);
                jQuery("#patterns_zone").css("height", u - f);
                jQuery("#backgrounds_zone").css("height", u - f);
                jQuery("#foregrounds_zone").css("height", u - f);
                jQuery("#thumbnails_zone").css({
                    height: KWP_CONF.photozoom ? u - 75 : u - 50,
                    margin: "0 -5px"
                });
                jQuery("#options_block").css({
                    height: "auto",
                    "max-height": u
                });
                jQuery(".menu-block .content.active").show();
                if (typeof v.crop != "undefined") {
                    var e = v.crop.width;
                    var k = v.crop.height
                } else {
                    var e = 1;
                    var k = 1
                }
                var i = Math.min(h / v.page.width, A / v.page.height);
                var z = Math.floor(i * v.page.width * e / 2) * 2;
                var y = Math.floor(i * v.page.height * k / 2) * 2;
                if (typeof flipper == "object") {
                    var s = flipper.getViewSize(v, h, A);
                    z = s.width;
                    y = s.height
                }
                jQuery(".canvas-wrapper").css({
                    width: z,
                    height: y,
                    marginLeft: (d - z) / 2,
                    marginTop: (A - y) / 2
                });
                jQuery("#creator").attr("width", z).attr("height", y);
                jQuery("#pageflipper").attr({
                    width: d,
                    height: A + 20
                });
                jQuery("#pageflipper").css({
                    top: -(A - y + 20) / 2,
                    left: -(d - z) / 2
                });
                jQuery(".creatorpage").css({
                    height: y
                });
                jQuery(".creatorpage.left").css({
                    left: -10 - (d - z) / 2
                });
                jQuery(".creatorpage.right").css({
                    right: -10 - (d - z) / 2
                });
                if (jQuery(".canvas-wrapper").height() + jQuery(".pages-wrapper").height() < jQuery("#main").height()) {
                    jQuery(".pages-wrapper").css({
                        marginTop: (A - y) / 2
                    })
                }
                if (typeof flipper == "object") {
                    flipper.refresh()
                }
                var o = 65;
                var m = jQuery("#thumbnails_zone")[0].clientWidth;
                var x = Math.floor(m / (o + 8));
                var j = Math.floor((m - o * x) / (x * 2)) - 0.5;
                var q = 0;
                jQuery(".page").each(function () {
                    q += jQuery(this).outerWidth()
                });
                if (q < jQuery("#pages").innerWidth()) {
                    var l = jQuery("#pages").innerWidth() - q;
                    var p = Math.floor(l / creation.views.length / 2) - 2;
                    jQuery(".page").css({
                        "margin-left": p,
                        "margin-right": p
                    });
                    jQuery("#pages").css("overflow-x", "auto")
                }
                jQuery("#import_modal .modal-body").css("max-height", jQuery(window).height() - (jQuery(window).height() * 0.3 + 130) + "px");
                jQuery("#welcome_modal .modal-body").css("max-height", (jQuery(window).height() * 0.9 - 111) + "px");
                editor.update()
            };
            this.set_view_mode = function (d) {
                if (d) {
                    jQuery("#sidebar").hide();
                    jQuery("#edit_creation").show();
                    jQuery("#save_project").hide();
                    jQuery("#grid_toggle").hide();
                    jQuery("#undo").hide();
                    jQuery("#redo").hide();
                    jQuery("#main").css("width", "100%");
                    editor.editable = false
                } else {
                    jQuery("#sidebar").show();
                    jQuery("#edit_creation").hide();
                    jQuery("#save_project").show();
                    jQuery("#grid_toggle").show();
                    jQuery("#undo").show();
                    jQuery("#redo").show();
                    jQuery("#main").css("width", "77%");
                    editor.editable = true
                }
                this.set_sizes()
            };
            var c = this;
            this.initialize()
        }
    },
    alt: {
        init: function (a) {
            this.started;
            this.sharepoped = false;
            this.container = a || window;
            this.background_preloaded;
            this.more_icons_timer;
            this.initialize = function () {
                var g = function () {
                    var k = "";
                    for (var i = 1; i <= 10; i++) {
                        k += "<option " + (editor.grid.size == i ? "selected" : "") + " value='" + i + "'>" + i + "mm</option>"
                    }
                    var j = jQuery("#popvr_grid_tpl").html().replace("#options_sizes#", k).replace("#magnet_active#", editor.grid.active ? "checked" : "").replace("#display_active#", editor.grid.display ? "checked" : "");
                    return j
                };
                var c = function () {
                    var k = "";
                    for (var i = 0; i <= 10; i++) {
                        k += "<option " + (editor.grid.spacing == i ? "selected" : "") + " value='" + i + "'>" + i + "mm</option>"
                    }
                    var j = jQuery("#popvr_guides_tpl").html().replace("#options_sizes#", k).replace("#guides_active#", editor.grid.active ? "checked" : "").replace("#guides_displayed#", editor.grid.display ? "checked" : "");
                    return j
                };
                var h = function () {
                    var i = creation.product.pagespec.inc_pages && creation.product.pagespec.min_pages && creation.product.pagespec.max_pages;
                    if (i && KWP_CONF.advancedAutofill) {
                        return jQuery("#popvr_bookautofill_tpl").html()
                    }
                    return jQuery("#popvr_autofill_tpl").html()
                };
                jQuery(document).on("blur", "input, textarea", function () {
                    setTimeout(function () {
                        window.scrollTo(document.body.scrollLeft, document.body.scrollTop)
                    }, 0)
                });
                jQuery("#grid_toggle").popover({
                    html: true,
                    placement: "bottom",
                    title: KWC.translate("Grid options"),
                    content: g
                });
                jQuery("#guides_toggle").popover({
                    html: true,
                    placement: "bottom",
                    title: KWC.translate("Smart Guides options"),
                    content: c
                });
                jQuery("#autofill_toggle").popover({
                    html: true,
                    placement: "bottom",
                    trigger: "manual",
                    title: KWC.translate("Automatic fill"),
                    content: h
                }).on("shown.bs.popover", function (i) {
                    if (!jQuery(".popbookautofill").is(":visible")) {
                        return
                    }
                    if (!creation.hasApparentCover()) {
                        jQuery("#cover_fill").parent().hide()
                    }
                    jQuery("[value=fillempty]").removeAttr("disabled").parent().removeClass("disabled");
                    if (KWP_utils.unusedPhotos() == 0 || (creation.getBookBlockEmptyPages() == 0 && creation.getNumberOfPages() == creation.product.pagespec.max_pages)) {
                        jQuery("[value=fillempty]").attr("disabled", "disabled").parent().addClass("disabled")
                    }
                    if (creation.isEmptyBook()) {
                        jQuery(".fill-options .radio").hide()
                    } else {
                        jQuery(".fill-options .radio").show()
                    }
                    var k = KWC.translate("#d1# pages (#d2# photos per page)");
                    var l = function (r) {
                        var o = creation.product.pagespec;
                        var t = Number.MAX_SAFE_INTEGER;
                        var p, q, s = o.min_pages;
                        if (r) {
                            q = o.min_pages;
                            p = manager.getImageList().length / (KWP_CONF.photosPerPage || 3)
                        } else {
                            q = creation.getBookBlockEmptyPages();
                            p = KWP_utils.unusedPhotos() / (KWP_CONF.photosPerPage || 3)
                        }
                        for (var m = o.min_pages; m <= o.max_pages; m += o.inc_pages) {
                            if (Math.abs(m - p) < t) {
                                t = Math.abs(m - p);
                                s = m;
                                continue
                            }
                            break
                        }
                        return s
                    };
                    var j = function (m) {
                        var o = Math.ceil(manager.getImageList().length / m * 10) / 10;
                        jQuery("#autofill_slider_results").html(k.replace("#d1#", m).replace("#d2#", o));
                        jQuery("#autofill_user_content").html(manager.autofillBookDesc(m, o))
                    };
                    jQuery("#header #autofill_pages_slider").slider({
                        min: creation.product.pagespec.min_pages,
                        max: creation.product.pagespec.max_pages,
                        step: creation.product.pagespec.inc_pages,
                        value: l(true),
                        range: "min",
                        create: function (m) {
                            j(l(true))
                        },
                        slide: function (o, p) {
                            var m = jQuery("#header [name=filltype]:checked").val() == "fillscratch";
                            j(p.value)
                        },
                        change: function (o, p) {
                            var m = jQuery("#header [name=filltype]:checked").val() == "fillscratch";
                            j(p.value)
                        }
                    });
                    jQuery("#header [name=filltype]").on("change", function () {
                        var r = jQuery(this).val();
                        var m = creation.product.pagespec;
                        var t = m.inc_pages;
                        var q = m.min_pages;
                        var p = m.max_pages;
                        var s, o;
                        switch (r) {
                            case "fillempty":
                                if (creation.getBookBlockEmptyPages() == 0) {
                                    s = Math.min(p, creation.getNumberOfPages() + t)
                                } else {
                                    s = creation.getNumberOfPages()
                                }
                                o = Math.max(s, l(false));
                                break;
                            default:
                                s = q;
                                o = l(true);
                                break
                        }
                        jQuery("#autofill_pages_slider").slider("option", "value", o);
                        jQuery("#autofill_pages_slider").slider("option", "min", s);
                        j(o)
                    })
                });
                jQuery("#share_toggle").popover({
                    html: true,
                    placement: "bottom",
                    content: function () {
                        return jQuery("#popvr_share_tpl").html()
                    }
                });
                if (!!KWP_CONF.save_warning) {
                    jQuery("#save_project").parent().popover({
                        template: '<div class="popover savepop"><div class="arrow"></div><div class="popover-inner" style="width:200px;"><h3 class="popover-title"></h3><div class="popover-content"><p></p></div></div></div>',
                        placement: "right",
                        trigger: "manual",
                        content: KWC.translate("Remember to save your project!")
                    })
                }
                jQuery("#more_options").hammer().on("tap", function (i) {
                    jQuery(".order-zone").css("right", jQuery(".order-zone").width() * -1);
                    b.more_icons_timer = setTimeout(function () {
                        jQuery(".order-zone").css("right", "0")
                    }, 10000);
                    i.stopPropagation();
                    if (i.gesture) {
                        i.gesture.stopPropagation()
                    }
                });
                jQuery(".kwp-icon, .topicon").hammer().on("tap", function (i) {
                    if (jQuery(this).hasClass("disabled")) {
                        return
                    }
                    i.stopPropagation();
                    if (i.gesture) {
                        i.gesture.stopPropagation()
                    }
                });
                jQuery("#placeholder_block").on("click", function (i) {
                    i.stopPropagation()
                });
                jQuery("#delete_placeholder").on("click", function () {
                    editor.keyPressedDelete()
                });
                jQuery("#placeholder_photo").on("click", function () {
                    jQuery(".cficon[data-related=photos_block]").click()
                });
                jQuery(document).hammer().on("tap", function (i) {
                    jQuery(".popover-link").each(function () {
                        if (!jQuery(this).is(i.target) && jQuery(this).has(i.target).length === 0 && jQuery(".popover").has(i.target).length === 0) {
                            jQuery(this).popover("hide")
                        }
                    });
                    clearTimeout(b.more_icons_timer);
                    jQuery(".order-zone").css("right", "0");
                    if (i.gesture) {
                        editor.unselect(i.gesture);
                        i.gesture.stopPropagation()
                    }
                    editor.unselect(i);
                    i.stopPropagation()
                });
                jQuery(document).on("click", function (i) {
                    editor.unselect(i);
                    jQuery(".popover-link").each(function () {
                        if (!jQuery(this).is(i.target) && jQuery(this).has(i.target).length === 0 && jQuery(".popover").has(i.target).length === 0) {
                            jQuery(this).popover("hide")
                        }
                    })
                });
                jQuery(document).on("focus", ".select2-input", keypress.stop_listening);
                jQuery(document).on("blur", ".select2-input", keypress.listen);
                document.addEventListener("fullscreeneventchange", function () {
                    if (document.fullScreen) {
                        jQuery("#rq_fullsrc").removeClass("hide").addClass("hide");
                        jQuery("#rq_windowed").removeClass("hide")
                    } else {
                        jQuery("#rq_windowed").removeClass("hide").addClass("hide");
                        jQuery("#rq_fullsrc").removeClass("hide")
                    }
                }, false);
                document.addEventListener("mozfullscreenchange", function () {
                    if (document.mozFullScreen) {
                        jQuery("#rq_fullsrc").removeClass("hide").addClass("hide");
                        jQuery("#rq_windowed").removeClass("hide")
                    } else {
                        jQuery("#rq_windowed").removeClass("hide").addClass("hide");
                        jQuery("#rq_fullsrc").removeClass("hide")
                    }
                }, false);
                document.addEventListener("webkitfullscreenchange", function () {
                    if (document.webkitIsFullScreen) {
                        jQuery("#rq_fullsrc").removeClass("hide").addClass("hide");
                        jQuery("#rq_windowed").removeClass("hide")
                    } else {
                        jQuery("#rq_windowed").removeClass("hide").addClass("hide");
                        jQuery("#rq_fullsrc").removeClass("hide")
                    }
                }, false);
                var d = function (i) {
                    i.stopPropagation();
                    i.preventDefault();
                    i.dataTransfer.dropEffect = "copy"
                };
                document.getElementById("main_application").addEventListener("dragover", d, false);
                var e = function (k) {
                    k.stopPropagation();
                    k.preventDefault();
                    var m = k.dataTransfer.files;
                    if (KWP_utils.imageStorage(m)) {
                        KWP_utils.thumbnailDisplay()
                    }
                    var l = 65;
                    var j = jQuery("#thumbnails_zone")[0].clientWidth;
                    var o = Math.floor(j / (l + 8));
                    var i = Math.floor((j - l * o) / (o * 2))
                };
                document.getElementById("main_application").addEventListener("drop", e, false);
                keypress.combo("meta x", function () {
                    jQuery("#cut_item").effect("highlight").click()
                });
                keypress.combo("meta z", function () {
                    jQuery("#undo").effect("highlight").click()
                });
                keypress.combo("meta y", function () {
                    jQuery("#redo").effect("highlight").click()
                });
                keypress.combo("meta c", function () {
                    jQuery("#copy_item").effect("highlight").click()
                });
                keypress.combo("meta v", function () {
                    jQuery("#paste_item").effect("highlight").click()
                });
                if (KWP_CONF.photozoom) {
                    var f = function (i) {
                        jQuery("#extrastyle").text(".koffeeware-creator #main_application #sidebar #thumbnails_zone .menu-thumbnail { width:" + i + "px;height:" + i + "px; line-height:" + i + "px;}")
                    };
                    jQuery(".photo-zoom").show();
                    jQuery("html head").append("<style id='extrastyle' />");
                    jQuery(".plus-zoom").on("click", function (i) {
                        var j = Math.min(120, jQuery("#photosize_slider").slider("value") + 5);
                        f(j);
                        jQuery("#photosize_slider").slider("value", j);
                        i.stopPropagation()
                    });
                    jQuery(".minus-zoom").on("click", function (i) {
                        var j = Math.max(30, jQuery("#photosize_slider").slider("value") - 5);
                        f(j);
                        jQuery("#photosize_slider").slider("value", j);
                        i.stopPropagation()
                    });
                    jQuery("#photosize_slider").slider({
                        min: 30,
                        max: 120,
                        step: 5,
                        value: 75,
                        slide: function (i, j) {
                            f(j.value)
                        }
                    })
                }
                jQuery("#options_block").on("click", function (i) {
                    i.stopPropagation()
                });
                b.start();
                b.set_sizes()
            };
            this.show_menu = function () {
                if (jQuery("#options_block").is(":hidden")) {
                    jQuery(".cficon").removeClass("selected");
                    jQuery(".sidecontent .content").hide();
                    jQuery("#options_block").show();
                    KWP_utils._kw124()
                }
            };
            this.show_placeholder_options = function () {
                jQuery(".cficon").removeClass("selected");
                jQuery(".sidecontent .content").hide();
                jQuery("#placeholder_block").show()
            };
            this.hide_menu = function () {
                jQuery(".cficon").removeClass("selected");
                jQuery(".sidecontent .content").hide();
                jQuery(".cficon[data-related=" + KWP.selectedMenu + "]").addClass("selected");
                jQuery("#" + KWP.selectedMenu).show();
                b.set_sizes()
            };
            this.hide_placeholder_options = function () { };
            this.show_photos_tab = function () {
                if (jQuery(".cficon[data-related=photos_block]").hasClass("selected")) {
                    return
                }
                KWP.selectedMenu = "photos_block";
                jQuery(".cficon").removeClass("selected");
                jQuery(".sidecontent .content").hide();
                jQuery(".cficon[data-related=" + KWP.selectedMenu + "]").addClass("selected");
                jQuery("#" + KWP.selectedMenu).show();
                KWP_utils._kw124()
            };
            this.start = function () {
                this.started = true;
                jQuery(window).resize(function () {
                    b.set_sizes();
                    if (jQuery("#backgrounds_zone").is(":visible")) {
                        backgrounds.set_thumbpage()
                    }
                    if (jQuery("#cliparts_zone").is(":visible")) {
                        cliparts.set_thumbpage()
                    }
                    if (jQuery("#patterns_zone").is(":visible")) {
                        patterns.set_thumbpage()
                    }
                    if (jQuery("#foregrounds_zone").is(":visible")) {
                        foregrounds.set_thumbpage()
                    }
                });
                jQuery("#main").disableSelection();
                jQuery("#cliparts_zone .menu-thumbnail").draggable({
                    disabled: false
                });
                jQuery("#patterns_zone .menu-thumbnail").draggable({
                    disabled: false
                });
                jQuery("#foregrounds_zone .menu-thumbnail").draggable({
                    disabled: false
                });
                jQuery("#thumbnails_zone .menu-thumbnail").draggable({
                    disabled: false
                });
                jQuery(".iconbar").on("click", ".cficon.contract", function (c) {
                    jQuery(".cficon").removeClass("selected");
                    jQuery(this).removeClass("contract").addClass("expand");
                    jQuery(this).find(".bloc").html('<i class="iconmoon-chevron-right"></i>');
                    jQuery("#sidebar").width("69px");
                    jQuery("#main").width(jQuery(window).width() - 69 + "px");
                    setTimeout(b.set_sizes, 0);
                    c.stopPropagation()
                });
                jQuery(".iconbar").on("click", ".cficon.expand", function (c) {
                    jQuery(this).removeClass("expand").addClass("contract");
                    jQuery(this).find(".bloc").html('<i class="iconmoon-chevron-left"></i>');
                    jQuery("#main").width("75%");
                    jQuery("#sidebar").width("25%");
                    setTimeout(b.set_sizes, 0);
                    jQuery(".cficon[data-related=" + KWP.selectedMenu + "]").addClass("selected");
                    c.stopPropagation()
                });
                jQuery(".iconbar").on("click", ".cficon", function (c) {
                    if (jQuery(this).hasClass("expand") || jQuery(this).hasClass("contract") || jQuery(this).hasClass("selected")) {
                        return
                    }
                    if (jQuery(".cficon.expand")[0]) {
                        jQuery(".cficon.expand").click()
                    }
                    jQuery(".cficon").removeClass("selected");
                    jQuery(".sidecontent .content").hide();
                    var d = jQuery(this).attr("data-related");
                    if (d) {
                        jQuery(".sidecontent #" + d).show();
                        jQuery(this).addClass("selected");
                        switch (d) {
                            case "cliparts_block":
                                cliparts.set_thumbpage("cliparts_zone");
                                break;
                            case "patterns_block":
                                patterns.set_thumbpage();
                                break;
                            case "backgrounds_block":
                                backgrounds.set_thumbpage();
                                break;
                            case "foregrounds_block":
                                foregrounds.set_thumbpage();
                                break;
                            case "themes_block":
                                kwtemplates.display_templates();
                                break;
                            case "layouts_block":
                                break
                        }
                        if (d != "options_block") {
                            KWP.selectedMenu = d
                        }
                    } else {
                        manager.clearWelcome();
                        editor._kw58()
                    }
                    c.stopPropagation()
                });
                jQuery("#autofill_toggle").on("click", function () {
                    if (jQuery(this).hasClass("disabled")) {
                        return
                    }
                    jQuery(this).popover("toggle")
                });
                jQuery("#header").on("click", ".popautofill li, .popbookautofill li", function () {
                    if (jQuery(this).hasClass("selected")) {
                        return
                    }
                    jQuery("#header").find(".popautofill li, .popbookautofill li").removeClass("selected");
                    jQuery(this).addClass("selected");
                    var c = jQuery("#header [name=filltype]:checked").val() == "fillscratch";
                    jQuery.each(KWP_utils.getSortedPhotoList(jQuery(this).attr("data-sort"), !c), function (d, e) {
                        jQuery("#thumbnails_zone div[id=" + e.id + "]").appendTo(jQuery("#thumbnails_zone"))
                    })
                });
                jQuery("#header").on("click", "#autofill_apply", function () {
                    var c = jQuery("#header").find(".popautofill li[class=selected]").attr("data-sort");
                    creation.fill(KWP_utils.getSortedPhotoList(c));
                    jQuery("#autofill_toggle").popover("hide")
                });
                jQuery("#header").on("click", "#bookautofill_apply", function () {
                    var d = jQuery("#header").find(".popbookautofill li[class=selected]").attr("data-sort");
                    var e = jQuery("#header [name=filltype]:checked").val() == "fillscratch";
                    var c = jQuery("#autofill_pages_slider").slider("option", "value");
                    var f = creation.getNumberOfPages();
                    var g = {
                        photo_list: KWP_utils.getSortedPhotoList(d, !e),
                        scratch: e,
                        npages: jQuery("#autofill_pages_slider").slider("option", "value"),
                        fill_cover: jQuery("#cover_fill").is(":checked")
                    };
                    creation.bookFill(g);
                    if (c != f) {
                        manager.bookPagesChanged(c)
                    }
                    jQuery("#autofill_toggle").popover("hide")
                });
                jQuery("#header").on("click", ".sharelink", function () {
                    jQuery("#link_sharing").val(jQuery(this).attr("data-url"));
                    jQuery("#linkshare_modal").modal()
                });
                jQuery("#link_sharing").on("click", function () {
                    this.focus();
                    this.selectionStart = 0;
                    this.selectionEnd = 9999
                });
                jQuery("#header").on("change", "#grid_magnet", function () {
                    if (jQuery("#grid_magnet").is(":checked")) {
                        editor.grid.active = true
                    } else {
                        editor.grid.active = false
                    }
                });
                jQuery("#header").on("change", "#grid_display", function () {
                    if (jQuery("#grid_display").is(":checked")) {
                        editor.grid.display = true
                    } else {
                        editor.grid.display = false
                    }
                    editor.update()
                });
                jQuery("#header").on("change", "#grid_size", function () {
                    editor.grid.size = jQuery(this).val() | 0;
                    editor.update()
                });
                jQuery("#header").on("click", "#grid_apply", function () {
                    editor.grid.apply(creation._kw161().page);
                    editor.update();
                    jQuery("#grid_toggle").popover("hide")
                });
                jQuery("#header").on("change", "#guides_active", function () {
                    if (jQuery("#guides_active").is(":checked")) {
                        editor.grid.active = true
                    } else {
                        editor.grid.active = false
                    }
                });
                jQuery("#header").on("change", "#guides_display", function () {
                    if (jQuery("#guides_display").is(":checked")) {
                        editor.grid.display = true
                    } else {
                        editor.grid.display = false
                    }
                    editor.update()
                });
                jQuery("#header").on("change", "#guides_size", function () {
                    editor.grid.spacing = jQuery(this).val() | 0;
                    editor.update()
                });
                jQuery("#header").on("click", "#edit_photo", function (c) {
                    c.preventDefault();
                    var d = editor.editPhoto();
                    if (!d) {
                        jQuery("#edit_photo_failed").modal()
                    } else {
                        jQuery(".object-menu").stop(true, true).effect("highlight", {
                            duration: 1000,
                            color: "#ff5"
                        })
                    }
                    c.stopPropagation()
                });
                jQuery("#clear_creation").on("click", function () {
                    if (confirm(KWC.translate("Are you sure you want to clear your creation ?"))) {
                        uploader.creation_id = KWP_utils.randomString(16);
                        creation.clear();
                        editor.update()
                    }
                });
                jQuery("#preview_btn").on("click", function () {
                    jQuery("#preview_modal").find(".modal-body").empty();
                    jQuery("#preview_modal").find(".modal-body").html(creation._kw172(395));
                    jQuery("#preview_modal").css({
                        height: 480,
                        width: 500,
                        marginLeft: -240,
                        top: (jQuery(window).height() - 480) / 2,
                        textAlign: "center"
                    });
                    jQuery("#preview_modal").modal()
                });
                jQuery(".creatorpage").on("click", function () {
                    var c = jQuery(".page.active").index();
                    var d = (jQuery(this).hasClass("right") ? c + 1 : c - 1);
                    if (jQuery(".page[data-index=" + d + "]")[0]) {
                        jQuery(".page[data-index=" + d + "]").click()
                    } else {
                        jQuery(this).hasClass("right") ? jQuery(".page:first").click() : jQuery(".page:last").click()
                    }
                });
                jQuery("#pages").on("click", ".page", function () {
                    var d = jQuery(this);
                    if (jQuery(this).hasClass("active")) {
                        return
                    }
                    var c = jQuery(".page.active").index();
                    var e = jQuery(this).attr("data-index") | 0;
                    var g = function () {
                        var i = 0;
                        for (var h = 0; h <= e; h++) {
                            i += jQuery(".page[data-index=" + h + "]").outerWidth(true)
                        }
                        jQuery("#pages").stop().animate({
                            scrollLeft: i - jQuery("#pages").innerWidth() / 2
                        }, 1000, "easeInOutCubic")
                    };
                    var f = function () {
                        var h = creation._kw161().properties.is_cover;
                        creation._kw162(e);
                        editor._kw201(creation._kw161());
                        var i = creation._kw161().properties.is_cover;
                        g();
                        b.set_sizes();
                        if (typeof kwtemplates != "undefined" && h != i) {
                            kwtemplates.display_layouts()
                        }
                    };
                    jQuery(".page.active").removeClass("active");
                    jQuery(this).addClass("active");
                    if (typeof flipper != "undefined") {
                        jQuery("#creator").hide();
                        flipper.turn(c, e, function () {
                            setTimeout(function () {
                                jQuery("#creator").show();
                                f()
                            }, 1)
                        })
                    } else {
                        f()
                    }
                });
                jQuery("#order_btn").on("click", function () {
                    var c = function () {
                        if (typeof window.cart_posting == "function") {
                            if (typeof window.customOrderInit == "function") {
                                window.customOrderInit()
                            } else {
                                if (jQuery("body > #order_zone").length == 0) {
                                    jQuery("body").prepend(jQuery("#order_layout_tpl").html())
                                }
                                jQuery("#order_zone").show();
                                uploader.draw_progress(0)
                            }
                            jQuery("#save_project").attr("src", KWP_CONF.static_serv + "img/preloader.gif");
                            uploader.autosaving = false;
                            uploader.save_once_triggered = true;
                            uploader.order_triggered = true;
                            uploader.save_callback = null;
                            uploader.done_callback = window.cart_posting;
                            uploader.uploadList()
                        }
                    };
                    if (typeof window.onOrder == "function") {
                        onOrder(function () {
                            c()
                        })
                    } else {
                        c()
                    }
                });
                jQuery(document).on("click", ".cancel-order", function () {
                    uploader.abort();
                    jQuery("#order_zone").fadeOut()
                });
                jQuery("#undo").on("click", function () {
                    if (jQuery(this).hasClass("disabled")) {
                        return
                    }
                    editor.undo();
                    manager._kw46()
                });
                jQuery("#redo").on("click", function () {
                    if (jQuery(this).hasClass("disabled")) {
                        return
                    }
                    editor.redo();
                    manager._kw46()
                });
                jQuery("#rq_fullsrc").on("click", function () {
                    KWP_utils.launchFullScreen(document.documentElement)
                });
                jQuery("#rq_windowed").on("click", function () {
                    KWP_utils._kw118()
                });
                jQuery("#theme_zone, #welcome_modal").on("click", ".theme", function (c) {
                    manager.clearWelcome();
                    var d = jQuery(this).attr("data-descriptor");
                    var e = jQuery(this).attr("data-hash");
                    jQuery.getJSON(d, function (g) {
                        creation._kw109(g, manager, e);
                        if (KWP_utils.unusedPhotos() > 0) {
                            jQuery("#autofill_toggle").removeClass("disabled")
                        }
                        if (typeof flipper == "object") {
                            flipper.refresh(true)
                        }
                        var f = KWP_utils.getUsedFontList(creation);
                        jQuery.each(f, function (h, i) {
                            KWP_utils.addFontToList(i)
                        });
                        KWP_utils.buildFontList();
                        setTimeout(function () {
                            if (KWP_utils.unusedPhotos() > 0) {
                                jQuery("#autofill_toggle").popover("show")
                            }
                        }, 500)
                    });
                    c.stopPropagation()
                });
                jQuery("#theme_zone, #welcome_modal").on("click", ".kwtheme", function (c) {
                    manager.clearWelcome();
                    jQuery.get(kwtemplates.tplist[jQuery(this).attr("data-hash")].url, function (e) {
                        var d = jQuery.parseXML(e);
                        creation._kw164(d ? d : e);
                        if (KWP_utils.unusedPhotos() > 0) {
                            jQuery("#autofill_toggle").removeClass("disabled")
                        }
                        if (typeof flipper == "object") {
                            flipper.refresh(true)
                        }
                        setTimeout(function () {
                            if (KWP_utils.unusedPhotos() > 0) {
                                jQuery("#autofill_toggle").popover("show")
                            }
                        }, 500)
                    });
                    c.stopPropagation()
                });
                jQuery("#add_photos_button").on("click", function (c) {
                    c.preventDefault();
                    jQuery("#add_photos_input").click();
                    c.stopPropagation()
                });
                jQuery(".delete-photos-btn").on("click", function (c) {
                    c.preventDefault();
                    if (jQuery(this).hasClass("disabled")) {
                        return
                    }
                    if (jQuery(this).hasClass("active")) {
                        jQuery("#thumbnails_zone").find(".menu-thumbnail").removeClass("removing").draggable({
                            disabled: false
                        });
                        jQuery(this).removeClass("active")
                    } else {
                        jQuery("#thumbnails_zone").find(".menu-thumbnail").addClass("removing").draggable({
                            disabled: true
                        });
                        jQuery(this).addClass("active")
                    }
                    c.stopPropagation()
                });
                jQuery("#add_photos_input").on("change", function (c) {
                    var d = c.target.files;
                    c.preventDefault();
                    if (KWP_utils.imageStorage(d)) {
                        jQuery("#thumbnails_zone .ui-effects-wrapper").remove();
                        KWP_utils.thumbnailDisplay()
                    }
                    KWP_utils.reset_form_element(jQuery("#add_photos_input"))
                });
                jQuery("#creator").droppable({
                    over: function (c, d) {
                        if (KWP.imagesLoaded[d.draggable[0].id].to_canvas.type == "photo") {
                            jQuery(".ui-draggable-dragging").hide()
                        }
                    },
                    drop: function (c, d) {
                        manager.clearWelcome();
                        editor.drop(KWP.imagesLoaded[d.draggable[0].id].to_canvas, c);
                        manager._kw46();
                        uploader.preparePhotoList();
                        switch (KWP.imagesLoaded[d.draggable[0].id].to_canvas.type) {
                            default: break
                        }
                    },
                    out: function (c, d) {
                        editor.dragCancelled(KWP.imagesLoaded[d.draggable[0].id].to_canvas, c);
                        jQuery(".ui-draggable-dragging").show()
                    }
                });
                jQuery("#font_chooser").on("click", function (c) {
                    c.preventDefault();
                    this.blur();
                    jQuery("#size_selector").hide();
                    jQuery("#color_selector").hide();
                    if (jQuery("#font_selector").is(":hidden")) {
                        jQuery(".object-menu").stop().animate({
                            scrollTop: jQuery("#font_chooser").position().top
                        }, "fast")
                    }
                    jQuery("#font_selector").slideToggle();
                    c.stopPropagation()
                });
                jQuery("#size_chooser").on("click", function (c) {
                    c.preventDefault();
                    this.blur();
                    jQuery("#font_selector").hide();
                    jQuery("#color_selector").hide();
                    jQuery("#size_selector").slideToggle("normal", function () {
                        jQuery(".object-menu").stop().animate({
                            scrollTop: jQuery("#size_chooser").position().top
                        }, "fast")
                    });
                    c.stopPropagation()
                });
                jQuery("#layout_zone").on("click", ".layout", function (i) {
                    var f = jQuery(this).attr("data-lytid");
                    var l, m;
                    var g = Object.keys(kwtemplates.lylist).length > 0 ? kwtemplates.lylist : kwtemplates.tplist;
                    jQuery.each(g, function (o, p) {
                        m = false;
                        jQuery.each(p.layouts, function (r, q) {
                            if (q.id == f) {
                                l = q;
                                m = true;
                                return false
                            }
                        });
                        if (m) {
                            return false
                        }
                    });
                    if (!creation._kw161().properties.double_background) {
                        manager.clearWelcome();
                        creation._kw161().page.action({
                            action: "apply_layout",
                            value: l
                        });
                        manager._kw46();
                        return
                    }
                    jQuery("#applyto_modal .image-zone").html("<img src='" + jQuery(this).find("canvas").get()[0].toDataURL() + "' />");
                    jQuery("#applyto_modal .object-location").attr("data-id", f);
                    jQuery("#applyto_modal .object-location").attr("data-type", "layout");
                    var k = creation._kw161().page.clone();
                    var e = creation._kw161().page.clone();
                    var j = creation._kw161().page.clone();
                    k.action({
                        action: "apply_layout_left",
                        value: l
                    });
                    e.action({
                        action: "apply_layout",
                        value: l
                    });
                    j.action({
                        action: "apply_layout_right",
                        value: l
                    });
                    k.addUpdateListener(function () {
                        var o = creation._kw161()._kw172(220, k);
                        jQuery(".object-location").find(".left-page").html(o)
                    });
                    e.addUpdateListener(function () {
                        var o = creation._kw161()._kw172(220, e);
                        jQuery(".object-location").find(".both-pages").html(o)
                    });
                    j.addUpdateListener(function () {
                        var o = creation._kw161()._kw172(220, j);
                        jQuery(".object-location").find(".right-page").html(o)
                    });
                    var d = creation._kw161()._kw172(220, k);
                    var h = creation._kw161()._kw172(220, e);
                    var c = creation._kw161()._kw172(220, j);
                    jQuery(".object-location").find(".left-page").html(d);
                    jQuery(".object-location").find(".both-pages").html(h);
                    jQuery(".object-location").find(".right-page").html(c);
                    if (creation._kw161().properties.apply_to_all) {
                        jQuery(".apply-to-all").show()
                    } else {
                        jQuery(".apply-to-all").hide()
                    }
                    jQuery("#applyto_modal").css({
                        height: 600,
                        width: 900,
                        marginLeft: -450,
                        top: (jQuery(window).height() - 600) / 2,
                        textAlign: "center"
                    });
                    jQuery("#applyto_modal .modal-body").css("max-height", 600);
                    jQuery("#applyto_modal").modal()
                });
                jQuery("#backgrounds_zone").on("click", ".background-image", function (i) {
                    var l = i.currentTarget.id;
                    var h = KWP.imagesLoaded[l].to_canvas;
                    if (creation._kw161().properties.double_background) {
                        var f = new Image();
                        f.src = h.thumblist.list[0].url;
                        jQuery("#applyto_modal .image-zone").html(f);
                        jQuery("#applyto_modal .object-location").attr("data-id", l);
                        jQuery("#applyto_modal .object-location").attr("data-type", "background");
                        var k = creation._kw161().page.clone();
                        var e = creation._kw161().page.clone();
                        var j = creation._kw161().page.clone();
                        k.action({
                            action: "set_left_background",
                            value: h
                        });
                        e.action({
                            action: "set_background",
                            value: h
                        });
                        j.action({
                            action: "set_right_background",
                            value: h
                        });
                        k.addUpdateListener(function () {
                            var m = creation._kw161()._kw172(220, k);
                            jQuery(".object-location").find(".left-page").html(m)
                        });
                        e.addUpdateListener(function () {
                            var m = creation._kw161()._kw172(220, e);
                            jQuery(".object-location").find(".both-pages").html(m)
                        });
                        j.addUpdateListener(function () {
                            var m = creation._kw161()._kw172(220, j);
                            jQuery(".object-location").find(".right-page").html(m)
                        });
                        var d = creation._kw161()._kw172(220, k);
                        var g = creation._kw161()._kw172(220, e);
                        var c = creation._kw161()._kw172(220, j);
                        jQuery(".object-location").find(".left-page").html(d);
                        jQuery(".object-location").find(".both-pages").html(g);
                        jQuery(".object-location").find(".right-page").html(c);
                        if (creation._kw161().properties.apply_to_all) {
                            jQuery(".apply-to-all").show()
                        } else {
                            jQuery(".apply-to-all").hide()
                        }
                        jQuery("#applyto_modal").css({
                            height: 600,
                            width: 900,
                            marginLeft: -480,
                            top: (jQuery(window).height() - 600) / 2,
                            textAlign: "center"
                        });
                        jQuery("#applyto_modal .modal-body").css("max-height", 600);
                        jQuery("#applyto_modal").modal()
                    } else {
                        manager.clearWelcome();
                        creation._kw161().page.action({
                            action: "set_background",
                            value: h
                        });
                        manager._kw46()
                    }
                });
                jQuery("#applyto_modal .location-box").on("click", function (d) {
                    var c = jQuery("#applyto_modal .object-location").attr("data-id");
                    var h = jQuery("#applyto_modal .object-location").attr("data-type");
                    var g = jQuery("#applytoall_checked").is(":checked");
                    manager.clearWelcome();
                    switch (h) {
                        case "background":
                            var f = KWP.imagesLoaded[c].to_canvas;
                            if (jQuery(this).attr("data-position") == "left") {
                                if (g) {
                                    creation._kw168(f)
                                } else {
                                    creation._kw161().page.action({
                                        action: "set_left_background",
                                        value: f
                                    })
                                }
                            } else {
                                if (jQuery(this).attr("data-position") == "right") {
                                    if (g) {
                                        creation._kw170(f)
                                    } else {
                                        creation._kw161().page.action({
                                            action: "set_right_background",
                                            value: f
                                        })
                                    }
                                } else {
                                    if (g) {
                                        creation._kw167(f)
                                    } else {
                                        creation._kw161().page.action({
                                            action: "set_background",
                                            value: f
                                        })
                                    }
                                }
                            }
                            break;
                        case "layout":
                            var j, i;
                            var e = Object.keys(kwtemplates.lylist).length > 0 ? kwtemplates.lylist : kwtemplates.tplist;
                            jQuery.each(e, function (k, l) {
                                i = false;
                                jQuery.each(l.layouts, function (o, m) {
                                    if (m.id == c) {
                                        j = m;
                                        i = true;
                                        return false
                                    }
                                });
                                if (i) {
                                    return false
                                }
                            });
                            if (jQuery(this).attr("data-position") == "left") {
                                if (g) {
                                    creation.applyLeftLayoutToAll(j)
                                } else {
                                    creation._kw161().page.action({
                                        action: "apply_layout_left",
                                        value: j
                                    })
                                }
                            } else {
                                if (jQuery(this).attr("data-position") == "right") {
                                    if (g) {
                                        creation.applyRightLayoutToAll(j)
                                    } else {
                                        creation._kw161().page.action({
                                            action: "apply_layout_right",
                                            value: j
                                        })
                                    }
                                } else {
                                    if (g) {
                                        creation.applyLayoutToAll(j)
                                    } else {
                                        creation._kw161().page.action({
                                            action: "apply_layout",
                                            value: j
                                        })
                                    }
                                }
                            }
                            break;
                        default:
                            break
                    }
                    manager._kw46();
                    jQuery("#applyto_modal").modal("hide")
                });
                jQuery("#foregrounds_zone").on("click", ".foreground-image", function (c) {
                    manager.clearWelcome();
                    creation._kw161().page.action({
                        action: "set_foreground",
                        value: KWP.imagesLoaded[c.currentTarget.id].to_canvas
                    });
                    manager._kw46()
                });
                jQuery("#thumbnails_zone, #cliparts_zone, #patterns_zone").on("click", ".menu-thumbnail", function (c) {
                    if (jQuery(this).hasClass("removing")) {
                        uploader.abort();
                        jQuery(this).tooltip("disable");
                        jQuery(this).tooltip("hide");
                        jQuery(this).remove();
                        creation.deletePhotoSource(KWP.imagesLoaded[c.currentTarget.id].to_canvas);
                        delete KWP.imagesLoaded[c.currentTarget.id];
                        if (jQuery("#thumbnails_zone .menu-thumbnail").length == 0) {
                            jQuery(".delete-photos-btn").removeClass("active");
                            jQuery(".delete-photos-btn").addClass("disabled")
                        }
                        KWP_utils.displayTotalPhoto();
                        return
                    }
                    manager.clearWelcome();
                    editor.drop(KWP.imagesLoaded[c.currentTarget.id].to_canvas);
                    uploader.preparePhotoList();
                    manager._kw46()
                });
                jQuery("#background_color").on("click", function (c) {
                    jQuery(".text-color").hide();
                    if (creation._kw161().properties.double_background) {
                        jQuery(".single-page").hide();
                        jQuery(".multi-pages").show()
                    } else {
                        jQuery(".single-page").show();
                        jQuery(".multi-pages").hide()
                    }
                    var d = creation._kw161().page;
                    if (typeof (d.background) == "string") {
                        KWP_utils.colorPicker._kw3(d.background)
                    }
                    KWP_utils.colorPicker.callback = function (e) {
                        jQuery(".color-picker").attr("data-color", e)
                    };
                    KWP_utils.colorPicker.update();
                    jQuery("#colorpicker_modal").css({
                        height: 580,
                        width: 900,
                        marginLeft: -450,
                        top: (jQuery(window).height() - 580) / 2,
                        textAlign: "center"
                    });
                    jQuery("#colorpicker_modal .modal-body").css({
                        "max-height": 580,
                        padding: "0 15px"
                    });
                    jQuery("#colorpicker_modal").modal()
                });
                jQuery(".color-apply-btn").on("click", function (c) {
                    var d = jQuery(".color-picker").attr("data-color");
                    var e = jQuery("#applytoall_color_checked").is(":checked");
                    if (creation._kw161().properties.is_cover) {
                        e = false
                    }
                    manager.clearWelcome();
                    if (jQuery(this).attr("data-position") == "left") {
                        if (e) {
                            creation._kw168(d)
                        } else {
                            creation._kw161().page.action({
                                action: "set_left_background",
                                value: d
                            })
                        }
                    } else {
                        if (jQuery(this).attr("data-position") == "right") {
                            if (e) {
                                creation._kw170(d)
                            } else {
                                creation._kw161().page.action({
                                    action: "set_right_background",
                                    value: d
                                })
                            }
                        } else {
                            if (e) {
                                creation._kw167(d)
                            } else {
                                creation._kw161().page.action({
                                    action: "set_background",
                                    value: d
                                })
                            }
                        }
                    }
                    manager._kw46();
                    c.stopPropagation();
                    jQuery("#colorpicker_modal").modal("hide")
                });
                jQuery("#backgrounds_block").on("click", ".next", function (c) {
                    backgrounds.page++;
                    backgrounds.set_thumbpage()
                });
                jQuery("#backgrounds_block").on("click", ".prev", function (c) {
                    backgrounds.page--;
                    backgrounds.set_thumbpage()
                });
                jQuery("#cliparts_block").on("click", ".next", function (c) {
                    cliparts.page++;
                    cliparts.set_thumbpage()
                });
                jQuery("#cliparts_block").on("click", ".prev", function (c) {
                    cliparts.page--;
                    cliparts.set_thumbpage()
                });
                jQuery("#patterns_block").on("click", ".next", function (c) {
                    patterns.page++;
                    patterns.set_thumbpage()
                });
                jQuery("#patterns_block").on("click", ".prev", function (c) {
                    patterns.page--;
                    patterns.set_thumbpage()
                });
                jQuery("#foregrounds_block").on("click", ".next", function (c) {
                    foregrounds.page++;
                    foregrounds.set_thumbpage()
                });
                jQuery("#foregrounds_block").on("click", ".prev", function (c) {
                    foregrounds.page--;
                    foregrounds.set_thumbpage()
                });
                jQuery("#themes_block").on("click", ".next", function (c) {
                    kwtemplates.page++;
                    kwtemplates.display_templates()
                });
                jQuery("#themes_block").on("click", ".prev", function (c) {
                    kwtemplates.page--;
                    kwtemplates.display_templates()
                });
                jQuery("#layouts_block").on("click", ".next", function (c) {
                    kwtemplates.page++;
                    kwtemplates.display_layouts()
                });
                jQuery("#layouts_block").on("click", ".prev", function (c) {
                    kwtemplates.page--;
                    kwtemplates.display_layouts()
                });
                jQuery("#edit_creation").on("click", function (c) {
                    b.set_view_mode(false)
                });
                jQuery("#save_jpg").on("click", function () {
                    KWP_utils.saveJPG()
                });
                jQuery(".cficon[data-related=layouts_block]").on("click", function () {
                    if (jQuery("#layout_zone").is(":empty")) {
                        kwtemplates.display_layouts()
                    }
                });
                jQuery("#cut_item").on("click", function () {
                    editor.cut();
                    jQuery("#paste_item").removeClass("disabled")
                });
                jQuery("#copy_item").on("click", function () {
                    editor.copy();
                    jQuery("#paste_item").removeClass("disabled")
                });
                jQuery("#paste_item").on("click", function () {
                    editor.paste()
                })
            };
            this.destroy = function () {
                this.started = false;
                jQuery(".delete-photos-btn").unbind();
                jQuery("#header").unbind();
                jQuery("#autofill_toggle").unbind("click");
                jQuery("#show_themes").unbind();
                jQuery("#show_layouts").unbind();
                jQuery("#layout_zone").unbind();
                jQuery("#main_application").unbind();
                jQuery("#order_btn").unbind();
                jQuery("#cut_item").unbind("click");
                jQuery("#copy_item").unbind("click");
                jQuery("#paste_item").unbind("click");
                jQuery("#edit_photo").unbind("click");
                jQuery("#undo").unbind("click");
                jQuery("#redo").unbind("click");
                jQuery("#clear_creation").unbind("click");
                jQuery("#creator").droppable("destroy");
                jQuery("#add_photos_button").unbind();
                jQuery("#add_photos_input").unbind();
                jQuery("#backgrounds_zone").unbind();
                jQuery("#thumbnails_zone").unbind();
                jQuery("#cliparts_zone").unbind();
                jQuery("#patterns").unbind();
                jQuery("#save_jpg").unbind();
                jQuery("#theme_zone").unbind();
                jQuery(".creatorpage").unbind();
                jQuery(".location-box").unbind();
                jQuery(".color-apply-btn").unbind();
                jQuery(".iconbar").unbind();
                jQuery("#pages").unbind("click");
                jQuery("#font_chooser").unbind();
                jQuery("#size_chooser").unbind();
                jQuery(".menu-block .title").unbind();
                jQuery(".menu-block .titletext").unbind();
                jQuery("#cliparts_zone .menu-thumbnail").draggable({
                    disabled: true
                });
                jQuery("#patterns .menu-thumbnail").draggable({
                    disabled: true
                });
                jQuery("#foregrounds_zone .menu-thumbnail").draggable({
                    disabled: true
                });
                jQuery("#thumbnails_zone .menu-thumbnail").draggable({
                    disabled: true
                });
                jQuery("#backgrounds_block").unbind();
                jQuery("#cliparts_block").unbind();
                jQuery("#patterns_block").unbind();
                jQuery("#foregrounds_block").unbind();
                jQuery("#themes_block").unbind();
                jQuery("#layout_block").unbind()
            };
            this.set_sizes = function () {
                var m = 110;
                var q = creation._kw161();
                jQuery(".menu-block .content").hide();
                jQuery("#order_zone").css("padding-top", jQuery(window).height() / 2 - 50);
                var c = Math.floor(jQuery("#main").width() / 2) * 2;
                var g = c - m;
                var f = jQuery(b.container).height() - jQuery("#header").outerHeight(true);
                var u = Math.floor((f - jQuery(".pages-wrapper:visible").height()) / 2) * 2;
                var p = f - (jQuery(".menu-block:visible").outerHeight(true) * jQuery(".menu-block:visible").length);
                var t = jQuery("#header").width() - jQuery(".order-zone").outerWidth(true) - jQuery("#logozone").outerWidth(true) - 1;
                if (jQuery("#more_options").is(":hidden")) {
                    t -= 50
                }
                if (t < jQuery(".topicon:visible").length * jQuery(".topicon:visible").width()) {
                    jQuery("#more_options").show()
                } else {
                    jQuery("#more_options").hide()
                }
                jQuery(".menu-block .content").css("height", p);
                jQuery(".object-menu").css({
                    "min-height": 100,
                    "max-height": p
                });
                jQuery("#sidebar, #main, #splitter").css("height", f + "px");
                jQuery("#theme_zone, #layout_zone").css("height", p - 35);
                if (typeof kwtemplates != "undefined") {
                    kwtemplates.set_space(jQuery("#sidebar").width() - 70, p - 35);
                    kwtemplates.page = 1
                }
                jQuery("#thumbnails_zone").css("height", p - 55 - (KWP_CONF.photozoom ? 35 : 0));
                var e = KWP_CONF.searchEnabled ? 70 : 35;
                jQuery("#cliparts_zone, #patterns_zone, #backgrounds_zone, #foregrounds_zone, #theme_zone, #layout_zone").css("height", p - e);
                if (KWP_CONF.searchEnabled) {
                    jQuery("#cliparts_zone, #patterns_zone, #backgrounds_zone, #foregrounds_zone, #theme_zone, #layout_zone").css("padding-top", 35)
                }
                jQuery("#options_block").css({
                    height: "auto",
                    "max-height": p
                });
                jQuery(".menu-block .content.active").show();
                if (typeof q.crop != "undefined") {
                    var d = q.crop.width;
                    var i = q.crop.height
                } else {
                    var d = 1;
                    var i = 1
                }
                var h = Math.min(g / q.page.width, u / q.page.height);
                var s = Math.floor(h * q.page.width * d / 2) * 2;
                var r = Math.floor(h * q.page.height * i / 2) * 2;
                if (typeof flipper == "object") {
                    var o = flipper.getViewSize(q, g, u);
                    s = o.width;
                    r = o.height
                }
                jQuery(".canvas-wrapper").css({
                    width: s,
                    height: r,
                    marginLeft: (c - s) / 2,
                    marginTop: (u - r) / 2
                });
                jQuery("#creator").attr("width", s).attr("height", r);
                jQuery("#pageflipper").attr({
                    width: c,
                    height: u + 20
                });
                jQuery("#pageflipper").css({
                    top: -(u - r + 20) / 2,
                    left: -(c - s) / 2
                });
                jQuery(".creatorpage.left").css({
                    left: -10 - (c - s) / 2
                });
                jQuery(".creatorpage.right").css({
                    right: -10 - (c - s) / 2
                });
                if (jQuery(".canvas-wrapper").height() + jQuery(".pages-wrapper").height() < jQuery("#main").height()) {
                    jQuery(".pages-wrapper").css({
                        marginTop: (u - r) / 2
                    })
                }
                if (typeof flipper == "object") {
                    flipper.refresh()
                }
                var l = 0;
                jQuery(".page").each(function () {
                    l += jQuery(this).outerWidth()
                });
                if (l < jQuery("#pages").innerWidth()) {
                    var j = jQuery("#pages").innerWidth() - l;
                    var k = Math.floor(j / creation.views.length / 2) - 2;
                    jQuery(".page").css({
                        "margin-left": k,
                        "margin-right": k
                    });
                    jQuery("#pages").css("overflow-x", "auto")
                }
                jQuery("#import_modal .modal-body").css("max-height", jQuery(window).height() - (jQuery(window).height() * 0.3 + 130) + "px");
                jQuery("#welcome_modal .modal-body").css("max-height", (jQuery(window).height() * 0.9 - 111) + "px");
                editor.update()
            };
            this.set_view_mode = function (c) {
                if (c) {
                    jQuery("#sidebar").hide();
                    jQuery("#edit_creation").show();
                    jQuery("#save_project").hide();
                    jQuery("#grid_toggle").hide();
                    jQuery("#guide_toggle").hide();
                    jQuery("#undo").hide();
                    jQuery("#redo").hide();
                    jQuery("#main").css("width", "100%");
                    editor.editable = false
                } else {
                    jQuery("#sidebar").show();
                    jQuery("#edit_creation").hide();
                    jQuery("#save_project").show();
                    jQuery("#grid_toggle").show();
                    jQuery("#guide_toggle").show();
                    jQuery("#undo").show();
                    jQuery("#redo").show();
                    jQuery("#main").css("width", "77%");
                    editor.editable = true
                }
                this.set_sizes()
            };
            var b = this;
            this.initialize()
        }
    }
};
var KWPCanvasManager = function () {
    this.lastPhotoIDLoaded = null;
    this._kw182 = function () {
        return this.getFromMainList("frame")
    };
    this._kw183 = function () {
        return this.getFromMainList("textframe")
    };
    this.getImageList = function () {
        return this.getFromMainList("photo")
    };
    this._kw184 = function () {
        return this.getFromMainList("clipart")
    };
    this._kw185 = function () {
        return this.getFromMainList("background")
    };
    this._kw187 = function () {
        return this.getFromMainList("foreground")
    };
    this.getFromMainList = function (b) {
        var c = [];
        jQuery.each(KWP.imagesLoaded, function (d, e) {
            if (typeof (e.to_canvas) != "undefined" && e.to_canvas.type === b) {
                c.push(e.to_canvas)
            }
        });
        return c
    };
    this.getTheme = function (c, b) {
        if (jQuery.inArray(c, kwtemplates.hash_list) != -1) {
            jQuery.get(kwtemplates.tplist[c].url, function (d) {
                b(d)
            }).error(function () {
                b(null)
            })
        }
    };
    this.clearWelcome = function () {
        if (!editor.editable) {
            page.clear(false);
            editor.editable = true;
            editor.update()
        }
    };
    this._kw44 = function (e) {
        var d = e.split(":")[0];
        var c = e.split(":")[1];
        switch (d) {
            case "http":
            case "https":
                var b = ["menubar=yes", "location=yes", "resizable=yes", "scrollbars=yes", "status=yes", "height=400", "width=400"];
                window.open(e, KWP_CONF.client, b.join(","));
                break;
            case "action":
                if (c == "clear") {
                    if (jQuery("#thumbnails_zone .placeholder").is(":visible")) {
                        jQuery("#thumbnails_zone .placeholder").effect("bounce", 2000)
                    }
                    this.clearWelcome()
                }
                break;
            default:
                break
        }
    };
    this._kw206 = function () {
        a._kw75();
        controller.show_photos_tab()
    };
    this._kw176 = function () {
        pages_manager.update_pages()
    };
    this.bookPagesChanged = function (b) {
        return
    };
    this.autofillBookDesc = function (b) {
        return "&nbsp;"
    };
    this._kw46 = function () {
        uploader.should_save = true;
        uploader.clear_progress();
        if (!!KWP_CONF.autosave && uploader.save_once_triggered) {
            if (!uploader.in_progress && uploader.should_save) {
                clearTimeout(KWP.save_timer);
                clearTimeout(KWP.warning_save_timer);
                KWP.save_timer = setTimeout(function () {
                    if (!uploader.order_triggered) {
                        jQuery("#upload_progress_bar").show().progressbar({
                            value: 0
                        });
                        uploader.autosaving = true;
                        uploader.done_callback = null;
                        uploader.save_callback = (typeof window.save_callback == "function" ? window.save_callback : null);
                        uploader.uploadList()
                    }
                }, KWP_CONF.autosave_delay * 1000)
            } else {
                if (uploader.in_progress) {
                    uploader.modifications_since_save_started++
                }
            }
        }
        if (!!KWP_CONF.save_warning && !uploader.warning_triggered && !uploader.save_once_triggered) {
            uploader.warning_triggered = true;
            KWP.warning_save_timer = setTimeout(function () {
                jQuery("#save_project").parent().popover("show");
                jQuery(".savepop").css("line-height", "normal").stop(true, true).effect("highlight", {
                    duration: 1500
                })
            }, KWP_CONF.save_warning * 1000)
        }
        jQuery("#undo, #redo").removeClass("disabled").addClass("disabled");
        jQuery("#newcreation").removeClass("disabled");
        jQuery("#save_project").removeClass("disabled");
        jQuery("#project_saved, #save_preparation").remove();
        jQuery(".share-zone").hide();
        if (editor.undo_list.length > 0) {
            jQuery("#undo").removeClass("disabled").stop(true, true).effect("highlight", {
                color: "#99C316"
            })
        }
        if (editor.redo_list.length > 0) {
            jQuery("#redo").removeClass("disabled").stop(true, true).effect("highlight", {
                color: "#99C316"
            })
        }
        jQuery(window).on("beforeunload", function () {
            return KWC.translate("Warning: some changes are unsaved.")
        })
    };
    this._kw78 = function (b) {
        jQuery("#zoom_slider").slider("option", "value", b._kw77())
    };
    this.updatePhotoSource = function (e) {
        var b = document.getElementById(e.id);
        var c = document.createElement("span");
        jQuery(b).find("canvas").remove();
        jQuery(b).find("img").remove();
        jQuery(b).find("span").not(".badge").remove();
        jQuery(b).prepend(c);
        var d = document.createElement("div");
        jQuery("#object_title").html("<span class='object-title'>" + KWC.translate("Photo") + "</span>");
        jQuery(d).addClass("imgwrap").appendTo("#object_title");
        if (typeof e.online_thumb_list != "undefined") {
            e.online_thumb_list.addOrientedThumb(120, e.orientation, c);
            e.online_thumb_list.addOrientedThumb(0, e.orientation, d)
        } else {
            e.thumbs.addOrientedThumb(120, e.orientation, c);
            e.thumbs.addOrientedThumb(0, e.orientation, d)
        }
    };
    this._kw60 = function (j) {
        a.resetMenu();
        var f = j;
        jQuery("#object_title").empty();
        jQuery("#lower_zindex").on("click", function () {
            f.action({
                action: "move_backward"
            })
        });
        jQuery("#upper_zindex").on("click", function () {
            f.action({
                action: "move_forward"
            })
        });
        jQuery("#delete").on("click", function () {
            f.action({
                action: "delete"
            })
        });
        jQuery(".opacityslide").append("<div class='slider-wrapper'><div id='opacity_slider'></div></div>");
        jQuery("#opacity_slider").slider({
            range: "min",
            min: 0,
            max: 1,
            step: 0.01,
            value: f.opacity,
            start: function (i, l) {
                f.action({
                    action: "opacity_start",
                    value: l.value
                })
            },
            slide: function (i, l) {
                f.action({
                    action: "opacity",
                    value: l.value
                })
            },
            stop: function (i, l) {
                f.action({
                    action: "opacity_end",
                    value: l.value
                })
            }
        });
        jQuery("#autoenhance").hide();
        jQuery("#from_background").hide();
        jQuery("#to_background").hide();
        jQuery("#rotatephoto").hide();
        if (KWP_CONF.advanced) {
            jQuery("#general_actions #lock_action").remove();
            $lockdiv = jQuery("<div id='lock_action' />");
            $lockdiv.append("<div class='title'>Locks</div>");
            for (var r = 0; r < f.locks.length; r++) {
                (function (i) {
                    var o = f.locks[i];
                    $lock_btn = jQuery("<button data-lockid='" + o.id + "' class='btn'>" + o.name + "</button>'").css("margin", "3px");
                    if (f.isLocked(o.id)) {
                        $lock_btn.addClass("btn-danger active")
                    }
                    $lock_btn.on("click", function () {
                        f.action({
                            action: "set_lock",
                            id: o.id,
                            value: !f.isLocked(o.id)
                        });
                        if (f.isLocked(o.id)) {
                            jQuery("[data-lockid='" + o.id + "']").addClass("btn-danger active")
                        } else {
                            jQuery("[data-lockid='" + o.id + "']").removeClass("btn-danger active")
                        }
                    });
                    $lockdiv.append($lock_btn)
                })(r)
            }
            $sticky_btn = jQuery("<button id='sticky' class='btn'>Always on top</button>'").css("margin", "3px");
            if (f.sticky) {
                $sticky_btn.addClass("btn-danger active")
            }
            $sticky_btn.on("click", function () {
                f.action({
                    action: "set_sticky",
                    value: !f.sticky
                });
                if (f.sticky) {
                    jQuery("#sticky").addClass("btn-danger active")
                } else {
                    jQuery("#sticky").removeClass("btn-danger active")
                }
            });
            $lockdiv.append($sticky_btn);
            $lockdiv.append("<hr />");
            jQuery("#general_actions").prepend($lockdiv)
        }
        if (f.isLocked("lock_delete") && !KWP_CONF.advanced) {
            jQuery("#delete").parent().hide()
        } else {
            jQuery("#delete").parent().show()
        }
        controller.hide_placeholder_options();
        switch (f.type) {
            case "photo":
                jQuery("#object_title").html("<span class='object-title'>" + KWC.translate("Photo") + "</span>");
                if (f.source == null) {
                    controller.show_placeholder_options();
                    return
                } else {
                    var d = document.createElement("div");
                    jQuery(d).addClass("imgwrap").appendTo("#object_title");
                    if (typeof f.source.online_thumb_list != "undefined") {
                        f.source.online_thumb_list.addOrientedThumb(0, f.source.orientation, d, true)
                    } else {
                        f.source.thumbs.addOrientedThumb(0, f.source.orientation, d, true)
                    }
                }
                jQuery("#image_menu").show();
                jQuery(".zoomslide").append("<div class='slider-wrapper'><div id='zoom_slider'></div></div>").show();
                jQuery("#zoom_slider").slider({
                    range: "min",
                    min: 1,
                    max: 2,
                    step: 0.01,
                    value: f._kw77(),
                    start: function (i, l) {
                        f.action({
                            action: "zoom_start",
                            value: l.value
                        })
                    },
                    slide: function (i, l) {
                        f.action({
                            action: "zoom",
                            value: l.value
                        })
                    },
                    stop: function (i, l) {
                        f.action({
                            action: "zoom_end",
                            value: l.value
                        })
                    }
                });
                jQuery("#autoenhance").show();
                f._kw95() ? jQuery("#autoenhance").addClass("active") : "";
                jQuery("#autoenhance").on("click", function (i) {
                    if (jQuery(this).hasClass("active")) {
                        f.action({
                            action: "enhance",
                            value: false
                        });
                        jQuery("#autoenhance").removeClass("active")
                    } else {
                        f.action({
                            action: "enhance",
                            value: true
                        });
                        jQuery("#autoenhance").addClass("active")
                    }
                    i.stopPropagation()
                });
                jQuery("#rotatephoto").show();
                jQuery("#rotatephoto").unbind().on("click", function (i) {
                    f.action({
                        action: "rotate",
                        value: true
                    });
                    i.stopPropagation()
                });
                if (a.lastPhotoIDLoaded != f.source.id) {
                    a.lastPhotoIDLoaded = f.source.id;
                    KWP_utils.buildFilterList();
                    var b = new Image();
                    b.onload = function () {
                        for (var i in Filters) {
                            if (Filters.hasOwnProperty(i)) {
                                KWP.imagesLoaded[Filters[i].id] = {
                                    to_canvas: Filters[i]
                                };
                                jQuery("#" + Filters[i].id).prepend(new _kw40(Filters[i]).create(b, 60))
                            }
                        }
                    };
                    if (typeof f.source.online_thumb_list == "undefined") {
                        b.src = f.source.thumbs.list[0].image.toDataURL("image/jpeg", 0.7)
                    } else {
                        b.crossOrigin = "Anonymous";
                        b.src = f.source.online_thumbs[0].url
                    }
                    var p = {
                        "data-imageid": f.source.id,
                        "data-sourceonline": typeof f.source.online_thumb_list == "undefined" ? "0" : "1"
                    };
                    image_frames.paste_to("frames_frames", p);
                    KWP_utils._kw124()
                }
                jQuery("#frames_zone").on("click", ".frame-image", function (i) {
                    var l = a._kw182();
                    var u = null;
                    var o = jQuery(i.currentTarget).attr("data-id");
                    jQuery.each(l, function (v, w) {
                        if (w.id == o) {
                            u = w;
                            return false
                        }
                    });
                    f.action({
                        action: "set_frame",
                        value: u
                    });
                    a._kw60(j);
                    i.stopPropagation()
                });
                if (KWP_CONF.frame_category_chooser && !jQuery("#frames_frames select")[0]) {
                    $s = jQuery("<select style='display:block; width:100%'>");
                    var e = [KWC.translate("Select a frame category")];
                    for (var s in image_frames.frame_categories) {
                        var c = image_frames.frame_categories[s];
                        if (e.indexOf(c[0]) == -1) {
                            e.push(c[0])
                        }
                    }
                    for (var s in e) {
                        $s.append("<option value='" + e[s] + "' " + (image_frames.forced_category == e[s] ? "selected" : "") + ">" + KWC.translate(e[s]) + "</option>")
                    }
                    $s.on("change", function () {
                        if (jQuery(this).val() == KWC.translate("Select a frame category")) {
                            return
                        }
                        image_frames.forced_category = jQuery(this).val();
                        image_frames.set_list("frame", function () {
                            jQuery("#frames_frames .menu-thumbnail").remove();
                            var i = {
                                "data-imageid": f.source.id,
                                "data-sourceonline": typeof f.source.online_thumb_list == "undefined" ? "0" : "1"
                            };
                            image_frames.paste_to("frames_frames", i);
                            KWP_utils._kw124()
                        })
                    });
                    jQuery("#frames_frames").prepend($s)
                }
                jQuery("#frames_zone").on("click", ".filter-image", function (i) {
                    f.action({
                        action: "add_filter",
                        value: KWP.imagesLoaded[jQuery(this).attr("data-id")].to_canvas
                    });
                    a._kw60(j);
                    i.stopPropagation()
                });
                if (f.background) {
                    jQuery("#from_background").show();
                    jQuery("#to_background").hide()
                } else {
                    jQuery("#from_background").hide();
                    jQuery("#to_background").show()
                }
                jQuery("#from_background").on("click", function (i) {
                    jQuery(this).hide();
                    jQuery("#to_background").show();
                    f.action({
                        action: "background",
                        value: false
                    });
                    i.stopPropagation()
                });
                jQuery("#to_background").on("click", function (i) {
                    jQuery(this).hide();
                    jQuery("#from_background").show();
                    f.action({
                        action: "background",
                        value: true
                    });
                    i.stopPropagation()
                });
                jQuery("#frame_active").empty();
                if (f.frame !== null) {
                    jQuery("#frame_active").show();
                    var t = jQuery("<div class='item clearfix'>");
                    jQuery(t).append(KWP_utils._kw119(document.getElementById(f.frame.id)));
                    jQuery(t).append("<div id='remove_frame'><img src='" + KWP_CONF.static_serv + "img/delete24.png'></div>");
                    jQuery("#frame_active").append(t);
                    jQuery("#remove_frame").on("click", function (i) {
                        f.action({
                            action: "remove_frame",
                            value: ""
                        });
                        a._kw60(j);
                        i.stopPropagation()
                    })
                }
                var g = function () {
                    if (typeof (f.filters[0]) !== "undefined") {
                        jQuery("#filters_menu").show();
                        jQuery.each(f.filters, function (i, u) {
                            var o = jQuery("<div id='item_" + u.id + "' class='item clearfix'>");
                            jQuery(o).html("<div class='clearfix'><div id='applied_" + u.id + "' class='remove-filter'><img src='" + KWP_CONF.static_serv + "img/delete24.png'></div><div class='filter-name clearfix'>" + u.name + "</div></div>");
                            if (typeof (u.presets) !== "undefined") {
                                var l = u.clone();
                                jQuery.each(u.presets, function (v, x) {
                                    l._kw11(x.values);
                                    var w = jQuery("<div id='pst_" + u.id + v + "' class='preset" + (x.selected ? " active" : "") + "'><span class='title'>" + x.name + "</span></div>");
                                    jQuery(w).prepend(new _kw40(l).create(q, KWP_CONF.thumbSize));
                                    jQuery(o).append(w)
                                });
                                jQuery(o).append("<div class='clearfix'>")
                            }
                            if (typeof (u.parameters[0] !== "undefined")) {
                                if (KWP_CONF.advanced && u.id == "snapshot") {
                                    jQuery(o).append("<div id='randomizesnap' class='btn btn-inverse'>Randomize Snapshot</div>")
                                }
                                jQuery.each(u.parameters, function (x, v) {
                                    if (KWP_CONF.advanced || !v.hidden) {
                                        var w = jQuery("<div class='parameter clearfix'>");
                                        jQuery(w).append("<div class='force-left'>" + v.name + "</div>");
                                        jQuery(w).append("<div class='slider-wrapper'><div class='parameter-slider' id='" + u.id + x + "'></div></div>");
                                        jQuery(o).append(w)
                                    }
                                })
                            }
                            jQuery("#filters_menu").append(o);
                            jQuery("#applied_" + u.id).unbind().on("click", function (v) {
                                f.action({
                                    action: "remove_filter",
                                    value: u
                                });
                                a._kw60(j);
                                v.stopPropagation()
                            });
                            if (typeof u.presets !== "undefined") {
                                if (KWP_CONF.advanced && u.id == "snapshot") {
                                    jQuery("#randomizesnap").unbind().on("click", function (v) {
                                        jQuery(".preset").removeClass("active");
                                        f.action({
                                            action: "start_filter_update"
                                        });
                                        var w = u.randomize();
                                        f.action({
                                            action: "filter_update"
                                        });
                                        f.action({
                                            action: "end_filter_update"
                                        });
                                        jQuery.each(w, function (y, x) {
                                            jQuery("#" + u.id + y).slider("option", "value", x)
                                        });
                                        v.stopPropagation()
                                    })
                                }
                                jQuery.each(u.presets, function (v, w) {
                                    jQuery("#pst_" + u.id + v).unbind().on("click", function (x) {
                                        jQuery(".preset").removeClass("active");
                                        jQuery(this).addClass("active");
                                        f.action({
                                            action: "start_filter_update"
                                        });
                                        u._kw11(w.values);
                                        f.action({
                                            action: "filter_update"
                                        });
                                        f.action({
                                            action: "end_filter_update"
                                        });
                                        jQuery.each(w.values, function (z, y) {
                                            jQuery("#" + u.id + z).slider("option", "value", y)
                                        });
                                        x.stopPropagation()
                                    })
                                })
                            }
                            if (typeof (u.parameters[0]) !== "undefined") {
                                jQuery.each(u.parameters, function (w, v) {
                                    jQuery("#" + u.id + w).unbind().slider({
                                        range: "min",
                                        min: 0,
                                        max: 1,
                                        step: 0.01,
                                        value: v.value,
                                        start: function (x, y) {
                                            f.action({
                                                action: "start_filter_update",
                                                value: y.value
                                            })
                                        },
                                        slide: function (x, y) {
                                            f.action({
                                                action: "filter_update",
                                                value: y.value
                                            })
                                        },
                                        stop: function (x, y) {
                                            v.value = y.value;
                                            f.action({
                                                action: "end_filter_update",
                                                value: y.value
                                            })
                                        }
                                    })
                                })
                            }
                        })
                    }
                };
                if (f.source && f.source.thumbnails) {
                    var q = f.source.thumbnails[1].image;
                    g()
                } else {
                    if (f.source) {
                        var q = new Image();
                        q.crossOrigin = "anonymous";
                        q.onload = g;
                        for (var r = 0; r < f.source.online_thumb_list.list.length; r++) {
                            if (f.source.online_thumb_list.list[r].url) {
                                var m = r;
                                break
                            }
                        }
                        q.src = f.source.online_thumb_list.list[m].url
                    }
                }
                break;
            case "clipart":
            case "pattern":
                jQuery("#object_title").html("<span class='object-title'>" + KWC.translate(f.type == "clipart" ? "Clipart" : "Pattern") + "</span>");
                var k = null;
                for (var h = 0; h < f.source.thumblist.list.length - 1; h++) {
                    if (f.source.thumblist.list[h].image != null) {
                        k = f.source.thumblist.list[h].image.src;
                        break
                    }
                }
                if (k) {
                    jQuery("#object_title").append("<div class='imgwrap'><img src='" + k + "' /></div>")
                }
                if (KWP.CORScapable) {
                    jQuery("#hue_slide").append("<div class='slider-wrapper'><div id='hue_slider'></div></div>");
                    jQuery("#hue_slider").slider({
                        range: "min",
                        min: 0,
                        max: 1,
                        step: 0.01,
                        value: f.hue,
                        start: function (i, l) {
                            f.action({
                                action: "hue_start",
                                value: l.value
                            })
                        },
                        slide: function (i, l) {
                            f.action({
                                action: "hue",
                                value: l.value
                            })
                        },
                        stop: function (i, l) {
                            f.action({
                                action: "hue_end",
                                value: l.value
                            })
                        }
                    });
                    jQuery("#saturation_slide").append("<div class='slider-wrapper'><div id='saturation_slider'></div></div>");
                    jQuery("#saturation_slider").slider({
                        range: "min",
                        min: 0,
                        max: 1,
                        step: 0.01,
                        value: f.saturation,
                        start: function (i, l) {
                            f.action({
                                action: "saturation_start",
                                value: l.value
                            })
                        },
                        slide: function (i, l) {
                            f.action({
                                action: "saturation",
                                value: l.value
                            })
                        },
                        stop: function (i, l) {
                            f.action({
                                action: "saturation_end",
                                value: l.value
                            })
                        }
                    });
                    jQuery("#lightness_slide").append("<div class='slider-wrapper'><div id='lightness_slider'></div></div>");
                    jQuery("#lightness_slider").slider({
                        range: "min",
                        min: 0,
                        max: 1,
                        step: 0.01,
                        value: f.lightness,
                        start: function (i, l) {
                            f.action({
                                action: "lightness_start",
                                value: l.value
                            })
                        },
                        slide: function (i, l) {
                            f.action({
                                action: "lightness",
                                value: l.value
                            })
                        },
                        stop: function (i, l) {
                            f.action({
                                action: "lightness_end",
                                value: l.value
                            })
                        }
                    })
                } else {
                    jQuery("#hue_slide, #saturation_slide, #lightness_slide").hide()
                }
                jQuery("#clipart_menu").show();
                break;
            case "text":
                jQuery("#object_title").html("<span class='object-title'>" + KWC.translate("Text") + "</span>");
                jQuery("#size_selector").append("<div style='margin:20px 0;' class='slider-wrapper'><div id='size_slider'></div></div>");
                jQuery("#size_slider").slider({
                    range: "min",
                    min: 0,
                    max: 1,
                    step: 0.01,
                    value: KWP_utils._kw115(f.font_size),
                    slide: function (i, l) {
                        jQuery("#size_chooser").val(KWP_utils._kw114(l.value))
                    },
                    stop: function (i, l) {
                        jQuery("#size_chooser").val(KWP_utils._kw114(l.value));
                        f.action({
                            action: "font_size",
                            value: KWP_utils._kw114(l.value)
                        })
                    }
                });
                jQuery("#size_chooser").val(f.font_size);
                jQuery("#font_chooser").val(f.font_name);
                jQuery("#font_selector .google-font:contains('" + f.font_name + "')").addClass("active");
                jQuery("#current_text_color").css("background-color", f.color);
                jQuery("#align_" + f.align).addClass("active");
                jQuery("#text_zone").val(f.text);
                if (f.frame != null) {
                    jQuery("#remove_frame").show();
                    jQuery(".textblock-image").each(function () {
                        if (jQuery(this).attr("data-id") == f.frame.id) {
                            jQuery(this).addClass("active");
                            return false
                        }
                    })
                }
                KWP_utils.colorPicker.size = (jQuery(window).height() / 25) | 0;
                KWP_utils.colorPicker._kw3(f.color);
                KWP_utils.colorPicker.callback = function (i) {
                    jQuery(".color-picker").attr("data-color", i);
                    rgb = i.match(/^rgb\((\d+),\s*(\d+),\s*(\d+)\)$/);
                    rgbv = "#" + ("0" + parseInt(rgb[1]).toString(16)).slice(-2) + ("0" + parseInt(rgb[2]).toString(16)).slice(-2) + ("0" + parseInt(rgb[3]).toString(16)).slice(-2);
                    jQuery("#color-rgb-input").val(rgbv);
                };
                KWP_utils.colorPicker.update();
                jQuery("#text_color_apply").unbind().on("click", function () {
                    var reg = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/;
                    String.prototype.colorRgb = function () {
                        var sColor = this.toLowerCase();
                        if (sColor && reg.test(sColor)) {
                            if (sColor.length === 4) {
                                var sColorNew = "#";
                                for (var i = 1; i < 4; i += 1) {
                                    sColorNew += sColor.slice(i, i + 1).concat(sColor.slice(i, i + 1));
                                }
                                sColor = sColorNew;
                            }
                            //处理六位的颜色值
                            var sColorChange = [];
                            for (var i = 1; i < 7; i += 2) {
                                sColorChange.push(parseInt("0x" + sColor.slice(i, i + 2)));
                            }
                            return "RGB(" + sColorChange.join(",") + ")";
                        } else {
                            return sColor;
                        }
                    };
                    var i = jQuery("#color-rgb-input").val();
                    i = i.colorRgb(i);
                    jQuery("#current_text_color").css("background-color", i);
                    f.action({
                        action: "color",
                        value: i
                    });
                    jQuery("#colorpicker_modal").modal("hide")
                });
                jQuery(".color-chooser").unbind().on("click", function (i) {
                    jQuery(".single-page").hide();
                    jQuery(".multi-pages").hide();
                    jQuery(".text-color").show();
                    jQuery("#colorpicker_modal").css({
                        height: 600,
                        width: 900,
                        marginLeft: -480,
                        top: (jQuery(window).height() - 600) / 2,
                        textAlign: "center"
                    });
                    jQuery("#colorpicker_modal .modal-body").css("max-height", 600);
                    jQuery("#colorpicker_modal").modal();
                    i.stopPropagation()
                });
                jQuery("#font_selector .google-font").unbind().on("click", function (i) {

                    if (jQuery(this).hasClass("active")) {
                        jQuery("#font_selector").slideUp();
                        jQuery(".object-menu").animate({
                            scrollTop: 0
                        }, "normal");
                        return
                    }
                    jQuery("#font_selector .google-font").removeClass("active");
                    jQuery(this).addClass("active");
                    f.action({
                        action: "font_name",
                        value: jQuery(this).attr("data-font")
                    });
                    jQuery("#font_chooser").val(jQuery(this).text());
                    i.stopPropagation()
                });
                jQuery("#text_zone").unbind().on({
                    click: function (i) {
                        i.stopPropagation()
                    },
                    keyup: function () {
                        f.action({
                            action: "text",
                            value: jQuery(this).val()
                        })
                    },
                    focus: keypress.stop_listening,
                    blur: keypress.listen
                });
                jQuery(".text-alignment").unbind().on("click", function (i) {
                    jQuery(".text-alignment").removeClass("active");
                    jQuery(this).addClass("active");
                    f.action({
                        action: "align",
                        value: i.currentTarget.id.split("_")[1]
                    });
                    i.stopPropagation()
                });
                jQuery("#text_menu").on("click", ".textblock-image", function (i) {
                    jQuery(".textblock-image").removeClass("active");
                    jQuery(this).addClass("active");
                    var l = a._kw183();
                    var o = null;
                    jQuery.each(l, function (u, v) {
                        if (v.id == jQuery(i.currentTarget).attr("data-id")) {
                            o = v;
                            return false
                        }
                    });
                    jQuery("#remove_frame").show();
                    f.action({
                        action: "set_frame",
                        value: o
                    });
                    i.stopPropagation()
                });
                jQuery("#text_menu").on("click", ".textblock-image.active", function (i) {
                    jQuery(".textblock-image").removeClass("active");
                    jQuery("#remove_frame").hide();
                    f.action({
                        action: "remove_frame",
                        value: ""
                    });
                    i.stopPropagation()
                });
                jQuery("#remove_frame").on("click", function (i) {
                    jQuery(".textblock-image").removeClass("active");
                    jQuery(this).hide();
                    f.action({
                        action: "remove_frame",
                        value: ""
                    });
                    i.stopPropagation()
                });
                if (f.isLocked("lock_text_contents") && !KWP_CONF.advanced) {
                    jQuery("#text_content").hide()
                } else {
                    jQuery("#text_content").show()
                } if (f.isLocked("lock_text_style") && !KWP_CONF.advanced) {
                    jQuery("#text_style").hide()
                } else {
                    jQuery("#text_style").show()
                } if (KWP_CONF.advanced) {
                    jQuery("#text_style").find("#addfont").remove();
                    $addfontbtn = jQuery("<button class='btn'>Add Google Font</button>").on("click", function () {
                        jQuery("#font_selector").slideUp();
                        var i = prompt("Please insert a Google Font name");
                        i = i.replace("+", " ");
                        KWP_utils.addFontToList(i);
                        KWP_utils.buildFontList();
                        jQuery("#font_selector .google-font").removeClass("active");
                        f.action({
                            action: "font_name",
                            value: i
                        });
                        jQuery("#font_chooser").val(i)
                    });
                    jQuery("#text_style").prepend("<div class='text-center' id='addfont'>");
                    jQuery("#addfont").html($addfontbtn)
                }
                jQuery("#text_menu").show();
                setTimeout(function () {
                    jQuery("#text_zone").effect("highlight", {
                        color: "#99C316"
                    }).focus()
                }, 250);
                KWP_utils._kw124();
                break;
            default:
                break
        }
        controller.show_menu()
    };
    this.resetMenu = function () {
        jQuery("#filters_menu").html("");
        jQuery("#image_menu, #filters_menu, #text_menu, #clipart_menu").hide();
        jQuery("#autoenhance").unbind().removeClass("active");
        jQuery("#font_selector .google-font").removeClass("active");
        jQuery(".textblock-image").removeClass("active");
        jQuery(".text-alignment").removeClass("active");
        jQuery("#font_selector").hide();
        jQuery("#size_selector").hide();
        jQuery(".zoomslide").hide();
        jQuery("#remove_frame").hide();
        jQuery("#zoom_slider").unbind();
        jQuery("#opacity_slider").unbind();
        jQuery("#hue_slider").unbind();
        jQuery("#saturation_slider").unbind();
        jQuery("#lightness_slider").unbind();
        jQuery("#size_slider").unbind();
        jQuery(".slider-wrapper").remove();
        jQuery("#lower_zindex").unbind();
        jQuery("#upper_zindex").unbind();
        jQuery("#delete").unbind();
        jQuery("#remove_frame").unbind();
        jQuery("#to_background").unbind();
        jQuery("#from_background").unbind();
        jQuery("#text_menu").unbind();
        jQuery("#frames_zone").unbind()
    };
    this._kw75 = function () {
        a.resetMenu();
        controller.hide_menu()
    };
    this._kw174 = function () {
        jQuery.each(KWP.imagesLoaded, function (b, c) {
            if (typeof (c.to_canvas) != "undefined" && typeof (c.to_canvas.thumblist) != "undefined") {
                c.to_canvas.thumblist.unload()
            }
        })
    };
    var a = this
};
var KWP_drivers = {
    FromS3: function () {
        this.ressource_url;
        this.hash_list = [];
        this.display_list = [];
        this.max_themes_display = 5000;
        this.image_cat = {};
        this.frame_categories = {};
        this.search_tags = [];
        this.search_tags_layouts = [];
        this.page = 1;
        this.paste_to = "";
        this.themes_type = creation.product.units[0].width > creation.product.units[0].height ? "Default" : "Vertical";
        this.tplist = {};
        this.lylist = {};
        this.layouts_enabled = false;
        this.dom_id = "";
        this.forced_category;
        this.domainhash = jQuery.MD5(document.domain).substr(8, 12);
        this.set_search = function (c) {
            a.dom_id = c;
            jQuery("#" + c).removeClass("hide");
            var b = [];
            jQuery.each(a.search_tags, function (e, d) {
                b.push({
                    id: d,
                    text: d
                })
            });
            jQuery("#" + c).select2({
                data: b,
                width: "resolve",
                allowClear: true
            }).on("change", function (d) {
                a.page = 1;
                if (typeof d.added == "undefined") {
                    a.display_list = a.hash_list
                } else {
                    a.display_list = [];
                    if (d.added) {
                        jQuery.each(a.hash_list, function (e, f) {
                            if (jQuery.inArray(d.added.text, a.image_cat[f]) != -1) {
                                a.display_list.push(f)
                            }
                        })
                    }
                }
                a.set_thumbpage()
            })
        };
        this.set_list = function (b, c) {
            jQuery.getJSON(a.ressource_url + "?" + a.domainhash, function (e) {
                jQuery.each(e, function (l, h) {
                    var o = jQuery.MD5(jQuery(this).attr("id"));
                    var i = false;
                    a.hash_list.push(o);
                    jQuery.each(KWP.imagesLoaded, function (q, r) {
                        if (q === o) {
                            i = true;
                            return false
                        }
                    });
                    if (!i) {
                        a.display_list.push(o);
                        var m = [],
                            p;
                        KWP.imagesLoaded[o] = {
                            to_canvas: {
                                id: jQuery(this).attr("id"),
                                type: b,
                                width: jQuery(this).attr("width") | 0,
                                height: jQuery(this).attr("height") | 0,
                                attr: {}
                            }
                        };
                        if (b == "pattern") {
                            KWP.imagesLoaded[o].to_canvas.horizontal_stretch = jQuery(this).attr("horizontal_stretch") || false;
                            KWP.imagesLoaded[o].to_canvas.vertical_stretch = jQuery(this).attr("vertical_stretch") || false
                        }
                        for (var k = KWP_CONF.thumbSize; k <= 1000; k *= 2) {
                            jQuery.each(e[l].urls, function (q, s) {
                                var r = e[l].urls[q].url;
                                if (e[l].urls[q].size == k) {
                                    if (b === "frame" || b === "textframe") {
                                        p = k;
                                        r = r.replace(new RegExp(k), p) + "?" + a.domainhash
                                    } else {
                                        r = r + "?" + a.domainhash
                                    }
                                    m.push(new _kw111(k, r.replace("http:", "")));
                                    return false
                                }
                            })
                        }
                        KWP.imagesLoaded[o].to_canvas.thumblist = new _kw94(m);
                        if (typeof e[l].categories !== "undefined") {
                            var f = new RegExp("[ ,]+", "g");
                            a.frame_categories[o] = e[l].categories.split(f)
                        }
                        if (typeof e[l].attr !== "undefined") {
                            KWP.imagesLoaded[o].to_canvas.attr = e[l].attr
                        }
                        var g = [];
                        if (typeof e[l].tags !== "undefined") {
                            var f = new RegExp("[ ,]+", "g");
                            var j = e[l].tags.split(f);
                            jQuery.each(j, function (r, q) {
                                if (q.charAt(0) === "$") {
                                    var s = q.split("$")[1];
                                    switch (s.split(":")[0]) {
                                        case "top":
                                        case "bottom":
                                        case "left":
                                        case "right":
                                            var t = parseFloat(s.split(":")[1]);
                                            break;
                                        case "type":
                                            if (b === "frame" || b === "textframe") {
                                                KWP.imagesLoaded[o].to_canvas.height /= s.split(":")[1].length / 2
                                            }
                                        default:
                                            var t = s.split(":")[1];
                                            break
                                    }
                                    KWP.imagesLoaded[o].to_canvas.attr[s.split(":")[0]] = t
                                } else {
                                    g.push(KWC.translate(q, true))
                                }
                            })
                        }
                        a.image_cat[o] = g;
                        jQuery.each(g, function (q, r) {
                            if (r != "") {
                                if (jQuery.inArray(r, a.search_tags) == -1) {
                                    a.search_tags.push(r)
                                }
                            }
                        })
                    }
                });
                //a.search_tags = a.search_tags.sort();
                if (a.forced_category) {
                    a.display_list = [];
                    if (a.frame_categories) {
                        for (var d in a.frame_categories) {
                            if (a.frame_categories.hasOwnProperty(d)) {
                                if (jQuery.inArray(a.forced_category, a.frame_categories[d]) > -1) {
                                    a.display_list.push(d)
                                }
                            }
                        }
                    }
                }
                if (typeof c == "function") {
                    c()
                }
            })
        };
        this.set_option = function (b) {
            jQuery("#" + a.dom_id).select2("val", b, true)
        };
        this.set_thumbpage = function () {
            var f = 78;
            if (jQuery("#" + a.paste_to).find(".menu-thumbnail:visible").length > 0) {
                f = jQuery("#" + a.paste_to).find(".menu-thumbnail:visible:first").outerWidth(true)
            } else {
                if (jQuery(".sidecontent").find(".menu-thumbnail").length > 0) {
                    f = jQuery(".sidecontent").find(".menu-thumbnail:first").outerWidth(true)
                }
            }
            var c = Math.floor(jQuery("#" + a.paste_to).width() / f);
            var b = Math.floor(jQuery("#" + a.paste_to).height() / 78);
            if (c * b != 0) {
                KWP.thumbsLoad = c * b
            }
            jQuery("#" + a.paste_to).parent().find(".prev").css("visibility", "visible");
            jQuery("#" + a.paste_to).parent().find(".next").css("visibility", "visible");
            if (this.page == 1) {
                jQuery("#" + a.paste_to).parent().find(".prev").css("visibility", "hidden")
            }
            var e = (this.page - 1) * KWP.thumbsLoad;
            jQuery("#" + a.paste_to).empty();
            var d = e;
            while (d < e + KWP.thumbsLoad) {
                if (typeof a.display_list[d] != "undefined") {
                    jQuery("#" + a.paste_to).append("<div data-loaded='0' data-id='" + KWP.imagesLoaded[a.display_list[d]].to_canvas.id + "' id='" + a.display_list[d] + "' class='menu-thumbnail'><img src='" + KWP_CONF.static_serv + "img/image_loader.gif' /></div>");
                    d++
                } else {
                    jQuery("#" + a.paste_to).parent().find(".next").css("visibility", "hidden");
                    break
                }
            }
            jQuery("#" + a.paste_to).css("overflow", "hidden").find(".menu-thumbnail").height((jQuery("#" + a.paste_to).height() / b) - 12);
            KWP_utils._kw124();
            jQuery(".search-container .select2-container").css("width", "100%")
        };
        this.set_template_search = function () {
            var c = [],
                b = [];
            jQuery.each(a.search_tags, function (e, d) {
                c.push({
                    id: e,
                    text: d
                })
            });
            jQuery.each(a.search_tags_layouts, function (e, d) {
                b.push({
                    id: e,
                    text: d
                })
            });
            if (b.length == 0) {
                jQuery("#template_search, #layout_search").select2({
                    data: c,
                    width: "resolve",
                    allowClear: true
                }).on("change", function (d) {
                    if (typeof d.added == "undefined") {
                        a.display_list = a.hash_list
                    } else {
                        a.display_list = [];
                        jQuery.each(a.hash_list, function (e, h) {
                            var f = new RegExp("[ ,]+", "g");
                            var g = a.image_cat[h].split(f);
                            if (jQuery.inArray(d.added.text, g) != -1) {
                                a.display_list.push(h)
                            }
                        })
                    }
                    a.page = 1;
                    a.display_templates();
                    a.display_layouts();
                    jQuery("#template_search, #layout_search").select2("val", d.val)
                })
            } else {
                jQuery("#template_search").select2({
                    data: c,
                    width: "resolve",
                    allowClear: true
                }).on("change", function (d) {
                    if (typeof d.added == "undefined") {
                        a.display_list = a.hash_list
                    } else {
                        a.display_list = [];
                        jQuery.each(a.hash_list, function (e, h) {
                            var f = new RegExp("[ ,]+", "g");
                            var g = a.image_cat[h].split(f);
                            if (jQuery.inArray(d.added.text, g) != -1) {
                                a.display_list.push(h)
                            }
                        })
                    }
                    a.page = 1;
                    a.display_templates();
                    a.display_layouts();
                    jQuery("#template_search").select2("val", d.val)
                });
                jQuery("#layout_search").select2({
                    data: b,
                    width: "resolve",
                    allowClear: true
                }).on("change", function (d) {
                    if (typeof d.added == "undefined") {
                        a.display_list = a.hash_list
                    } else {
                        a.display_list = [];
                        jQuery.each(a.hash_list, function (e, h) {
                            var f = new RegExp("[ ,]+", "g");
                            var g = a.image_cat[h].split(f);
                            if (jQuery.inArray(d.added.text, g) != -1) {
                                a.display_list.push(h)
                            }
                        })
                    }
                    a.page = 1;
                    a.display_templates();
                    a.display_layouts();
                    jQuery("#layout_search").select2("val", d.val)
                })
            } if (KWP_CONF.selectedCategory) {
                jQuery.each(c, function (e, d) {
                    if (d.text == KWP_CONF.selectedCategory) {
                        jQuery("#template_search, #layout_search").select2("val", d.id)
                    }
                })
            }
        };
        this.set_space = function (e, b) {
            var d = Math.floor(e / 142);
            var c = Math.floor(b / 142);
            a.max_themes_display = d * c
        };
        this.display_layouts = function () {
            if (!a.layouts_enabled) {
                return
            }
            var b = Object.keys(a.lylist).length > 0 ? a.lylist : a.tplist;
            var d = function () {
                jQuery("#layout_zone").empty();
                var e = a.max_themes_display;
                jQuery("#layouts_block").find(".prev").css("visibility", "visible");
                jQuery("#layouts_block").find(".next").css("visibility", "visible");
                if (a.page == 1) {
                    jQuery("#layouts_block").find(".prev").css("visibility", "hidden")
                }
                var g = (a.page - 1) * a.max_themes_display;
                var f = 0;
                jQuery.each(a.display_list, function (h, i) {
                    if (b[i]) {
                        jQuery.each(b[i].layouts, function (k, j) {
                            if (a.max_themes_display >= 5000 || (creation._kw161().properties.is_cover && j.is_cover) || (!creation._kw161().properties.is_cover && !j.is_cover)) {
                                if (f++ >= g) {
                                    j.id = KWP_utils.randomString(12);
                                    j.addUpdateListener(function () {
                                        jQuery("#layout_zone").find("div[data-lytid=" + j.id + "]").html(j._kw172(240))
                                    });
                                    jQuery("#layout_zone").append("<div class='layout" + (j.is_cover ? " cover" : "") + "' data-lytid=" + j.id + "></div>");
                                    jQuery("#layout_zone").find("div:last-child").html(j._kw172(240));
                                    if (--e <= 0) {
                                        return false
                                    }
                                }
                            }
                        })
                    }
                    if (e <= 0) {
                        return false
                    }
                });
                if (a.max_themes_display >= 5000) {
                    jQuery("#layout_zone .layout").hide();
                    if (!creation._kw161().properties.is_cover) {
                        jQuery("#layout_zone .layout").not(".cover").show()
                    } else {
                        jQuery("#layout_zone .layout.cover").show()
                    }
                }
            };
            if (!a.layouts_extracted) {
                a.layouts_extracted = true;
                jQuery("#layout_zone").html(KWC.translate("Please wait while we are loading your layouts") + "<br />");
                jQuery("#layout_zone").append("<img src='" + KWP_CONF.static_serv + "img/image_loader.gif' />");
                var c = function () {
                    var e = true;
                    jQuery.each(b, function (f, g) {
                        if (!g.extracted) {
                            e = false;
                            return false
                        }
                    });
                    return e
                };
                jQuery.each(b, function (e, f) {
                    jQuery.get(f.url, function (h) {
                        var g = new _kw191(h, "json");
                        var i = [];
                        jQuery.each(g.cover_layouts, function (j, k) {
                            k.is_cover = true;
                            i.push(k)
                        });
                        jQuery.each(g.page_layouts, function (j, k) {
                            k.is_cover = false;
                            i.push(k)
                        });
                        f.extracted = true;
                        f.layouts = i;
                        g = null;
                        if (c()) {
                            d()
                        }
                    })
                })
            } else {
                d()
            }
        };
        this.display_templates = function () {
            jQuery("#theme_zone").empty();
            var b = a.max_themes_display;
            jQuery("#themes_block").find(".prev").css("visibility", "visible");
            jQuery("#themes_block").find(".next").css("visibility", "visible");
            if (a.page <= 1) {
                jQuery("#themes_block").find(".prev").css("visibility", "hidden")
            }
            var d = (a.page - 1) * a.max_themes_display;
            var c = 0;
            jQuery.each(a.display_list, function (e, f) {
                if (a.tplist[f]) {
                    if (c++ >= d) {
                        jQuery("#theme_zone").append("<div class='theme' data-descriptor='" + a.tplist[f].url.replace("http:", "") + "' data-hash='" + f + "'><img src='" + a.tplist[f].thumbnail + "' /></div>");
                        if (--b <= 0) {
                            return false
                        }
                    }
                }
            });
            if (c >= a.display_list.length) {
                jQuery("#themes_block").find(".next").css("visibility", "hidden")
            }
        };
        this.set_template_list = function (b) {
            jQuery("#template_search, #layout_search").parent().removeClass("hide");
            jQuery.get(a.ressource_url + "?" + a.domainhash, function (c) {
                jQuery.each(c, function (e, k) {
                    if (k.type == a.themes_type || k.type == a.themes_type + "-layout") {
                        var h = k.id;
                        a.hash_list.push(h);
                        var f = k.thumbnail.replace("http:", "");
                        var j = k.category;
                        var i = new RegExp("[ ,]+", "g");
                        var g = j.split(i);
                        if (g[0] == "") {
                            g = [KWC.translate("N-A")]
                        }
                        var d = [];
                        jQuery.each(g, function (m, l) {
                            d.push(KWC.translate(l, true));
                            if (jQuery.inArray(KWC.translate(l, true), a.search_tags) == -1) {
                                if (k.type.match(/\-layout$/) != null) {
                                    a.search_tags_layouts.push(KWC.translate(l, true))
                                } else {
                                    a.search_tags.push(KWC.translate(l, true))
                                }
                            }
                            if (KWP_CONF.selectedCategory && KWP_CONF.selectedCategory == l) {
                                a.display_list.push(h)
                            }
                        });
                        a.image_cat[h] = d.join(",");
                        if (!KWP_CONF.selectedCategory) {
                            a.display_list.push(h)
                        }
                        if (k.type.match(/\-layout$/) != null) {
                            a.lylist[h] = {
                                url: k.descriptor.replace("http:", "") + "?" + a.domainhash,
                                thumbnail: f,
                                id: k.id
                            }
                        } else {
                            a.tplist[h] = {
                                url: k.descriptor.replace("http:", "") + "?" + a.domainhash,
                                thumbnail: f,
                                id: k.id
                            }
                        }
                    }
                });
                //a.search_tags = a.search_tags.sort();
                if (typeof b == "function") {
                    b()
                }
                if (KWP.selectedMenu == "themes_block") {
                    a.display_templates()
                }
                jQuery(".search-container .select2-container").css("width", "100%")
            })
        };
        this.set_layouts = function () {
            a.layouts_enabled = true;
            jQuery(".cficon[data-related=layouts_block]").show();
            if (jQuery("#themes_choices")[0]) {
                jQuery("#themes_choices").show();
                jQuery("#themes_block .search-container").css("margin-top", "30px");
                jQuery(".theme-zone span").html(KWC.translate("Themes & Layouts"))
            }
        };
        this.paste_to = function (e, b) {
            var b = b || {};
            var d = [];
            for (var c in b) {
                d.push(c + "='" + b[c] + "'")
            }
            jQuery.each(a.display_list, function (f, g) {
                jQuery("#" + e).append("<div " + d.join(" ") + " data-loaded='0' data-id='" + KWP.imagesLoaded[g].to_canvas.id + "' id='" + g + "' class='menu-thumbnail'><img src='" + KWP_CONF.static_serv + "img/image_loader.gif' /></div>")
            })
        };
        var a = this
    },
    FromKW: function () {
        this.ressource_url;
        this.base_url;
        this.hash_list = [];
        this.display_list = [];
        this.image_cat = {};
        this.search_tags = [];
        this.max_themes_display = 10;
        this.page = 1;
        this.paste_to = "";
        this.lang = "fr";
        this.tplist = {};
        this.lylist = {};
        this.layouts_enabled = false;
        this.domainhash = jQuery.MD5(document.domain).substr(8, 12);
        this.set_search = function (c) {
            jQuery("#" + c).removeClass("hide");
            var b = [];
            jQuery.each(a.search_tags, function (e, d) {
                b.push({
                    id: e,
                    text: d
                })
            });
            jQuery("#" + c).select2({
                data: b,
                width: "resolve",
                allowClear: true
            }).on("change", function (d) {
                a.page = 1;
                if (typeof d.added == "undefined") {
                    a.display_list = a.hash_list
                } else {
                    a.display_list = [];
                    jQuery.each(a.hash_list, function (e, f) {
                        if (a.image_cat[f] == d.added.text) {
                            if (jQuery.inArray(f, a.display_list) == -1) {
                                a.display_list.push(f)
                            }
                        }
                    })
                }
                a.set_thumbpage()
            });
            if (KWP_CONF.selectedCategory) {
                jQuery.each(b, function (e, d) {
                    if (d.text == KWP_CONF.selectedCategory) {
                        jQuery("#" + c).select2("val", d.id)
                    }
                });
                jQuery.each(a.hash_list, function (d, e) {
                    if (a.image_cat[e] == KWP_CONF.selectedCategory) {
                        if (jQuery.inArray(e, a.display_list) == -1) {
                            a.display_list.push(e)
                        }
                    }
                })
            }
        };
        this.set_space = function (e, b) {
            var d = Math.floor(e / 142);
            var c = Math.floor(b / 142);
            a.max_themes_display = d * c
        };
        this.set_list = function (b, c) {
            jQuery.get(a.ressource_url + "?" + a.domainhash, function (e) {
                var d = (b == "clipart" ? "object" : "page" + b);
                jQuery(e).find(d).each(function () {
                    var l = jQuery.MD5(b + "_" + jQuery(this).attr("id"));
                    var k = false;
                    if (jQuery.inArray(l, a.hash_list) !== -1) {
                        k = true
                    } else {
                        a.hash_list.push(l)
                    } if (!k) {
                        var g = [],
                            i;
                        KWP.imagesLoaded[l] = {
                            to_canvas: {
                                id: jQuery(this).attr("id"),
                                type: b,
                                width: jQuery(this).attr("width") | 0,
                                height: jQuery(this).attr("height") | 0,
                                attr: {}
                            }
                        };
                        if (typeof jQuery(this).find("urls").attr("lang") == "undefined") {
                            g.push(new _kw111(256, a.base_url + jQuery(this).find("thumbnail:first").text() + "?" + a.domainhash))
                        } else {
                            g.push(new _kw111(256, a.base_url + jQuery(this).find("urls[lang=" + a.lang + "]").find("thumbnail:first").text() + "?" + a.domainhash))
                        } if (typeof jQuery(this).find("urls").attr("lang") == "undefined") {
                            g.push(new _kw111(768, a.base_url + jQuery(this).find("preview:first").text() + "?" + a.domainhash))
                        } else {
                            g.push(new _kw111(768, a.base_url + jQuery(this).find("urls[lang=" + a.lang + "]").find("preview:first").text() + "?" + a.domainhash))
                        } if (typeof jQuery(this).find("urls").attr("lang") == "undefined") {
                            var m = a.base_url + jQuery(this).find("fullsize:first").text() + "?" + a.domainhash
                        } else {
                            var m = a.base_url + jQuery(this).find("urls[lang=" + a.lang + "]").find("fullsize:first").text() + "?" + a.domainhash
                        }
                        KWP.imagesLoaded[l].to_canvas.original = m;
                        KWP.imagesLoaded[l].to_canvas.thumblist = new _kw94(g);
                        if (jQuery(this).find("categories").length > 1) {
                            var j = jQuery(this).find("categories[lang=" + a.lang + "]").text()
                        } else {
                            var j = jQuery(this).find("categories").text()
                        }
                        var f = [];
                        var h = j.split(",");
                        jQuery.each(h, function (p, o) {
                            f.push(KWC.translate(o, true));
                            if (jQuery.inArray(KWC.translate(o, true), a.search_tags) == -1) {
                                a.search_tags.push(KWC.translate(o, true))
                            }
                            if (KWP_CONF.selectedCategory && KWP_CONF.selectedCategory == o) {
                                if (jQuery.inArray(l, a.display_list) == -1) {
                                    a.display_list.push(l)
                                }
                            }
                        });
                        a.image_cat[l] = f.join(",");
                        if (!KWP_CONF.selectedCategory) {
                            if (jQuery.inArray(l, a.display_list) == -1) {
                                a.display_list.push(l)
                            }
                        }
                    }
                });
                if (typeof c == "function") {
                    c()
                }
            })
        };
        this.set_frame_list = function (b, c) {
            jQuery.get(a.ressource_url + "?" + a.domainhash, function (e) {
                switch (b) {
                    case "frame":
                        var f = "photoframe";
                        var d = "photo";
                        break;
                    case "textframe":
                        var f = "textframe";
                        var d = "text";
                        break;
                    default:
                        console.error("unknown frame type");
                        break
                }
                jQuery(e).find(f).each(function () {
                    var k = jQuery.MD5(jQuery(this).attr("id"));
                    a.hash_list.push(k);
                    var j = false;
                    jQuery.each(KWP.imagesLoaded, function (l, m) {
                        if (l === k) {
                            j = true;
                            return false
                        }
                    });
                    if (!j) {
                        a.display_list.push(k);
                        var g = [],
                            h;
                        KWP.imagesLoaded[k] = {
                            to_canvas: {
                                id: jQuery(this).attr("id"),
                                type: b,
                                width: jQuery(this).attr("width") | 0,
                                height: jQuery(this).attr("height") | 0,
                                attr: {}
                            }
                        };
                        if (jQuery(this).find("foreground")[0]) {
                            var i = jQuery(this).find("foreground");
                            KWP.imagesLoaded[k].to_canvas.attr.type = "fg"
                        }
                        if (jQuery(this).find("background")[0]) {
                            var i = jQuery(this).find("background");
                            KWP.imagesLoaded[k].to_canvas.attr.type = "bg"
                        }
                        g.push(new _kw111(256, a.base_url + i.find("thumbnail:first").text() + "?" + a.domainhash));
                        g.push(new _kw111(768, a.base_url + i.find("preview:first").text() + "?" + a.domainhash));
                        KWP.imagesLoaded[k].to_canvas.thumblist = new _kw94(g);
                        KWP.imagesLoaded[k].to_canvas.original = a.base_url + i.find("fullsize").text();
                        KWP.imagesLoaded[k].to_canvas.attr.fit = "scale";
                        KWP.imagesLoaded[k].to_canvas.attr.left = jQuery(this).find(d).attr("x") * 100;
                        KWP.imagesLoaded[k].to_canvas.attr.top = jQuery(this).find(d).attr("y") * 100;
                        KWP.imagesLoaded[k].to_canvas.attr.right = (1 - jQuery(this).find(d).attr("x") - jQuery(this).find(d).attr("width")) * 100;
                        KWP.imagesLoaded[k].to_canvas.attr.bottom = (1 - jQuery(this).find(d).attr("y") - jQuery(this).find(d).attr("height")) * 100
                    }
                });
                if (typeof c == "function") {
                    c()
                }
            })
        };
        this.set_thumbpage = function () {
            var d = Math.floor(jQuery("#" + a.paste_to).width() / (65 + 8));
            var c = Math.floor(jQuery("#" + a.paste_to).height() / (65 + 8));
            if (d * c != 0) {
                KWP.thumbsLoad = d * c
            }
            jQuery("#" + a.paste_to).parent().find(".prev").css("visibility", "visible");
            jQuery("#" + a.paste_to).parent().find(".next").css("visibility", "visible");
            if (this.page == 1) {
                jQuery("#" + a.paste_to).parent().find(".prev").css("visibility", "hidden")
            }
            var i = (this.page - 1) * KWP.thumbsLoad;
            jQuery("#" + a.paste_to).empty();
            var h = i;
            while (h < i + KWP.thumbsLoad) {
                if (typeof a.display_list[h] != "undefined") {
                    jQuery("#" + a.paste_to).append("<div data-loaded='0' data-id='" + KWP.imagesLoaded[a.display_list[h]].to_canvas.id + "' id='" + a.display_list[h] + "' class='menu-thumbnail'><img src='" + KWP_CONF.static_serv + "img/image_loader.gif' /></div>");
                    h++
                } else {
                    jQuery("#" + a.paste_to).parent().find(".next").css("visibility", "hidden");
                    break
                }
            }
            KWP_utils._kw124();
            var b = jQuery("#" + a.paste_to).outerWidth();
            var e = Math.floor(b / (65 + 8));
            var f = b - (e * 65);
            var g = Math.floor(f / e / 2);
            jQuery(".search-container .select2-container").css("width", "100%")
        };
        this.set_template_search = function () {
            var c = [];
            jQuery.each(a.search_tags, function (e, d) {
                c.push({
                    id: e,
                    text: d
                })
            });
            jQuery("#template_search, #layout_search").select2({
                data: c,
                width: "resolve",
                allowClear: true
            }).on("change", function (d) {
                if (typeof d.added == "undefined") {
                    a.display_list = a.hash_list
                } else {
                    a.display_list = [];
                    jQuery.each(a.hash_list, function (e, f) {
                        if (a.image_cat[f] == d.added.text) {
                            a.display_list.push(f)
                        }
                    })
                }
                a.display_templates();
                a.display_layouts();
                jQuery("#template_search, #layout_search").select2("val", d.val)
            });
            if (KWP_CONF.selectedCategory) {
                a.display_list = [];
                var b = false;
                jQuery.each(c, function (e, d) {
                    if (d.text == KWP_CONF.selectedCategory) {
                        b = true;
                        jQuery("#template_search, #layout_search").select2("val", d.id)
                    }
                });
                jQuery.each(a.hash_list, function (d, e) {
                    if (!b || a.image_cat[e] == KWP_CONF.selectedCategory) {
                        a.display_list.push(e)
                    }
                })
            }
        };
        this.display_layouts = function () {
            jQuery("#layout_zone").empty();
            jQuery.each(a.display_list, function (b, c) {
                if (a.tplist[c]) {
                    jQuery.each(a.tplist[c].layouts, function (e, d) {
                        d.id = KWP_utils.randomString(12);
                        d.addUpdateListener(function () {
                            jQuery("#layout_zone").find("div[data-lytid=" + d.id + "]").html(d._kw172(150))
                        });
                        jQuery("#layout_zone").append("<div class='layout" + (d.is_cover ? " cover" : "") + "' data-lytid=" + d.id + "></div>");
                        jQuery("#layout_zone").find("div:last-child").html(d._kw172(150))
                    })
                }
            });
            jQuery("#layout_zone .layout").hide();
            if (!creation._kw161().properties.is_cover) {
                jQuery("#layout_zone .layout").not(".cover").show()
            } else {
                jQuery("#layout_zone .layout.cover").show()
            }
        };
        this.display_templates = function () {
            jQuery("#theme_zone").empty();
            jQuery.each(a.display_list, function (b, c) {
                if (a.tplist[c]) {
                    jQuery("#theme_zone").append("<div class='kwtheme' data-hash='" + c + "'><img src='" + a.tplist[c].thumbnail + "' /></div>")
                }
            });
            controller.set_sizes()
        };
        this.set_template_list = function (b) {
            jQuery("#template_search, #layout_search").parent().removeClass("hide");
            console.info(a.ressource_url + "?" + a.domainhash);
            jQuery.get(a.ressource_url + "?" + a.domainhash, function (c) {
                jQuery(c).find("template").each(function () {
                    var g = jQuery.MD5(jQuery(this).attr("id"));
                    a.hash_list.push(g);
                    if (jQuery(this).attr("id").indexOf("empty") !== -1) {
                        return
                    }
                    if (typeof jQuery(this).find("thumbnail2")[0] != "undefined") {
                        console.info(jQuery(this).find("thumbnail2"));
                        if (typeof jQuery(this).find("thumbnail2").attr("lang") == "undefined") {
                            var e = a.base_url + jQuery(this).find("thumbnail2:first").text()
                        } else {
                            var e = a.base_url + jQuery(this).find("thumbnail2[lang=" + a.lang + "]").first().text();
                            if (!e) {
                                e = a.base_url + jQuery(this).find("thumbnail2").first().text()
                            }
                        }
                        console.info(e)
                    } else {
                        if (typeof jQuery(this).find("thumbnail").attr("lang") == "undefined") {
                            var e = a.base_url + jQuery(this).find("thumbnail:first").text()
                        } else {
                            var e = a.base_url + jQuery(this).find("thumbnail[lang=" + a.lang + "]").first().text();
                            if (!e) {
                                e = a.base_url + jQuery(this).find("thumbnail").first().text()
                            }
                        }
                    } if (jQuery(this).find("categories").length > 1) {
                        var h = jQuery(this).find("categories[lang=" + a.lang + "]").text()
                    } else {
                        var h = jQuery(this).find("categories").text()
                    }
                    var f = h.split(",");
                    var d = [];
                    var i = true;
                    jQuery.each(f, function (k, j) {
                        d.push(KWC.translate(j, true));
                        if (jQuery.inArray(KWC.translate(j, true), a.search_tags) == -1) {
                            a.search_tags.push(KWC.translate(j, true))
                        }
                        if (KWP_CONF.selectedCategory && KWP_CONF.selectedCategory == j) {
                            i = false;
                            a.display_list.push(g)
                        }
                    });
                    a.image_cat[g] = d.join(",");
                    if (!KWP_CONF.selectedCategory || i) {
                        a.display_list.push(g)
                    }
                    a.tplist[g] = {
                        url: a.base_url + jQuery(this).find("url").text() + "?" + a.domainhash,
                        thumbnail: e,
                        id: jQuery(this).attr("id"),
                        layouts: []
                    }
                });
                if (typeof b == "function") {
                    b()
                }
                a.display_templates();
                jQuery(".search-container .select2-container").css("width", "100%")
            })
        };
        this.set_layouts = function () {
            a.layouts_enabled = true;
            jQuery(".cficon[data-related=layouts_block]").show();
            if (jQuery("#themes_choices")[0]) {
                jQuery("#themes_choices").show();
                jQuery("#themes_block .search-container").css("margin-top", "30px");
                jQuery(".theme-zone span").html(KWC.translate("Themes & Layouts"))
            }
            jQuery.each(a.tplist, function (b, c) {
                jQuery.get(c.url, function (d) {
                    var e = new _kw191(d, "xml");
                    var f = [];
                    jQuery.each(e.cover_layouts, function (g, h) {
                        h.is_cover = true;
                        f.push(h)
                    });
                    jQuery.each(e.page_layouts, function (g, h) {
                        h.is_cover = false;
                        f.push(h)
                    });
                    c.layouts = f;
                    e = null
                })
            })
        };
        this.paste_to = function (e, b) {
            var b = b || {};
            var d = [];
            for (var c in b) {
                d.push(c + "='" + b[c] + "'")
            }
            jQuery.each(a.display_list, function (f, g) {
                jQuery("#" + e).append("<div " + d.join(" ") + "  data-loaded='0' data-id='" + KWP.imagesLoaded[g].to_canvas.id + "' id='" + g + "' class='menu-thumbnail'><img src='" + KWP_CONF.static_serv + "img/image_loader.gif' /></div>")
            })
        };
        var a = this
    }
};
var KWPUpload = function () {
    this.in_progress = false;
    this.should_save = false;
    this.autoshare = false;
    this.full_save = false;
    this.save_once_triggered = false;
    this.failed_alerted = false;
    this.order_triggered = false;
    this.modifications_since_save_started = 0;
    this.concurrent_uploads = 0;
    this.elements_to_upload = [];
    this.uploads_progress = [];
    this.json_to_save = "{}";
    this.done_callback = null;
    this.upload_callback = null;
    this.save_callback = null;
    this.wait_for_done_signal = false;
    this.last_save_key = null;
    this.last_thumbnail = null;
    this.master_needs_original = false;
    this.creation_id = KWP_utils.randomString(16);
    this.auth_retries = 10;
    this.getAuthorization = function (b, c, e) {
        var d = KWP_CONF.s3bucketShort;
        if (typeof c != "undefined") {
            d = (c == "eu" ? KWP_CONF.s3bucketShortEU : KWP_CONF.s3bucketShort)
        }
        jQuery.ajax({
            type: "POST",
            async: true,
            dataType: "json",
            url: KWP_CONF.authorizationServer,
            timeout: 5000,
            data: {
                bucket: d,
                key: b
            },
            success: function (f) {
                a.auth_retries = 10;
                if (f.online) {
                    e(false)
                } else {
                    e(f)
                }
            },
            error: function () {
                if (--a.auth_retries > 0) {
                    var f = Math.floor(Math.random() * KWP_CONF.authorizationServerSD.length);
                    KWP_CONF.authorizationServer = KWP_CONF.authorizationServerOrigin.replace("<sub>", KWP_CONF.authorizationServerSD[f]);
                    a.getAuthorization(b, c, e)
                } else {
                    a.failed_upload()
                }
            }
        })
    };
    this.draw_progress = function (f, h) {
        var b = document.getElementById("progress_canvas");
        var d = b.getContext("2d");
        var h = h || false;
        if (jQuery("#order_zone_progress:visible")[0]) {
            jQuery("#order_zone_progress").progressbar({
                value: f
            })
        }
        jQuery(".total-order-progress").progressbar({
            value: f
        });
        if (h) {
            var e = new Image();
            e.onload = function () {
                d.clearRect(0, 0, 20, 20);
                d.drawImage(e, 0, 0)
            };
            e.src = KWP_CONF.static_serv + "img/tick.png"
        } else {
            d.clearRect(0, 0, 20, 20);
            d.beginPath();
            d.arc(10, 10, 8, 0, 2 * Math.PI);
            d.fillStyle = "#FFF";
            d.fill();
            d.fillStyle = "#7DB310";
            d.beginPath();
            var g = 1.5;
            var c = 1.5 + (2 * f / 100);
            d.arc(10, 10, 8, g * Math.PI, c * Math.PI, false);
            d.lineTo(10, 10);
            d.fill();
            d.beginPath();
            d.arc(10, 10, 8, 0, 2 * Math.PI);
            d.lineWidth = 1.5;
            d.strokeStyle = "#888";
            d.stroke()
        }
    };
    this.clear_progress = function () {
        var b = document.getElementById("progress_canvas");
        var c = b.getContext("2d");
        c.clearRect(0, 0, 20, 20)
    };
    this.abort = function () {
        if (!a.in_progress) {
            return
        }
        jQuery.each(KWP.imagesLoaded, function (b) {
            if (typeof KWP.imagesLoaded[b].upload != "undefined") {
                delete KWP.imagesLoaded[b].upload
            }
        });
        KWP_utils.abortAllXHR();
        a.json_to_save = "{}";
        a.concurrent_uploads = 0;
        a.elements_to_upload = [];
        a.uploads_progress = [];
        a.in_progress = false;
        a.clear_progress();
        jQuery("#save_project").attr("src", KWP_CONF.static_serv + "img/icons/header_save.png")
    };
    this.failed_upload = function () {
        if (!a.failed_alerted) {
            a.failed_alerted = true;
            alert(KWC.translate("Upload error. Please check your internet connection and try again."))
        }
        a.abort();
        jQuery("#order_zone").fadeOut()
    };
    this.preparePhotoList = function () {
        var b = a.full_save ? manager.getImageList() : creation._kw106();
        jQuery.each(b, function (c, d) {
            if (KWP.imagesLoaded[d.id] && !KWP.imagesLoaded[d.id].to_canvas.online && typeof (KWP.imagesLoaded[d.id].upload) == "undefined") {
                KWP.imagesLoaded[d.id].upload = {
                    type: "photo",
                    needs_alpha: (d.stats.alpha <= 254),
                    uploaded: false,
                    in_progress: false,
                    can_retry: KWP_CONF.maxUploadRetries,
                    hash: KWP.imagesLoaded[d.id].to_canvas.upload_hash,
                    data_prepared: "",
                    data: ""
                };
                a.elements_to_upload.push(d.id);
                a.uploads_progress.push({
                    photo_id: d.id,
                    progress: 0
                })
            }
        })
    };
    this.prepareTextList = function () {
        var b = creation._kw107();
        jQuery.each(b, function (d, e) {
            var c = KWP_utils._kw116(e).toString();
            if (typeof KWP.imagesLoaded[c] == "undefined" || typeof KWP.imagesLoaded[c].upload == "undefined") {
                KWP.imagesLoaded[c] = {};
                KWP.imagesLoaded[c].upload = {
                    type: "text",
                    uploaded: false,
                    in_progress: false,
                    can_retry: KWP_CONF.maxUploadRetries,
                    hash: c,
                    data: new _kw104(e).render(300)
                };
                a.elements_to_upload.push(c);
                a.uploads_progress.push({
                    photo_id: c,
                    progress: 0
                })
            }
        })
    };
    this.uploadList = function () {
        if (typeof window.saveStart == "function") {
            saveStart()
        }
        a.failed_alerted = false;
        a.in_progress = true;
        a.prepareTextList();
        a.preparePhotoList();
        jQuery.each(a.elements_to_upload, function (b, c) {
            if (!KWP.imagesLoaded[c].upload.uploaded && !KWP.imagesLoaded[c].upload.in_progress) {
                a.uploadObject(c)
            }
        });
        if (a.elements_to_upload.length == 0) {
            a.uploadComplete()
        }
    };
    this.uploadObjectComplete = function (c) {
        if (KWP.imagesLoaded[c].upload.type == "text") {
            KWP.imagesLoaded[c].upload.uploaded = true;
            KWP.imagesLoaded[c].upload.in_progress = false;
            KWP.imagesLoaded[c].upload.data = null;
            a.getTotalUploadProgress(c, 1);
            a.concurrent_uploads--;
            while (a.elements_to_upload.indexOf(c) !== -1) {
                a.elements_to_upload.splice(a.elements_to_upload.indexOf(c), 1)
            }
            a.uploadList()
        } else {
            if (KWP.imagesLoaded[c].upload.type == "photo") {
                if (KWP.imagesLoaded[c].to_canvas.online_url != "") {
                    var b = true;
                    jQuery.each(KWP.imagesLoaded[c].upload.thumblist, function (d, e) {
                        if (!e.uploaded) {
                            b = false;
                            return false
                        }
                    });
                    if (!b) {
                        return
                    }
                    KWP.imagesLoaded[c].to_canvas.online = true;
                    KWP.imagesLoaded[c].upload.uploaded = true;
                    KWP.imagesLoaded[c].upload.in_progress = false;
                    KWP.imagesLoaded[c].upload.thumblist = null;
                    a.getTotalUploadProgress(c, 1);
                    a.concurrent_uploads--;
                    while (a.elements_to_upload.indexOf(c) !== -1) {
                        a.elements_to_upload.splice(a.elements_to_upload.indexOf(c), 1)
                    }
                    a.uploadList()
                }
            } else {
                console.error("unknown image type")
            }
        }
    };
    this.uploadComplete = function () {
        a.draw_progress(100);
        a.uploads_progress = [];
        a.elements_to_upload = [];
        creation.properties.creationid = a.creation_id;
        var f = creation.save();
        if (!f) {
            a.nothingToSave();
            return
        }
        var c = true;
        jQuery.each(f.pages, function (i, j) {
            jQuery.each(j.objects, function (l, m) {
                if (m.type == "text") {
                    var k = KWP_utils._kw116(m).toString();
                    if (typeof KWP.imagesLoaded[k] == "undefined") {
                        c = false
                    } else {
                        if (typeof KWP.imagesLoaded[k].upload == "undefined") {
                            c = false
                        } else {
                            if (KWP.imagesLoaded[k].upload && !KWP.imagesLoaded[k].upload.uploaded) {
                                c = false
                            } else {
                                m.online_url = KWP_CONF.s3bucketEU + KWP_CONF.client + "/texts/" + k + ".png"
                            }
                        }
                    }
                }
            })
        });
        if (!c) {
            a.nothingToSave();
            return
        }
        if (a.full_save) {
            var g = manager.getImageList();
            f.additional_photos = [];
            jQuery.each(g, function (i, j) {
                if (j.usecount == 0) {
                    f.additional_photos.push({
                        id: j.id,
                        width: j.width,
                        height: j.height,
                        date: j.date,
                        filename: j.filename,
                        orientation: j.orientation,
                        stats: j.stats,
                        online: true,
                        online_url: j.online_url,
                        online_thumbs: j.online_thumbs,
                        thumbindex: j.thumbindex
                    })
                }
            })
        }
        var d = JSON.stringify(f);
        if (d != a.json_to_save) {
            a.json_to_save = d;
            var b = CryptoJS.SHA1(d);
            var h = KWP_CONF.client + "/creations/" + b + ".json";
            var e = new FormData();
            e.append("content-type", "application/json");
            e.append("acl", "public-read");
            this.getAuthorization(h, "us", function (i) {
                if (i) {
                    e.append("Policy", i.policy);
                    e.append("X-Amz-algorithm", "AWS4-HMAC-SHA256");
                    e.append("X-Amz-credential", i.credentials);
                    e.append("X-Amz-date", i.date);
                    e.append("X-Amz-expires", i.expires);
                    e.append("X-Amz-signature", i.signature);
                    e.append("key", h);
                    e.append("file", d);
                    jQuery.ajax({
                        url: KWP_CONF.s3bucket,
                        type: "POST",
                        data: e,
                        processData: false,
                        contentType: false,
                        success: function () {
                            a.saveThumbnail(b, function (k) {
                                a.saveComplete(b.toString(), k);
                                if (a.modifications_since_save_started > 0) {
                                    a.should_save = true;
                                    a.modifications_since_save_started = 0;
                                    manager._kw46()
                                }
                            })
                        },
                        error: function (l, k) {
                            a.uploadComplete()
                        }
                    })
                } else {
                    var j = KWP_CONF.s3bucket.replace("http:", "https:") + KWP_CONF.client + "/thumbnails/" + b + ".jpg";
                    if (j.indexOf("//") == 0) {
                        j = "https:" + j
                    }
                    a.saveComplete(b.toString(), j)
                }
            })
        } else {
            a.saveComplete(a.last_save_key, a.last_thumbnail)
        }
    };

    this.doUploadComplete = function () {
        a.draw_progress(100);
        a.uploads_progress = [];
        a.elements_to_upload = [];
        creation.properties.creationid = a.creation_id;
        var f = creation.save(0);


        if (a.full_save) {
            var g = manager.getImageList();
            f.additional_photos = [];
            jQuery.each(g, function (i, j) {
                if (j.usecount == 0) {
                    f.additional_photos.push({
                        id: j.id,
                        width: j.width,
                        height: j.height,
                        date: j.date,
                        filename: j.filename,
                        orientation: j.orientation,
                        stats: j.stats,
                        online: true,
                        online_url: j.online_url,
                        online_thumbs: j.online_thumbs,
                        thumbindex: j.thumbindex
                    })
                }
            })
        }
        var d = JSON.stringify(f);
        if (d != a.json_to_save) {
            a.json_to_save = d;
            var b = CryptoJS.SHA1(d);
            var h = KWP_CONF.client + "/creations/" + b + ".json";
            var e = new FormData();
            e.append("content-type", "application/json");
            e.append("acl", "public-read");
            this.getAuthorization(h, "us", function (i) {
                if (i) {
                    e.append("Policy", i.policy);
                    e.append("X-Amz-algorithm", "AWS4-HMAC-SHA256");
                    e.append("X-Amz-credential", i.credentials);
                    e.append("X-Amz-date", i.date);
                    e.append("X-Amz-expires", i.expires);
                    e.append("X-Amz-signature", i.signature);
                    e.append("key", h);
                    e.append("file", d);
                    jQuery.ajax({
                        url: KWP_CONF.s3bucket,
                        type: "POST",
                        data: e,
                        processData: false,
                        contentType: false,
                        success: function () {
                            window.upload_callback(a.creation_id, b.toString())
                        },
                        error: function (l, k) {
                            a.uploadComplete()
                        }
                    })
                } else {
                    var j = KWP_CONF.s3bucket.replace("http:", "https:") + KWP_CONF.client + "/thumbnails/" + b + ".jpg";
                    if (j.indexOf("//") == 0) {
                        j = "https:" + j
                    }
                    a.saveComplete(b.toString(), j)
                }
            })
        } else {
            a.saveComplete(a.last_save_key, a.last_thumbnail)
        }
    };

    this.saveComplete = function (b, c) {
        a.nothingToSave();
        a.last_save_key = b;
        a.last_thumbnail = c;
        a.draw_progress(100, true);
        creation.saved(b);
        if (typeof a.done_callback == "function") {
            if (a.wait_for_done_signal) {
                return
            }
            a.done_callback(b, c, a.creation_id)
        } else {
            if (typeof a.save_callback == "function") {
                a.save_callback(b, c, a.creation_id, a.autosaving)
            }
        }
    };
    this.nothingToSave = function () {
        a.draw_progress(100, true);
        jQuery("#save_project").attr("src", KWP_CONF.static_serv + "img/icons/header_save.png");
        jQuery("#save_project").addClass("disabled");
        jQuery(window).unbind("beforeunload");
        a.in_progress = false;
        a.should_save = false
    };
    this.saveThumbnail = function (b, e) {
        var d = KWP_CONF.client + "/thumbnails/" + b + ".jpg";
        var c = new FormData();
        c.append("content-type", "image/jpeg");
        c.append("acl", "public-read");
        c.append("key", d);
        if (KWP.CORScapable) {
            this.getAuthorization(d, "us", function (f) {
                if (f) {
                    c.append("Policy", f.policy);
                    c.append("X-Amz-algorithm", "AWS4-HMAC-SHA256");
                    c.append("X-Amz-credential", f.credentials);
                    c.append("X-Amz-date", f.date);
                    c.append("X-Amz-expires", f.expires);
                    c.append("X-Amz-signature", f.signature);
                    c.append("file", KWP_utils._kw112(creation._kw172(KWP_CONF.uploadedThumbSize).toDataURL("image/jpeg")));
                    jQuery.ajax({
                        url: KWP_CONF.s3bucket,
                        type: "POST",
                        data: c,
                        processData: false,
                        contentType: false,
                        success: function () {
                            e(KWP_CONF.s3bucket.replace("http:", "https:") + d)
                        },
                        error: function (h, g) {
                            a.uploadComplete(call)
                        }
                    })
                }
            })
        } else {
            e(null)
        }
    };
    this.getTotalUploadProgress = function (d, e) {
        jQuery.each(a.uploads_progress, function (f, g) {
            if (g.photo_id == d) {
                g.progress = e
            }
        });
        var b = 0;
        jQuery.each(a.uploads_progress, function (f, g) {
            b += g.progress
        });
        var c = this.elements_to_upload.length == 0 ? 1 : b / this.uploads_progress.length;
        a.draw_progress(c * 100);
        if (a.progressCallback) {
            a.progressCallback(c)
        }
    };
    this.uploadObject = function (b) {
        if (this.concurrent_uploads < KWP_CONF.maxConcurrentUploads) {
            KWP.imagesLoaded[b].upload.in_progress = true;
            this.concurrent_uploads++;
            if (KWP.imagesLoaded[b].upload.type == "text") {
                var d = KWP_CONF.client + "/texts/" + KWP.imagesLoaded[b].upload.hash + ".png";
                a.getAuthorization(d, "eu", function (f) {
                    if (f) {
                        var e = new FormData();
                        e.append("key", d);
                        e.append("content-type", "image/png");
                        e.append("acl", "public-read");
                        e.append("Policy", f.policy);
                        e.append("X-Amz-algorithm", "AWS4-HMAC-SHA256");
                        e.append("X-Amz-credential", f.credentials);
                        e.append("X-Amz-date", f.date);
                        e.append("X-Amz-expires", f.expires);
                        e.append("X-Amz-signature", f.signature);
                        e.append("file", KWP_utils._kw112(KWP.imagesLoaded[b].upload.data));
                        jQuery.ajax({
                            url: KWP_CONF.s3bucketEU,
                            type: "POST",
                            data: e,
                            processData: false,
                            contentType: false,
                            timeout: 30000,
                            success: function () {
                                KWP.imagesLoaded[b].upload.data = null;
                                a.uploadObjectComplete(b)
                            },
                            error: function (h, g) {
                                KWP.imagesLoaded[b].upload.in_progress = false;
                                a.concurrent_uploads--;
                                if (--KWP.imagesLoaded[b].upload.can_retry > 0) {
                                    a.uploadObject(b)
                                } else {
                                    a.failed_upload()
                                }
                            }
                        })
                    } else {
                        KWP.imagesLoaded[b].upload.data = null;
                        a.uploadObjectComplete(b)
                    }
                })
            }
            if (KWP.imagesLoaded[b].upload.type == "photo") {
                if (!KWP.imagesLoaded[b].upload.thumblist) {
                    KWP.imagesLoaded[b].upload.thumblist = KWP.imagesLoaded[b].to_canvas.thumbs.getUploadList()
                }
                var c = KWP.imagesLoaded[b].upload.needs_alpha ? "png" : "jpg";
                var d = KWP_CONF.client + "/photos/" + KWP.imagesLoaded[b].upload.hash + "/original." + c;
                a.getAuthorization(d, "eu", function (f) {
                    if (f) {
                        var e = function (g) {
                            KWP.imagesLoaded[b].upload.data = null;
                            var h = new FormData();
                            h.append("content-type", "image/" + (KWP.imagesLoaded[b].upload.needs_alpha ? "png" : "jpeg"));
                            h.append("acl", "public-read");
                            h.append("Policy", f.policy);
                            h.append("X-Amz-algorithm", "AWS4-HMAC-SHA256");
                            h.append("X-Amz-credential", f.credentials);
                            h.append("X-Amz-date", f.date);
                            h.append("X-Amz-expires", f.expires);
                            h.append("X-Amz-signature", f.signature);
                            h.append("key", d);
                            h.append("file", g);
                            g = null;
                            jQuery.ajax({
                                xhr: function () {
                                    var i = new window.XMLHttpRequest();
                                    i.upload.addEventListener("progress", function (j) {
                                        if (j.lengthComputable) {
                                            var k = j.loaded / j.total;
                                            a.getTotalUploadProgress(b, k)
                                        }
                                    }, false);
                                    return i
                                },
                                url: KWP_CONF.s3bucketEU,
                                type: "POST",
                                autoUpload: true,
                                dataType: "xml",
                                data: h,
                                processData: false,
                                contentType: false,
                                timeout: 300000,
                                success: function () {
                                    delete (h);
                                    KWP.imagesLoaded[b].to_canvas.online_url = KWP_CONF.s3bucketEU + d;
                                    a.uploadObjectComplete(b)
                                },
                                error: function (j, i) {
                                    delete (h);
                                    KWP.imagesLoaded[b].upload.in_progress = false;
                                    a.concurrent_uploads--;
                                    if (--KWP.imagesLoaded[b].upload.can_retry > 0) {
                                        a.uploadObject(b)
                                    } else {
                                        a.failed_upload()
                                    }
                                }
                            })
                        };
                        a.prepareData(b, function () {
                            e(KWP_utils._kw112(KWP.imagesLoaded[b].upload.data))
                        })
                    } else {
                        KWP.imagesLoaded[b].to_canvas.online_url = KWP_CONF.s3bucketEU + d;
                        KWP.imagesLoaded[b].upload.data = null;
                        a.uploadObjectComplete(b)
                    }
                });
                jQuery.each(KWP.imagesLoaded[b].upload.thumblist, function (e, h) {
                    var f = KWP.imagesLoaded[b].upload.needs_alpha ? "png" : "jpg";
                    var g = KWP_CONF.client + "/photos/" + KWP.imagesLoaded[b].upload.hash + "/" + h.size + "." + f;
                    a.getAuthorization(g, "eu", function (k) {
                        if (k) {
                            if (KWP.imagesLoaded[b].upload.needs_alpha) {
                                var i = KWP_utils._kw112(h.image.toDataURL())
                            } else {
                                var i = KWP_utils._kw112(h.image.toDataURL("image/jpeg", (h.size == 60 ? 0.9 : 0.75)))
                            }
                            var j = new FormData();
                            j.append("content-type", "image/" + (KWP.imagesLoaded[b].upload.needs_alpha ? "png" : "jpeg"));
                            j.append("acl", "public-read");
                            j.append("Policy", k.policy);
                            j.append("X-Amz-algorithm", "AWS4-HMAC-SHA256");
                            j.append("X-Amz-credential", k.credentials);
                            j.append("X-Amz-date", k.date);
                            j.append("X-Amz-expires", k.expires);
                            j.append("X-Amz-signature", k.signature);
                            j.append("key", g);
                            j.append("file", i);
                            i = null;
                            jQuery.ajax({
                                url: KWP_CONF.s3bucketEU,
                                type: "POST",
                                data: j,
                                processData: false,
                                contentType: false,
                                timeout: 60000,
                                success: function () {
                                    delete (j);
                                    h.uploaded = true;
                                    KWP.imagesLoaded[b].to_canvas.online_thumbs.push({
                                        size: h.size,
                                        url: KWP_CONF.s3bucketEU + g
                                    });
                                    a.uploadObjectComplete(b)
                                },
                                error: function (m, l) {
                                    delete (j);
                                    KWP.imagesLoaded[b].upload.in_progress = false;
                                    a.concurrent_uploads--;
                                    if (--KWP.imagesLoaded[b].upload.can_retry > 0) {
                                        a.uploadObject(b)
                                    } else {
                                        a.failed_upload()
                                    }
                                }
                            })
                        } else {
                            h.uploaded = true;
                            KWP.imagesLoaded[b].to_canvas.online_thumbs.push({
                                size: h.size,
                                url: KWP_CONF.s3bucketEU + g
                            });
                            a.uploadObjectComplete(b)
                        }
                    })
                })
            }
        }
    };
    this.prepareData = function (d, g) {
        var f = function (j, h, k) {
            var i = new Image();
            i.onload = function () {
                var m = document.createElement("canvas");
                m.width = j;
                m.height = h;
                var o = m.getContext("2d");
                o.drawImage(i, 0, 0, j, h);
                var p = o.getImageData(j - 1, h - 1, 1, 1);
                if (p.data[0] != 0 || p.data[1] != 0 || p.data[2] != 0 || p.data[3] != 0) {
                    var l = m.toDataURL("image/jpeg", k);
                    KWP.imagesLoaded[d].upload.data = l;
                    m = null;
                    o = null;
                    l = null;
                    g()
                } else {
                    a.master_needs_original = true;
                    a.prepareData(d, g)
                }
            };
            i.src = window.URL.createObjectURL(KWP.imagesLoaded[d].file)
        };
        var c = Math.max(4, Math.min(15, KWP_CONF.mpixPhotoExport)) * 1000000;
        if (KWP.imagesLoaded[d].upload.needs_alpha || a.master_needs_original || KWP.imagesLoaded[d].file.size < 300000) {
            var e = new FileReader();
            e.onload = function () {
                KWP.imagesLoaded[d].upload.data = e.result;
                e = null;
                g()
            };
            e.readAsDataURL(KWP.imagesLoaded[d].file)
        } else {
            if (KWP.imagesLoaded[d].to_canvas.width * KWP.imagesLoaded[d].to_canvas.height < c) {
                f(KWP.imagesLoaded[d].to_canvas.width, KWP.imagesLoaded[d].to_canvas.height, 0.8)
            } else {
                var b = Math.sqrt(c / (KWP.imagesLoaded[d].to_canvas.width * KWP.imagesLoaded[d].to_canvas.height));
                f(Math.round(KWP.imagesLoaded[d].to_canvas.width * b), Math.round(KWP.imagesLoaded[d].to_canvas.height * b), 0.75)
            }
        }
    };
    var a = this
};
var FormatSetParser = function (a, d, b) {
    this.type = a;
    this.sku = d;
    this.old_sku = d;
    this.ressourceurl = b;
    this.domainhash = jQuery.MD5(document.domain).substr(8, 12);
    this.xml;
    this.$pageconf;
    this.$coverconf;
    this.$exportconf;
    this.$previewconf;
    this.page_count = 1;
    this.page_min = 1;
    this.page_max = 1;
    this.page_increment = 0;
    this.error = function (e) {
        console.error(e)
    };
    this.get_pages_from_sku = function (f) {
        var e;
        jQuery(c.xml).find("pagecount").each(function () {
            if (jQuery(this).attr("sku").indexOf(f) > 0) {
                e = parseInt(jQuery(this).attr("count"));
                return false
            }
        });
        return e
    };
    this.get_page_count = function () {
        var e = 0;
        jQuery(c.xml).find("pagecount").each(function () {
            var g = false;
            var f = jQuery(this);
            var h = jQuery(this).attr("sku").split(",");
            if (typeof h[0] != "undefined") {
                jQuery.each(h, function (i, j) {
                    if (j == c.sku) {
                        e = parseInt(f.attr("count"));
                        g = true;
                        return false
                    }
                });
                if (g) {
                    return false
                }
            } else {
                if (jQuery(this).attr("sku") == c.sku) {
                    e = parseInt(f.attr("count"));
                    return false
                }
            }
        });
        return e
    };
    this.get_sizes_from_id = function (g) {
        var f = {},
            e = "";
        switch (c.type) {
            case "collage_format_set":
                e = "collageformat";
                break;
            default:
                e = "cardformat";
                break
        }
        jQuery(c.xml).find(e).each(function () {
            if (jQuery(this).attr("id") == g) {
                f.width = jQuery(this).find("page").attr("width") | 0;
                f.height = jQuery(this).find("page").attr("height") | 0;
                return false
            }
        });
        return f
    };
    this.switch_product = function (g, h) {
        if (typeof creation == "undefined") {
            h(false);
            return
        }
        var e = c.page_count;
        c.sku = g;
        var f = c.get_page_count();
        c.parse(function (i) {
            var j;
            switch (c.type) {
                case "gift_format_set":
                case "collage_format_set":
                    j = new GiftProduct(i.page_spec);
                    break;
                case "card_format_set":
                    j = new CardProduct(c.get_card_type(), i.page_spec);
                    break;
                case "book_format_set":
                case "book_format_set_2":
                case "agenda_format_set":
                case "calendar_format_set":
                    if (e > i.page_spec.num_pages) {
                        if (!window.confirm(KWC.translate("The last $num$ pages will be removed if you continue.").replace("$num$", e - i.page_spec.num_pages))) {
                            if (typeof window.sku != "undefined") {
                                window.sku = c.old_sku
                            }
                            c.sku = c.old_sku;
                            c.page_count = e;
                            h(false);
                            return
                        } else {
                            c.old_sku = g;
                            if (creation.product.coverspec != null) {
                                creation.product.units[0].filename = i.cover_spec.filename;
                                creation.product.units[1].filename = i.page_spec.filename
                            } else {
                                creation.product.units[0].filename = i.page_spec.filename
                            }
                            creation.setNumberOfPages(i.page_spec.num_pages)
                        }
                    } else {
                        if (e < i.page_spec.num_pages) {
                            if (!window.confirm(KWC.translate("We will add the $num$ extra pages at the end of your book if you continue.").replace("$num$", i.page_spec.num_pages - e))) {
                                if (typeof window.sku != "undefined") {
                                    window.sku = c.old_sku
                                }
                                c.sku = c.old_sku;
                                c.page_count = e;
                                h(false);
                                return
                            } else {
                                c.old_sku = g;
                                if (creation.product.coverspec != null) {
                                    creation.product.units[0].filename = i.cover_spec.filename;
                                    creation.product.units[1].filename = i.page_spec.filename
                                } else {
                                    creation.product.units[0].filename = i.page_spec.filename
                                }
                                creation.setNumberOfPages(i.page_spec.num_pages)
                            }
                        } else { }
                    }
                    creation.product.properties.sku = g;
                    h(true);
                    return;
                default:
                    console.warn("Warning, unknown formatset");
                    h(false);
                    return
            }
            if (!creation.similar(j)) {
                if (!window.confirm(KWC.translate("A format change is detected, your creation will be reset if you continue."))) {
                    c.sku = c.old_sku;
                    h(false);
                    return
                } else {
                    c.old_sku = g
                }
            }
            creation.updateProduct(j);
            if (creation.pages[0].spec.preview && creation.pages[0].spec.preview.position.radius > 0) {
                creation.product.units[0].preview = i.page_spec.preview;
                creation.pages[0]._kw153();
                creation.views[0].page.addUpdateListener(function () {
                    jQuery("#preview_btn").html("<p class='kwp-icon p-icon'><span>" + KWC.translate("Preview") + "</span></p>");
                    jQuery("#preview_btn p").append(creation._kw172(40))
                })
            }
            editor._kw201(creation._kw161());
            controller.set_sizes();
            creation.product.properties.sku = g;
            h(true)
        })
    };
    this.get_card_type = function () {
        switch (c.$pageconf.parent().find("type").text()) {
            case "simple":
                return "card-simple";
            case "rvf":
                return "card-folded";
            case "rv":
                return "card-double";
            default:
                return "card-simple"
        }
    };
    this.get_template_list = function (g) {
        var f = "";
        var e = c.$pageconf.parent().find("templates");
        jQuery(e).each(function () {
            if (typeof jQuery(this).attr("lang") == "undefined") {
                f = jQuery(this).text()
            } else {
                if (jQuery(this).attr("lang") == g) {
                    f = jQuery(this).text()
                }
            }
        });
        return f
    };
    this.get_background_list = function (g) {
        var f = "";
        var e = c.$pageconf.parent().find("backgrounds");
        jQuery(e).each(function () {
            if (typeof jQuery(this).attr("lang") == "undefined") {
                f = jQuery(this).text()
            } else {
                if (jQuery(this).attr("lang") == g) {
                    f = jQuery(this).text()
                }
            }
        });
        return f
    };
    this.get_foreground_list = function (g) {
        var f = false;
        var e = c.$pageconf.parent().find("foregrounds");
        jQuery(e).each(function () {
            if (typeof jQuery(this).attr("lang") == "undefined") {
                f = jQuery(this).text()
            } else {
                if (jQuery(this).attr("lang") == g) {
                    f = jQuery(this).text()
                }
            }
        });
        return f
    };
    this.ugly_patches = function (f) {
        var e = (1000 + c.page_count).toString().substring(1);
        switch (c.$pageconf.parent().find("exportid").text()) {
            case "litto_wiro_card":
                f.page_spec.margin = new Margin(6, 6, 6, 6);
                f.page_spec.cropmarks = true;
                f.page_spec.trimbox = true;
                f.page_spec.dpi = 300;
                f.page_spec.format = "pdf";
                f.page_spec.filename = "C" + (f.page_spec.width / 10 | 0) + "$_RV_FR_001_{{id}}_{{counter}}_{{quantity}}_$litto.pdf";
                f.page_spec.barcode = {};
                f.page_spec.barcode.text_only = true;
                f.page_spec.barcode.rotate = 90;
                f.page_spec.barcode.x = 0;
                f.page_spec.barcode.y = 10;
                break;
            case "litto_wiro_harmony":
                f.page_spec.margin = new Margin(3, 3, 3, 3);
                f.page_spec.cropmarks = true;
                f.page_spec.trimbox = true;
                f.page_spec.dpi = 300;
                f.page_spec.format = "pdf";
                f.page_spec.filename = "W24$_" + e + "_{{id}}_B{{counterddd}}_C{{quantityddd}}_$litto.pdf";
                break;
            case "litto_wiro_small":
                f.page_spec.margin = new Margin(3, 3, 3, 3);
                f.page_spec.cropmarks = true;
                f.page_spec.trimbox = true;
                f.page_spec.dpi = 300;
                f.page_spec.format = "pdf";
                f.page_spec.filename = "WA5$_" + e + "_{{id}}_B{{counterddd}}_C{{quantityddd}}_$litto.pdf";
                break;
            case "litto_wiro_normal":
                f.page_spec.margin = new Margin(3, 3, 3, 3);
                f.page_spec.cropmarks = true;
                f.page_spec.trimbox = true;
                f.page_spec.dpi = 300;
                f.page_spec.format = "pdf";
                f.page_spec.filename = "WA4$_" + e + "_{{id}}_B{{counterddd}}_C{{quantityddd}}_$litto.pdf";
                break;
            case "litto_wiro_agenda":
                f.page_spec.bleed = new Margin(1, 1, 1, 1);
                f.page_spec.margin = new Margin(2, 2, 2, 2);
                f.page_spec.cropmarks = true;
                f.page_spec.trimbox = true;
                f.page_spec.dpi = 300;
                f.page_spec.format = "pdf";
                f.page_spec.filename = "LIT$_{{id}}_B{{counterddd}}_C{{quantityddd}}_$litto.pdf";
                break;
            case "litto_wiro_cal_A5":
                f.page_spec.bleed = new Margin(1, 1, 1, 1);
                f.page_spec.margin = new Margin(2, 2, 2, 2);
                f.page_spec.cropmarks = true;
                f.page_spec.trimbox = true;
                f.page_spec.dpi = 300;
                f.page_spec.format = "pdf";
                f.page_spec.filename = "A5L$_" + e + "_{{id}}_B{{counterddd}}_C{{quantityddd}}_$litto.pdf";
                break;
            case "litto_wiro_cal_A4_v":
                f.page_spec.bleed = new Margin(1, 1, 1, 1);
                f.page_spec.margin = new Margin(2, 2, 2, 2);
                f.page_spec.cropmarks = true;
                f.page_spec.trimbox = true;
                f.page_spec.dpi = 300;
                f.page_spec.format = "pdf";
                f.page_spec.filename = "A4P$_" + e + "_{{id}}_B{{counterddd}}_C{{quantityddd}}_$litto.pdf";
                break;
            case "litto_wiro_cal_A4_h":
                f.page_spec.bleed = new Margin(1, 1, 1, 1);
                f.page_spec.margin = new Margin(2, 2, 2, 2);
                f.page_spec.cropmarks = true;
                f.page_spec.trimbox = true;
                f.page_spec.dpi = 300;
                f.page_spec.format = "pdf";
                f.page_spec.filename = "A4L$_" + e + "_{{id}}_B{{counterddd}}_C{{quantityddd}}_$litto.pdf";
                break;
            case "litto_wiro_cal_A3_v":
                f.page_spec.bleed = new Margin(1, 1, 1, 1);
                f.page_spec.margin = new Margin(2, 2, 2, 2);
                f.page_spec.cropmarks = true;
                f.page_spec.trimbox = true;
                f.page_spec.dpi = 300;
                f.page_spec.format = "pdf";
                f.page_spec.filename = "A3P$_" + e + "_{{id}}_B{{counterddd}}_C{{quantityddd}}_$litto.pdf";
                break;
            case "litto_wiro_cal_A3_h":
                f.page_spec.bleed = new Margin(1, 1, 1, 1);
                f.page_spec.margin = new Margin(2, 2, 2, 2);
                f.page_spec.cropmarks = true;
                f.page_spec.trimbox = true;
                f.page_spec.dpi = 300;
                f.page_spec.format = "pdf";
                f.page_spec.filename = "A3L$_" + e + "_{{id}}_B{{counterddd}}_C{{quantityddd}}_$litto.pdf";
                break;
            case "litto_sk_cover_fix":
                f.page_spec.cropmarks = false;
                f.page_spec.margin = new Margin(3, 3, 3, 3);
                f.page_spec.filename = "{{id}}_P" + e + "B__B{{counterddd}}_V_C{{quantityddd}}_inlay.pdf";
                f.page_spec.avoid_central_margins = true;
                break;
            case "litto_sk_cover_soft":
                f.cover_spec.cropmarks = false;
                f.cover_spec.filename = "{{id}}_P" + e + "B__B{{counterddd}}_V_C{{quantityddd}}_cover.pdf";
                f.cover_spec.margin = new Margin(3, 3, 3, 3);
                f.page_spec.cropmarks = false;
                f.page_spec.margin = new Margin(3, 3, 3, 3);
                f.page_spec.filename = "{{id}}_P" + e + "B__B{{counterddd}}_V_C{{quantityddd}}_inlay.pdf";
                f.page_spec.avoid_central_margins = true;
                break;
            case "litto_sk_cover_14":
                f.cover_spec.cropmarks = false;
                f.cover_spec.filename = "{{id}}_P" + e + "B__B{{counterddd}}_V_C{{quantityddd}}_cover.pdf";
                f.cover_spec.margin = new Margin(14, 14, 14, 14);
                f.page_spec.cropmarks = false;
                f.page_spec.margin = new Margin(3, 3, 3, 3);
                f.page_spec.filename = "{{id}}_P" + e + "B__B{{counterddd}}_V_C{{quantityddd}}_inlay.pdf";
                f.page_spec.avoid_central_margins = true;
                break;
            case "litto_sk_cover_15":
                f.cover_spec.cropmarks = false;
                f.cover_spec.filename = "{{id}}_P" + e + "B__B{{counterddd}}_V_C{{quantityddd}}_cover.pdf";
                f.cover_spec.margin = new Margin(15, 15, 15, 15);
                f.page_spec.cropmarks = false;
                f.page_spec.margin = new Margin(3, 3, 3, 3);
                f.page_spec.filename = "{{id}}_P" + e + "B__B{{counterddd}}_V_C{{quantityddd}}_inlay.pdf";
                f.page_spec.avoid_central_margins = true;
                break;
            case "litto_sk_agenda":
                f.cover_spec.cropmarks = false;
                f.cover_spec.filename = "{{id}}_P" + e + "B__B{{counterddd}}_V_C{{quantityddd}}_cover.pdf";
                f.cover_spec.margin = new Margin(14, 14, 14, 14);
                f.cover_spec.spine_width = [
                    [124, 10]
                ];
                f.cover_spec.dpi = 300;
                f.cover_spec.format = "pdf";
                f.page_spec.dpi = 300;
                f.page_spec.format = "pdf";
                f.page_spec.cropmarks = false;
                f.page_spec.margin = new Margin(3, 3, 3, 3);
                f.page_spec.filename = "{{id}}_P" + e + "B__B{{counterddd}}_V_C{{quantityddd}}_inlay.pdf";
                f.page_spec.avoid_central_margins = true;
                break;
            default:
                break
        }
    };
    this.parse = function (h) {
        var g = function () {
            var i = {};
            i.page_spec = {};
            i.page_spec.width = parseInt(c.$pageconf.attr("width"));
            i.page_spec.height = parseInt(c.$pageconf.attr("height"));
            i.page_spec.cropmarks = typeof c.$exportconf.find("pages").attr("cropmarks") == "undefined" || (c.$exportconf.find("pages").attr("cropmarks") == "true");
            i.page_spec.wired = c.$pageconf.parent().find("type").text() == "WIRED";
            i.page_spec.dpi = parseFloat(c.$exportconf.find("pages").attr("dpi"));
            i.page_spec.format = c.$exportconf.find("pages").attr("format");
            i.page_spec.filename = c.$exportconf.find("pages").attr("filename");
            i.page_spec.bleed = new Margin(parseFloat(c.$pageconf.find("bleed").attr("top")), parseFloat(c.$pageconf.find("bleed").attr("right")), parseFloat(c.$pageconf.find("bleed").attr("bottom")), parseFloat(c.$pageconf.find("bleed").attr("left")));
            i.page_spec.margin = new Margin(parseFloat(c.$exportconf.find("pages").find("margin").attr("top")), parseFloat(c.$exportconf.find("pages").find("margin").attr("right")), parseFloat(c.$exportconf.find("pages").find("margin").attr("bottom")), parseFloat(c.$exportconf.find("pages").find("margin").attr("left")));
            if (typeof c.$exportconf.find("pages").attr("filename") != "undefined") {
                i.page_spec.filename = c.$exportconf.find("pages").attr("filename")
            }
            if (c.$exportconf.find("pages").find("barcode")[0]) {
                i.page_spec.barcode = {};
                i.page_spec.barcode.rotate = parseInt(c.$exportconf.find("pages").find("barcode").attr("rotate"));
                i.page_spec.barcode.x = parseFloat(c.$exportconf.find("pages").find("barcode").attr("x"));
                i.page_spec.barcode.y = parseFloat(c.$exportconf.find("pages").find("barcode").attr("y"))
            }
            if (c.$previewconf[0]) {
                i.page_spec.preview = {};
                i.page_spec.preview.position = {
                    x: parseFloat(c.$previewconf.find("photo").attr("x")),
                    y: parseFloat(c.$previewconf.find("photo").attr("y")),
                    width: parseFloat(c.$previewconf.find("photo").attr("width")),
                    height: parseFloat(c.$previewconf.find("photo").attr("height")),
                    radius: (typeof c.$previewconf.find("photo").attr("r") == "undefined" ? 0 : parseFloat(c.$previewconf.find("photo").attr("r")))
                };
                if (typeof c.$previewconf.find("background").text() != "undefined" && c.$previewconf.find("background").text().length > 0) {
                    i.page_spec.preview.background = c.ressourceurl + c.$previewconf.find("background").text()
                }
                if (typeof c.$previewconf.find("foreground").text() != "undefined" && c.$previewconf.find("foreground").text().length > 0) {
                    i.page_spec.preview.foreground = c.ressourceurl + c.$previewconf.find("foreground").text()
                }
                if (typeof c.$previewconf.find("mask").text() != "undefined" && c.$previewconf.find("mask").text().length > 0) {
                    i.page_spec.preview.mask = c.ressourceurl + c.$previewconf.find("mask").text()
                }
            }
            if (c.$coverconf[0]) {
                i.cover_spec = {};
                i.cover_spec.width = parseInt(c.$coverconf.attr("width"));
                i.cover_spec.height = parseInt(c.$coverconf.attr("height"));
                i.cover_spec.cropmarks = (c.$exportconf.find("cover").attr("cropmarks") == "true");
                i.cover_spec.dpi = parseFloat(c.$exportconf.find("cover").attr("dpi"));
                i.cover_spec.format = c.$exportconf.find("cover").attr("format");
                i.cover_spec.filename = c.$exportconf.find("cover").attr("filename");
                i.cover_spec.spine_width = [];
                jQuery.each(c.$exportconf.parents("bookformat").find("pagecountlist").children(), function () {
                    i.cover_spec.spine_width.push([parseInt(jQuery(this).attr("count")), parseFloat(jQuery(this).attr("spine_width"))])
                });
                if (c.$exportconf.find("cover").find("barcode")[0]) {
                    i.cover_spec.barcode = {};
                    i.cover_spec.barcode.rotate = parseInt(c.$exportconf.find("cover").find("barcode").attr("rotate"));
                    i.cover_spec.barcode.x = parseFloat(c.$exportconf.find("cover").find("barcode").attr("x"));
                    i.cover_spec.barcode.y = parseFloat(c.$exportconf.find("cover").find("barcode").attr("y"))
                }
                if (c.$coverconf.find("inner")[0] && c.$coverconf.find("inner").attr("type") == "printed") {
                    i.page_spec.inner_cover_editable = true
                }
                i.cover_spec.bleed = new Margin(parseFloat(c.$coverconf.find("bleed").attr("top")), parseFloat(c.$coverconf.find("bleed").attr("right")), parseFloat(c.$coverconf.find("bleed").attr("bottom")), parseFloat(c.$coverconf.find("bleed").attr("left")));
                i.cover_spec.margin = new Margin(parseFloat(c.$exportconf.find("cover").find("margin").attr("top")), parseFloat(c.$exportconf.find("cover").find("margin").attr("right")), parseFloat(c.$exportconf.find("cover").find("margin").attr("bottom")), parseFloat(c.$exportconf.find("cover").find("margin").attr("left")))
            } else {
                i.cover_spec = null
            }
            c.ugly_patches(i);
            return i
        };
        switch (c.type) {
            case "gift_format_set":
            case "collage_format_set":
            case "card_format_set":
            case "calendar_format_set":
                var f = "";
                if (c.type == "gift_format_set") {
                    f = "giftformat"
                } else {
                    if (c.type == "collage_format_set") {
                        f = "collageformat"
                    } else {
                        if (c.type == "card_format_set") {
                            f = "cardformat"
                        } else {
                            if (c.type == "calendar_format_set") {
                                f = "calendarformat"
                            }
                        }
                    }
                }
                var e = function () {
                    var j = [];
                    jQuery(c.xml).find(f).each(function () {
                        var l = jQuery(this).attr("sku").split(",");
                        for (var k = 0; k < l.length + 1; k++) {
                            if (c.sku == l[k]) {
                                c.$pageconf = jQuery(this).find("page");
                                c.$coverconf = jQuery(this).find("> cover");
                                c.$exportconf = jQuery(this).find("export_format");
                                c.$previewconf = jQuery(this).find("preview");
                                break
                            }
                        }
                        if (jQuery(this).attr("sku").indexOf(",") === -1) { }
                    });
                    if (typeof h == "function") {
                        var i = g();
                        i.current_pages = c.page_count;
                        h(i)
                    }
                };
                if (typeof c.xml != "undefined") {
                    e()
                } else {
                    jQuery.get(c.ressourceurl + c.type + ".xml?" + c.domainhash, function (i) {
                        c.xml = i;
                        e()
                    })
                }
                break;
            case "agenda_format_set":
            case "book_format_set":
            case "book_format_set_2":
                var e = function () {
                    var k = "";
                    if (c.type == "agenda_format_set") {
                        k = "agendaformat"
                    } else {
                        if (c.type == "book_format_set") {
                            k = "bookformat"
                        } else {
                            if (c.type == "book_format_set_2") {
                                k = "bookformat"
                            }
                        }
                    }
                    var j = false;
                    jQuery(c.xml).find("pagecount").each(function () {
                        var m = false;
                        var l = jQuery(this);
                        var o = jQuery(this).attr("sku").split(",");
                        if (typeof o[0] != "undefined") {
                            jQuery.each(o, function (p, q) {
                                if (q == c.sku) {
                                    c.$pageconf = l.parents(k).find("page");
                                    c.$coverconf = l.parents(k).find("> cover");
                                    c.$exportconf = l.parents(k).find("export_format");
                                    c.$previewconf = l.parents(k).find("preview");
                                    c.page_count = parseInt(l.attr("count"));
                                    c.min_pages = parseInt(l.parent().find(":first").attr("count"));
                                    c.max_pages = parseInt(l.parent().find(":last").attr("count"));
                                    c.page_increment = l.parent().find(":nth-child(2)").attr("count") - c.min_pages;
                                    m = true;
                                    return false
                                }
                            });
                            if (m) {
                                j = true;
                                return false
                            }
                        } else {
                            if (jQuery(this).attr("sku") == c.sku) {
                                c.$pageconf = l.parents(k).find("page");
                                c.$coverconf = l.parents(k).find("> cover");
                                c.$exportconf = l.parents(k).find("export_format");
                                c.$previewconf = l.parents(k).find("preview");
                                c.page_count = parseInt(l.attr("count"));
                                c.min_pages = l.parent(":first").attr("count");
                                c.max_pages = l.parent().last().attr("count");
                                c.page_increment = l.parent().find(":nth-child(2)").attr("count") - c.min_pages;
                                j = true;
                                return false
                            }
                        }
                    });
                    if (!j) {
                        if (c.type != "book_format_set_2") {
                            c.xml = undefined;
                            c.type = "book_format_set_2";
                            c.parse(h)
                        } else {
                            if (c.sku == "") {
                                c.sku = "<empty_sku>"
                            }
                            c.error("sku " + c.sku + " not found")
                        }
                        return
                    }
                    if (typeof h == "function") {
                        var i = g();
                        i.page_spec.min_pages = c.min_pages;
                        i.page_spec.max_pages = c.max_pages;
                        i.page_spec.num_pages = c.page_count;
                        i.page_spec.inc_pages = c.page_increment;
                        if (c.type == "agenda_format_set") {
                            i.page_spec.prerender = "agenda"
                        }
                        h(i)
                    }
                };
                if (typeof c.xml != "undefined") {
                    e()
                } else {
                    jQuery.get(c.ressourceurl + c.type + ".xml?" + c.domainhash, function (i) {
                        c.xml = i;
                        e()
                    }).error(function () {
                        if (c.sku == "") {
                            c.sku = "<empty_sku>"
                        }
                        c.error("sku " + c.sku + " not found")
                    })
                }
                break;
            default:
                c.error("unknown formatset");
                break
        }
    };
    var c = this
};
let _gloBalCanvasFileArray = [];  //全局的缩略图base64
var PagesManager = function (a) {
    //截掉标题为['封底','封底封面','封面']的
    let _pages = [];
    let _views = [];
    // a.pages.map(g => {
    //     if (g.view.name != '封底' && g.view.name != '封底封面' && g.view.name != '封面') {
    //         _pages.push(g);
    //     }
    // })
    // a.views.map(g => {
    //     if (g.name != '封底' && g.name != '封底封面' && g.name != '封面') {
    //         _views.push(g);
    //     }
    // })
    // a.pages = _pages
    // a.views = _views
    // a.pages = a.pages.slice(3, a.pages.length);
    // a.theme_data.pages = a.theme_data.pages.slice(3,a.theme_data.pages.length);
    // a.views = a.views.slice(3, a.pages.length);

    console.log('PagesManager', a)

    this.creation = a;
    this.page_dom = "#pages";
    this.preview_height = 85;
    let canvasIdArray = [];
    let canvasNameArray = [];  //缩略图name
    let fileArray = [];
    let _fileArray = [];
    function canvasToTempFilePathMain() {
        function getCanvasNodeToTempFile(id, fileName) {
            return new Promise((resolve, reject) => {
                var canvasElement = document.getElementById(id);
                var MIME_TYPE = "image/png";
                var imgURL = canvasElement.toDataURL(MIME_TYPE);
                resolve(imgURL);
            })
        }

        function getCanvasElement() {
            let index = 0;
            function fetchCanvasContext() {
                getCanvasNodeToTempFile(canvasIdArray[index], 'name_' + canvasIdArray[index]).then(res => {
                    let obj = {};
                    obj.key = 'name_' + canvasIdArray[index];
                    obj.value = res;
                    obj.name = canvasNameArray[index];
                    fileArray.push(obj);
                    _fileArray.push(res);
                    if (index < canvasIdArray.length - 1) {
                        fetchCanvasContext();
                        index++;
                    }
                    else {
                        console.log('fileArray', fileArray)
                        console.log('_fileArray', _fileArray)
                        // console.log('canvasNameArray', canvasNameArray)
                        _gloBalCanvasFileArray = _fileArray;
                    }
                }).catch(res => {
                    console.log('base64 get fail :', res)
                });
            }
            fetchCanvasContext();
        }
        getCanvasElement();
    }

    this.reorder_pages = function (e) {
        var f = jQuery(e).attr("data-index") | 0;
        var d = jQuery(e).index() | 0;
        c.creation.movePage(f, d);
        jQuery(".page:visible").each(function () {
            jQuery(this).attr("data-index", jQuery(this).index())
        });
        jQuery.each(c.creation.views, function (g, h) {
            jQuery(".page[data-index=" + g + "]").find("p").html(h.name)
        })
    };
    this.set_pages = function () {
        // console.log('set_pages c', c)
        // console.log('set_pages  a', a)
        if (c.creation.views.length > 1) {
            jQuery.each(c.creation.views, function (k, l) {
                b(k, l)
            });
            jQuery(c.page_dom).unbind().sortable({
                handle: ".handle",
                items: ".page:not(.not-sortable)",
                axis: "x",
                stop: function (k, l) {
                    c.reorder_pages(l.item);
                    controller.start()
                },
                start: function () {
                    controller.destroy()
                }
            });
            jQuery(".pages-wrapper").show();
            jQuery(".creatorpage").show()
        }
        if (a.product.underlay) {
            var i = document.getElementById("pageflipper");
            switch (a.product.underlay) {
                case "gift":
                    flipper = new GiftUnderlay(i, c.creation, 0, 0);
                    break;
                case "card":
                    flipper = new _kw136(i, c.creation, 0, 0);
                    break;
                case "card-folded":
                    flipper = new _kw137(i, c.creation, 0, 0);
                    break;
                case "canvas":
                    flipper = new CanvasUnderlay(i, c.creation, 0, 0);
                    break;
                case "calendar":
                    flipper = new CalendarUnderlay(i, c.creation, 0, 0);
                    break;
                case "book":
                    flipper = new _kw135(i, c.creation, 0, 0);
                    break;
                default:
                    jQuery("#creator").css("box-shadow", "0 0 15px rgba(0,0,0,.75)");
                    break
            }
        } else {
            jQuery("#creator").css("box-shadow", "0 0 15px rgba(0,0,0,.75)")
        }
        if (c.creation.pages[0].spec.preview3D && KWP_utils.webgl_detect()) {
            switch (c.creation.pages[0].spec.preview3D.type) {
                case "canvas":
                    if (!KWC.preview3D_loaded) {
                        KWC.preview3D_loaded = true;
                        var h = jQuery(window).height() * 0.8 | 0;
                        var f = jQuery(window).width() * 0.8 | 0;
                        var d = new Canvas3DPreview(f, h);
                        var j = d.getCanvas();
                        jQuery("#preview_modal").find(".modal-body").css("max-height", "none").empty();
                        var e = jQuery("<img src='" + KWP_CONF.static_serv + "img/preview3D_left.png'>");
                        e.css({
                            position: "absolute",
                            left: "10px",
                            bottom: "10px",
                            height: "25%"
                        });
                        var g = jQuery("<img src='" + KWP_CONF.static_serv + "img/preview3D_right.png'>");
                        g.css({
                            position: "absolute",
                            right: "10px",
                            bottom: "10px",
                            height: "25%"
                        });
                        jQuery("#preview_modal").find(".modal-body").append(e);
                        jQuery("#preview_modal").find(".modal-body").append(g);
                        jQuery("#preview_modal").find(".modal-body").append(j);
                        jQuery("#preview_modal").css({
                            height: "90%",
                            width: "90%",
                            marginLeft: "-45%",
                            top: "5%",
                            textAlign: "center"
                        });
                        jQuery("#preview_3D").html("<p class='kwp-icon p-icon'><span>" + KWC.translate("Preview") + "</span></p>").on("click", function () {
                            jQuery("#preview_modal").modal()
                        });
                        jQuery("#preview_modal").on("hide", function () {
                            d.hide()
                        }).on("show", function () {
                            var l = jQuery(window).height() * 0.8 | 0;
                            var k = jQuery(window).width() * 0.8 | 0;
                            d.setSize(k, l);
                            d.show(c.creation)
                        });
                        jQuery(window).on("resize", function () {
                            var l = jQuery(window).height() * 0.8 | 0;
                            var k = jQuery(window).width() * 0.8 | 0;
                            d.setSize(k, l)
                        });
                        c.creation.views[0].page.addUpdateListener(function () {
                            jQuery("#preview_3D").html("<p class='kwp-icon p-icon'><span>" + KWC.translate("Preview") + "</span></p>");
                            jQuery("#preview_3D p").prepend(c.creation._kw172(40))
                        })
                    }
                    break;
                default:
                    break
            }
        } else {
            if (c.creation.pages[0].spec.preview && c.creation.pages[0].spec.preview.position.radius > 0) {
                c.creation.views[0].page.addUpdateListener(function () {
                    jQuery("#preview_btn").html("<p class='kwp-icon p-icon'><span>" + KWC.translate("Preview") + "</span></p>");
                    jQuery("#preview_btn p").append(c.creation._kw172(40))
                })
            }
        }
        jQuery(".page").width(c.get_max_pages_width())
        // console.log('canvasIdArray', canvasIdArray)
        canvasToTempFilePathMain();
    };
    this.get_max_pages_width = function () {
        var d = -1;
        jQuery(".page").each(function () {
            if (jQuery(this).width() > d) {
                d = jQuery(this).width()
            }
        });
        return d
    };
    this.move_to_selected = function () {
        var f = jQuery(".page.active");
        var h = f.index();
        var g = 0;
        for (var d = 0; d <= h; d++) {
            g += jQuery(".page[data-index=" + d + "]").outerWidth(true)
        }
        var e = g / h / 3;
        jQuery("#pages").scrollLeft(g - jQuery("#pages").innerWidth() / 2 - e)
    };
    this.update_pages = function () {
        jQuery(c.page_dom).empty();
        jQuery.each(c.creation.views, function (e, f) {
            b(e, f)
        });
        var d = jQuery(".page.active").index();
        if (typeof flipper != "undefined") {
            flipper.refresh(true, d);
            controller.set_sizes();
            flipper.turn(d, d)
        }
        a._kw162(d);
        editor._kw201(a._kw161());
        controller.set_sizes();
        jQuery(".page").width(c.get_max_pages_width())
    };
    var b = function (e, g) {
        if (g.name != '封底' && g.name != '封底封面' && g.name != '封面') {
            var h = jQuery("#pageblock_tpl").html().replace("#page_name#", g.name).replace("#page_index#", e).replace("#active#", (g.selected ? " active" : "")).replace("#canvas_index#", e);
            jQuery("#pages").append(h);
            if (!g.can_move) {
                jQuery(".page:last-child").addClass("not-sortable").find(".handle").remove()
            }
            var f = jQuery("div[data-index=" + e + "] .pagethumb").get()[0];
            if (typeof g.crop != "undefined") {
                var d = g.crop.width;
                var i = g.crop.height
            } else {
                var d = 1;
                var i = 1
            }
            var j = g.page.height / c.preview_height;
            f.width = g.page.width / j * d;
            f.height = c.preview_height * i;
            g._kw193(f);
            g.page.addUpdateListener(function () {
                g._kw193(f)
            })
            canvasIdArray.push('canvas_' + e);
            canvasNameArray.push('name_' + g.name);
        }
    };
    var c = this
};
jQuery.fn.koffeeCreator = function (a) {
    var c = this;
    var b = function () {
        if (!window.application_started) {
            if (typeof a.product == "undefined") {
                alert("A product must be defined for Koffeeware Creator Five");
                return
            }
            if (typeof a.app_keys != "undefined") {
                if (typeof a.uri_pathname != "undefined") {
                    hello.init(a.app_keys, {
                        scope: "files, photos",
                        redirect_uri: a.uri_pathname.indexOf("http") == 0 ? a.uri_pathname : document.location.origin + a.uri_pathname
                    })
                } else {
                    hello.init(a.app_keys, {
                        scope: "files, photos"
                    })
                }
            }
            window.KWP = {
                imagesLoaded: {},
                textRendered: {},
                fbPhotosSelected: [],
                fbFriendsRetrieved: false,
                selectedMenu: KWP_CONF.selectedMenu,
                CORScapable: false,
                save_timer: 0
            };
            window.manager = new KWPCanvasManager();
            if (typeof fsp == "object") {
                window.manager.fsp = fsp
            }
            window.creation;
            var d = function (f) {
                window.pages_manager = new PagesManager(creation);
                window.editor;
                window.controller;
                window.manager;
                window.cliparts;
                window.backgrounds;
                window.foregrounds;
                window.kwtemplates;
                window.image_frames;
                window.text_frames;
                window.flipper;
                window.cart_posting = typeof (a.uploadComplete == "function") ? a.uploadComplete : function (h, g) {
                    alert("You must define an uploadComplete function callback")
                };
                if (typeof a.customOrderInit == "function") {
                    window.customOrderInit = a.customOrderInit
                }

                if (typeof a.doUploadCompleteCallback == "function") {
                    window.upload_callback = a.doUploadCompleteCallback
                }
                window.uploader = new KWPUpload();
                if (KWP_CONF.autoshare) {
                    window.uploader.autoshare = true
                }
                if (f) {
                    window.uploader.save_once_triggered = true;
                    window.uploader.should_save = true
                }
                window.uploader.progressCallback = typeof (a.onUploadProgress == "function") ? a.onUploadProgress : false;
                KWP_utils.setAuthorization();
                if (typeof a.selected_themes != "undefined") {
                    KWP_CONF.selectedCategory = a.selected_themes
                }
                if (typeof a.search_enabled != "undefined") {
                    KWP_CONF.searchEnabled = a.search_enabled
                }
                var e = KWP_CONF.cootoo_serv + "catalog/view/javascript/editor/structure.shtml?" + jQuery.MD5(document.domain).substr(8, 12);
                jQuery.get(e, function (j) {
                    var g = Mustache.render(j, {
                        static_url: KWP_CONF.static_serv,
                        trans: function () {
                            return function (t) {
                                return KWC.translate(t)
                            }
                        }
                    });
                    c.append(g);
                    if (KWP_CONF.welcomeScreen && !f) {
                        jQuery("#welcome_modal .modal-body").html("<img style='margin-top:20%;' src='" + KWP_CONF.static_serv + "img/applicationloader64.gif'>");
                        jQuery("#welcome_modal").modal()
                    }
                    if (KWP_CONF.editphoto_button) {
                        jQuery("#edit_photo").removeClass("hide").show()
                    }
                    if (!is_mobile) {
                        jQuery("*[rel=tooltip]").tooltip()
                    }
                    window.application_started = true;
                    pages_manager.set_pages();
                    pages_manager.move_to_selected();
                    var p = creation._kw161();
                    editor = new Editor(manager, document.getElementById("creator"));
                    if (a.basic_editor) {
                        editor.basic = true
                    }
                    editor._kw201(p);
                    var s = KWP_utils.getUsedFontList(creation);
                    jQuery.each(s, function (t, u) {
                        KWP_utils.addFontToList(u)
                    });
                    controller = new KWPController[a.controller || "main"].init("#" + c.attr("id"), !!a.hide_interface);
                    manager = new KWPCanvasManager();
                    if (typeof fsp == "object") {
                        window.manager.fsp = fsp
                    }
                    if (!!a.manual_fill_visible) {
                        jQuery("#manual_fill").removeClass("hide").show()
                    }
                    if (typeof a.KWcliparts == "undefined") {
                        cliparts = new KWP_drivers.FromS3();
                        cliparts.paste_to = "cliparts_zone";
                        cliparts.ressource_url = KWP_CONF.s3bucket + "creator5/cliparts/descriptor.json";
                        if (typeof a.resources_directory != "undefined") {
                            cliparts.ressource_url = a.resources_directory + "cliparts/descriptor.json"
                        }
                        cliparts.set_list("clipart", function () {
                            if (KWP_CONF.searchEnabled) {
                                cliparts.set_search("cliparts_search");
                                if (KWP_CONF.clipartsSelected) {
                                    cliparts.set_option(KWP_CONF.clipartsSelected)
                                }
                            }
                        })
                    } else {
                        cliparts = new KWP_drivers.FromKW();
                        cliparts.lang = a.KWcliparts.lang || "fr";
                        cliparts.paste_to = "cliparts_zone";
                        cliparts.base_url = a.KWcliparts.base;
                        cliparts.ressource_url = a.KWcliparts.base + a.KWcliparts.descriptor;
                        cliparts.set_list("clipart", function () {
                            if (KWP_CONF.searchEnabled) {
                                cliparts.set_search("cliparts_search")
                            }
                        })
                    } if (typeof a.KWbackgrounds == "undefined") {
                        backgrounds = new KWP_drivers.FromS3();
                        backgrounds.paste_to = "backgrounds_zone";
                        backgrounds.ressource_url = KWP_CONF.s3bucket + "creator5/backgrounds/descriptor.json";
                        if (typeof a.resources_directory != "undefined") {
                            backgrounds.ressource_url = a.resources_directory + "backgrounds/descriptor.json"
                        }
                        backgrounds.set_list("background", function () {
                            if (KWP_CONF.searchEnabled) {
                                backgrounds.set_search("background_search");
                                if (KWP_CONF.backgroundsSelected) {
                                    backgrounds.set_option(KWP_CONF.backgroundsSelected)
                                }
                            }
                        })
                    } else {
                        if (typeof a.magnetic_calendar != "undefined") {
                            if (jQuery(".cficon[data-related=backgrounds_block]")) {
                                jQuery(".cficon[data-related=backgrounds_block]").addClass("hide")
                            } else {
                                jQuery("#backgrounds_block").parent().addClass("hide")
                            }
                        }
                        backgrounds = new KWP_drivers.FromKW();
                        backgrounds.lang = a.KWbackgrounds.lang || "fr";
                        backgrounds.paste_to = "backgrounds_zone";
                        backgrounds.base_url = a.KWbackgrounds.base;
                        backgrounds.ressource_url = a.KWbackgrounds.base + a.KWbackgrounds.descriptor;
                        backgrounds.set_list("background", function () {
                            if (KWP_CONF.searchEnabled) {
                                backgrounds.set_search("background_search")
                            }
                        })
                    } if (KWP_CONF.exposePatterns) {
                        jQuery("#patterns_block").parent().removeClass("hide");
                        jQuery(".cficon[data-related=patterns_block]").removeClass("hide");
                        patterns = new KWP_drivers.FromS3();
                        patterns.paste_to = "patterns_zone";
                        patterns.ressource_url = KWP_CONF.s3bucket + "creator5/patterns/descriptor.json";
                        if (typeof a.resources_directory != "undefined") {
                            patterns.ressource_url = a.resources_directory + "patterns/descriptor.json"
                        }
                        patterns.set_list("pattern", function () {
                            if (KWP_CONF.searchEnabled) {
                                patterns.set_search("pattern_search");
                                if (KWP_CONF.patternsSelected) {
                                    patterns.set_option(KWP_CONF.patternsSelected)
                                }
                            }
                        })
                    }
                    if (typeof a.KWforegrounds != "undefined") {
                        if (a.KWforegrounds.descriptor) {
                            if (typeof a.magnetic_calendar == "undefined") {
                                jQuery("#foregrounds_block").parent().removeClass("hide");
                                jQuery(".cficon[data-related=foregrounds_block]").removeClass("hide")
                            }
                            foregrounds = new KWP_drivers.FromKW();
                            foregrounds.lang = a.KWforegrounds.lang || "fr";
                            foregrounds.paste_to = "foregrounds_zone";
                            foregrounds.base_url = a.KWforegrounds.base;
                            foregrounds.ressource_url = a.KWforegrounds.base + a.KWforegrounds.descriptor;
                            foregrounds.set_list("foreground", function () {
                                if (KWP_CONF.searchEnabled) {
                                    foregrounds.set_search("foreground_search")
                                }
                            })
                        }
                    }
                    if (creation.product.type == "calendar" || creation.product.type == "agenda") {
                        jQuery("#calendar_block").parent().removeClass("hide");
                        jQuery(".cficon[data-related=calendar_block]").removeClass("hide");
                        var m = new Date().getFullYear();
                        var i = m + 1;
                        for (var o = m; o <= i; o++) {
                            for (var q = 0; q < KWC.month_names.length; q++) {
                                var k = KWC.month_names[q];
                                jQuery("#calendar_starting_month").append("<option value='" + q + "-" + o + "'>" + KWC.translate(k) + " " + o + "</option>")
                            }
                        }
                        if (f && f.properties && typeof f.properties.start_month != "undefined" && typeof f.properties.start_year != "undefined") {
                            jQuery("#calendar_starting_month").val(f.properties.start_month + "-" + f.properties.start_year);
                            creation.setStartMonth(f.properties.start_year, f.properties.start_month);
                            pages_manager.update_pages()
                        } else {
                            var l = new Date();
                            l.setTime(l.getTime() + (1000 * 3600 * 24 * 30 * 6));
                            var h = l.getUTCFullYear();
                            jQuery("#calendar_starting_month").val("0-" + h);
                            creation.setStartMonth(h, 0)
                        }
                        jQuery("#calendar_starting_month").on("change", function () {
                            var u = jQuery(this).val().split("-")[0] | 0;
                            var t = jQuery(this).val().split("-")[1] | 0;
                            creation.setStartMonth(t, u);
                            pages_manager.update_pages()
                        })
                    }
                    if (typeof a.KWframes == "undefined") {
                        image_frames = new KWP_drivers.FromS3();
                        image_frames.ressource_url = KWP_CONF.s3bucket + "creator5/frames/descriptor.json";
                        if (typeof a.resources_directory != "undefined") {
                            image_frames.ressource_url = a.resources_directory + "frames/descriptor.json"
                        }
                        if (KWP_CONF.forced_frame_category) {
                            image_frames.forced_category = KWP_CONF.forced_frame_category
                        }
                        image_frames.set_list("frame", function () { })
                    } else {
                        image_frames = new KWP_drivers.FromKW();
                        image_frames.base_url = a.KWframes.base;
                        image_frames.ressource_url = a.KWframes.base + a.KWframes.descriptor;
                        image_frames.set_frame_list("frame", function () { })
                    } if (typeof a.KWtextframes == "undefined") {
                        text_frames = new KWP_drivers.FromS3();
                        text_frames.ressource_url = KWP_CONF.s3bucket + "creator5/textframes/descriptor.json";
                        if (typeof a.resources_directory != "undefined") {
                            text_frames.ressource_url = a.resources_directory + "textframes/descriptor.json"
                        }
                        if (KWP_CONF.forced_textframe_category) {
                            text_frames.forced_category = KWP_CONF.forced_textframe_category
                        }
                        text_frames.set_list("textframe", function () {
                            text_frames.paste_to("textframes_zone");
                            if (KWP_CONF.textframe_category_chooser) {
                                $s = jQuery("<select style='display:block; width:100%'>");
                                var u = [KWC.translate("Select a textframe category")];
                                for (var t in text_frames.frame_categories) {
                                    var v = text_frames.frame_categories[t];
                                    if (u.indexOf(v[0]) == -1) {
                                        u.push(v[0])
                                    }
                                }
                                for (var t in u) {
                                    $s.append("<option value='" + u[t] + "' " + (text_frames.forced_category == u[t] ? "selected" : "") + ">" + KWC.translate(u[t]) + "</option>")
                                }
                                $s.on("change", function () {
                                    if (jQuery(this).val() == KWC.translate("Select a textframe category")) {
                                        return
                                    }
                                    text_frames.forced_category = jQuery(this).val();
                                    jQuery("#textframes_zone .menu-thumbnail").remove();
                                    text_frames.set_list("textframe", function () {
                                        text_frames.paste_to("textframes_zone");
                                        KWP_utils._kw124();
                                        jQuery(".object-menu").scrollTop(999)
                                    })
                                });
                                jQuery("#textframes_zone").prepend($s)
                            }
                        })
                    } else {
                        text_frames = new KWP_drivers.FromKW();
                        text_frames.base_url = a.KWtextframes.base;
                        text_frames.ressource_url = a.KWtextframes.base + a.KWtextframes.descriptor;
                        text_frames.set_frame_list("textframe", function () {
                            text_frames.paste_to("textframes_zone")
                        })
                    } if (creation.product.type != "agenda") {
                        if (typeof a.KWtemplates != "undefined") {
                            kwtemplates = new KWP_drivers.FromKW();
                            kwtemplates.paste_to = "theme_zone";
                            kwtemplates.lang = a.KWtemplates.lang || "fr";
                            kwtemplates.base_url = a.KWtemplates.base;
                            kwtemplates.ressource_url = a.KWtemplates.base + a.KWtemplates.descriptor;
                            kwtemplates.set_template_list(function () {
                                if (KWP_CONF.searchEnabled) {
                                    kwtemplates.set_template_search()
                                }
                                if (!f && typeof a.template_autoload != "undefined") {
                                    jQuery.get(kwtemplates.tplist[Object.keys(kwtemplates.tplist)[0]].url, function (w) {
                                        var v = jQuery.parseXML(w);
                                        creation.applyCreator2ThemeImpl(v ? v : w);
                                        if (KWP_utils.unusedPhotos() > 0) {
                                            jQuery("#autofill_toggle").removeClass("disabled").popover("show")
                                        }
                                        if (typeof flipper == "object") {
                                            flipper.refresh(true)
                                        }
                                    })
                                }
                                if (creation.product.underlay == "book") {
                                    kwtemplates.set_layouts()
                                }
                                kwtemplates.display_templates();
                                if (KWP_CONF.welcomeScreen && !f) {
                                    $body = jQuery("#welcome_modal").find(".modal-body");
                                    $body.empty();
                                    for (var t in kwtemplates.hash_list) {
                                        var u = kwtemplates.hash_list[t];
                                        if (kwtemplates.tplist[u]) {
                                            $div = jQuery("<div class='kwtheme' data-descriptor='" + kwtemplates.tplist[u].url + "' data-hash='" + u + "'>");
                                            $div.append("<img src='" + kwtemplates.tplist[u].thumbnail + "'>");
                                            $body.append($div)
                                        }
                                    }
                                    $body.find(".kwtheme").on("click", function () {
                                        jQuery("#welcome_modal").modal("hide")
                                    })
                                }
                            })
                        } else {
                            kwtemplates = new KWP_drivers.FromS3();
                            kwtemplates.paste_to = "theme_zone";
                            kwtemplates.ressource_url = KWP_CONF.s3bucket + "creator5/themes/descriptor.json";
                            if (typeof a.resources_directory != "undefined") {
                                kwtemplates.ressource_url = a.resources_directory + "themes/descriptor.json"
                            }
                            if (typeof a.themes_type != "undefined") {
                                kwtemplates.themes_type = a.themes_type
                            }
                            kwtemplates.set_template_list(function () {
                                if (KWP_CONF.searchEnabled) {
                                    kwtemplates.set_template_search()
                                }
                                if (!f && typeof a.template_autoload != "undefined") {
                                    jQuery.getJSON(kwtemplates.tplist[Object.keys(kwtemplates.tplist)[0]].url, function (v) {
                                        creation.applyThemeImpl(v, manager);
                                        if (KWP_utils.unusedPhotos() > 0) {
                                            jQuery("#autofill_toggle").removeClass("disabled").popover("show")
                                        }
                                        if (typeof flipper == "object") {
                                            flipper.refresh(true)
                                        }
                                    })
                                }
                                if (creation.product.underlay == "book" && !KWP_CONF.hide_layouts) {
                                    kwtemplates.set_layouts()
                                }
                                if (typeof a.load_as_theme != "undefined" && a.load_as_theme) {
                                    window.manager.getTheme(a.load_project, function (w) {
                                        if (w) {
                                            window.creation._kw109(w, window.manager, a.load_project);
                                            var v = KWP_utils.getUsedFontList(creation);
                                            jQuery.each(v, function (x, y) {
                                                KWP_utils.addFontToList(y)
                                            });
                                            KWP_utils.buildFontList()
                                        }
                                    })
                                }
                                if (KWP_CONF.welcomeScreen && !f) {
                                    $body = jQuery("#welcome_modal").find(".modal-body");
                                    $body.empty();
                                    for (var t in kwtemplates.hash_list) {
                                        var u = kwtemplates.hash_list[t];
                                        if (kwtemplates.tplist[u]) {
                                            $div = jQuery("<div class='theme' data-descriptor='" + kwtemplates.tplist[u].url + "' data-hash='" + u + "'>");
                                            $div.append("<img src='" + kwtemplates.tplist[u].thumbnail + "'>");
                                            $body.append($div)
                                        }
                                    }
                                    $body.find(".theme").on("click", function () {
                                        jQuery("#welcome_modal").modal("hide")
                                    })
                                }
                            })
                        }
                    } else {
                        if (typeof jQuery(".cficon[data-related=themes_block]")[0] != "undefined") {
                            jQuery(".cficon[data-related=themes_block]").addClass("hide")
                        } else {
                            jQuery("#themes_block").parent().addClass("hide")
                        }
                        jQuery("#calendar_block").parent().find(".title span").html(KWC.translate("Agenda"))
                    }
                    KWP_utils.buildFilterList();
                    KWP_utils.buildFontList();
                    KWP_utils.colorPicker = new ColorPicker(document.getElementById("text_color_picker"));
                    jQuery("#" + KWP.selectedMenu).prev().click();
                    jQuery(".cficon[data-related=" + KWP.selectedMenu + "]").click();
                    if (KWP.CORScapable && typeof a.import_modules != "undefined") {
                        for (var r in a.import_modules) {
                            (function (t) {
                                var u = a.import_modules[t];
                                var v = jQuery("<button/>").addClass("btn").attr("title", u.name);
                                v.on("click", function (w) {
                                    w.preventDefault();
                                    u.trigger();
                                    w.stopPropagation()
                                });
                                v.html("<img src='" + u.icon + "' alt='" + u.name + "'>");
                                jQuery("#photos_btn_group").append(v)
                            })(r)
                        }
                    }
                    jQuery("#photos_btn_group button").css("width", 100 / jQuery("#photos_btn_group button").length + "%");
                    if (typeof a.saveStart == "function") {
                        window.saveStart = a.saveStart
                    }
                    if (typeof a.onOrder == "function") {
                        window.onOrder = a.onOrder
                    }
                    if (typeof a.onExit == "function") {
                        jQuery("#exit_project").removeAttr("style");
                        jQuery("#exit_project").on("click", function () {
                            a.onExit()
                        })
                    }
                    if (typeof a.saveAs == "function") {
                        jQuery("#save_project_as").removeAttr("style");
                        jQuery("#save_project_as").on("click", function () {
                            a.saveAs(KWP_utils.saveProject)
                        })
                    }
                    if (typeof a.saveComplete == "function") {
                        jQuery("#save_project").parent().show();
                        if (typeof a.saveAction == "function") {
                            jQuery("#save_project").on("click", function () {
                                a.saveAction(KWP_utils.saveProject)
                            })
                        } else {
                            jQuery("#save_project").on("click", KWP_utils.saveProject)
                        }
                        window.save_callback = a.saveComplete;


                    } else {
                        jQuery("#save_project").parent().hide()
                    } if (typeof f != "undefined") {
                        KWP_utils.loadPhotosFromProject(window.creation, f.additional_photos);
                        if (f.properties && typeof f.properties.creationid != "undefined") {
                            window.uploader.creation_id = f.properties.creationid
                        }
                    }
                    if (typeof sku != "undefined" && creation.product.properties.sku && typeof set_options != "undefined") {
                        sku = creation.product.properties.sku;
                        set_options(creation.product.properties.sku)
                    } else {
                        if (typeof sku != "undefined") {
                            creation.product.properties.sku = sku
                        }
                    } if (typeof a.onload == "function") {
                        a.onload()
                    }
                    controller.set_sizes()
                })
            };
            KWP_utils.CORSimgTester(function () {
                KWP.CORScapable = true
            }, function () {
                if (KWP.CORScapable && typeof a.load_project != "undefined" && a.load_project != null && !a.load_as_theme) {
                    registerFilters();
                    KWP_utils.loadProject(a.load_project, function (e) {
                        if (typeof sku != "undefined" && e.product.properties.sku) {
                            sku = e.product.properties.sku
                        }
                        window.creation = Creation._kw163(e, window.manager, false, a.load_project);
                        d(e)
                    })
                } else {
                    window.creation = new Creation(a.product);
                    d()
                }
            })
        }
    };
    if (a.creator_five_id) {
        KWP_CONF.creatorFiveUrl = KWP_CONF.creatorFiveUrl || "http://" + KWP_CONF.client + ".creatorfive.com";
        jQuery.ajax({
            url: KWP_CONF.creatorFiveUrl + "/api/get-product/" + a.creator_five_id + "/",
            contentType: "application/json",
            dataType: "json",
            success: function (j) {
                KWC.locale = {};
                var f = (navigator.language || navigator.userLanguage || "en");
                if (navigator.languages && navigator.languages[0]) {
                    f = navigator.languages[0]
                }
                f.substr(0, 2);
                for (idx in j.locale) {
                    var i = j.locale[idx];
                    if (i.lang == f) {
                        KWC.locale = i.locale
                    }
                }
                j.product.metrics = j.product.metrics || "mm";
                var d = j.product.page_spec;
                var g = j.product.cover_spec;
                var h = [d];
                if (g) {
                    h.push(g)
                }
                for (var m = 0; m < h.length; m++) {
                    var e = h[m];
                    if (j.product.metrics != "mm") {
                        switch (j.product.metrics) {
                            case "cm":
                                var k = 10;
                                break;
                            case "in":
                                var k = 25.4;
                                break;
                            default:
                                continue
                        }
                        e.width = e.width * k;
                        e.height = e.height * k;
                        if (e.border) {
                            e.border = e.border * k
                        }
                        if (e.spine_width) {
                            e.spine_width[0][1] = e.spine_width[0][1] * k;
                            e.spine_width[1][1] = e.spine_width[1][1] * k
                        }
                        if (e.margin && e.margin.top) {
                            e.margin.top = e.margin.top * k
                        }
                        if (e.margin && e.margin.right) {
                            e.margin.right = e.margin.right * k
                        }
                        if (e.margin && e.margin.bottom) {
                            e.margin.bottom = e.margin.bottom * k
                        }
                        if (e.margin && e.margin.left) {
                            e.margin.left = e.margin.left * k
                        }
                        if (e.bleed && e.bleed.top) {
                            e.bleed.top = e.bleed.top * k
                        }
                        if (e.bleed && e.bleed.right) {
                            e.bleed.right = e.bleed.right * k
                        }
                        if (e.bleed && e.bleed.bottom) {
                            e.bleed.bottom = e.bleed.bottom * k
                        }
                        if (e.bleed && e.bleed.left) {
                            e.bleed.left = e.bleed.left * k
                        }
                    }
                }
                switch (j.type) {
                    case "photo_books":
                        a.product = new Book("hard_cover_book", j.product.cover_spec, j.product.page_spec);
                        break;
                    case "cards":
                        switch (j.product.type) {
                            case "card-folded":
                                a.product = new CardProduct("card-folded", j.product.page_spec);
                                break;
                            case "card-simple":
                                a.product = new CardProduct("card-simple", j.product.page_spec);
                                break;
                            case "card-double":
                                a.product = new CardProduct("card-double", j.product.page_spec);
                                break
                        }
                        break;
                    case "agenda":
                        a.product = new AgendaProduct(j.product.cover_spec, j.product.page_spec);
                        break;
                    case "calendars":
                        a.product = new CalendarProduct(j.product.page_spec);
                        break;
                    case "canvas_prints":
                        j.product.page_spec.preview3D = {
                            type: "canvas",
                            grain: (j.product.page_spec.border > 0)
                        };
                        a.product = new CanvasProduct(j.product.page_spec);
                        break;
                    default:
                        a.product = new GiftProduct(j.product.page_spec);
                        break
                }
                b()
            }
        })
    } else {
        b()
    }
    return this
};
(function () {
    var aD, aC, aL, ab, q, o, l, aB, aA, at, k, al, ak, ar, aK, f, e, d, c, aj, ax, au, aP, ay, av, ai, a, aI, aH, aO, ah, aG, az, ag, aF, af, aq, aE, ae, ap, aN, ad, ao, aJ, an, ac, am, aw, aM = [].indexOf || function (h) {
        for (var i = 0, g = this.length; i < g; i++) {
            if (i in this && this[i] === h) {
                return i
            }
        }
        return -1
    },
        b = {}.hasOwnProperty;
    aN = [];
    aJ = [];
    an = null;
    aO = [];
    aL = [];
    aq = !1;
    ag = "ctrl";
    af = "meta alt option ctrl shift cmd".split(" ");
    am = [];
    aA = {
        keys: [],
        count: 0
    };
    ar = function (h, p) {
        var g;
        if (h.filter) {
            return h.filter(p)
        }
        var m, j, i;
        i = [];
        m = 0;
        for (j = h.length; m < j; m++) {
            g = h[m], p(g) && i.push(g)
        }
        return i
    };
    aG = function () {
        return console.log.apply(console, arguments)
    };
    at = function (h, m) {
        var g, j, i;
        if (h.length !== m.length) {
            return !1
        }
        j = 0;
        for (i = h.length; j < i; j++) {
            if (g = h[j], !(0 <= aM.call(m, g))) {
                return !1
            }
        }
        return !0
    };
    k = function (h, m) {
        var g, j, i;
        if (h.length !== m.length) {
            return !1
        }
        g = j = 0;
        for (i = h.length; 0 <= i ? j < i : j > i; g = 0 <= i ? ++j : --j) {
            if (h[g] !== m[g]) {
                return !1
            }
        }
        return !0
    };
    aP = function (h, m) {
        var g, j, i;
        j = 0;
        for (i = h.length; j < i; j++) {
            if (g = h[j], 0 > aM.call(m, g)) {
                return !1
            }
        }
        return !0
    };
    ay = function (h, p) {
        var g, m, j, i;
        j = m = 0;
        for (i = h.length; j < i; j++) {
            if (g = h[j], g = p.indexOf(g), g >= m) {
                m = g
            } else {
                return !1
            }
        }
        return !0
    };
    aE = function (g, h) {
        if ((h || keypress.suppress_event_defaults) && !keypress.force_event_defaults) {
            if (g.preventDefault ? g.preventDefault() : g.returnValue = !1, g.stopPropagation) {
                return g.stopPropagation()
            }
        }
    };
    o = function (g) {
        if (g.prevent_repeat) {
            return !1
        }
        if ("function" === typeof g.on_keydown) {
            return !0
        }
    };
    ah = function (h) {
        var m, g, j, i;
        i = h.keys;
        g = 0;
        for (j = i.length; g < j; g++) {
            if (h = i[g], 0 <= aM.call(aO, h)) {
                m = !0;
                break
            }
        }
        return m
    };
    aK = function (h, i, g) {
        "function" === typeof i["on_" + h] && aE(g, !1 === i["on_" + h].call(i["this"], g, i.count));
        "release" === h && (i.count = 0);
        if ("keyup" === h) {
            return i.keyup_fired = !0
        }
    };
    az = function (h, m) {
        var g, j, i;
        j = 0;
        for (i = aN.length; j < i; j++) {
            g = aN[j], (g.is_ordered && k(h, g.keys) || !g.is_ordered && at(h, g.keys)) && m(g)
        }
    };
    f = function (h, m) {
        var g, j, i;
        j = 0;
        for (i = aN.length; j < i; j++) {
            g = aN[j], (g.is_ordered && ay(g.keys, h) || !g.is_ordered && aP(g.keys, h)) && m(g)
        }
    };
    aB = function (g) {
        return 0 <= aM.call(aO, "cmd") && 0 > aM.call(g, "cmd") ? !1 : !0
    };
    e = function (h) {
        var i, g;
        i = [];
        g = ar(aO, function (j) {
            return j !== h
        });
        g.push(h);
        az(g, function (j) {
            if (aB(j.keys)) {
                return i.push(j)
            }
        });
        f(g, function (j) {
            if (!(0 <= aM.call(i, j)) && !j.is_solitary && aB(j.keys)) {
                return i.push(j)
            }
        });
        return i
    };
    c = function (h) {
        var m, g, j, i;
        g = [];
        j = 0;
        for (i = aN.length; j < i; j++) {
            m = aN[j], m.is_sequence || 0 <= aM.call(m.keys, h) && aB(m.keys) && g.push(m)
        }
        return g
    };
    q = function (y) {
        var w, x, v, u, t, i, s, r, m, p, j;
        i = !1;
        t = !0;
        v = !1;
        if (0 <= aM.call(aL, y)) {
            return !0
        }
        if (aL.length) {
            u = s = 0;
            for (p = aL.length; 0 <= p ? s < p : s > p; u = 0 <= p ? ++s : --s) {
                if ((w = aL[u]) && w.is_exclusive && y.is_exclusive) {
                    w = w.keys;
                    if (!i) {
                        r = 0;
                        for (m = w.length; r < m; r++) {
                            if (x = w[r], i = !0, 0 > aM.call(y.keys, x)) {
                                i = !1;
                                break
                            }
                        }
                    }
                    if (t && !i) {
                        j = y.keys;
                        r = 0;
                        for (m = j.length; r < m; r++) {
                            if (x = j[r], t = !1, 0 > aM.call(w, x)) {
                                t = !0;
                                break
                            }
                        }
                    }
                    i && (v ? ao(aL.splice(u, 1)) : (ao(aL.splice(u, 1, y)), v = !0), t = !1)
                }
            }
        }
        t && aL.unshift(y);
        return i || t
    };
    ad = function (h) {
        var m, g, j, i;
        g = j = 0;
        for (i = aL.length; 0 <= i ? j < i : j > i; g = 0 <= i ? ++j : --j) {
            if (m = aL[g], m === h) {
                ao(aL.splice(g, 1));
                break
            }
        }
    };
    ao = function (g) {
        if (g) {
            return g.count = null, g.keyup_fired = null
        }
    };
    ab = function (h, p) {
        var g, m, j, i;
        aJ.push(h);
        m = d();
        if (m.length) {
            j = 0;
            for (i = m.length; j < i; j++) {
                g = m[j], aE(p, g.prevent_default)
            }
            an && clearTimeout(an); - 1 < keypress.sequence_delay && (an = setTimeout(function () {
                return aJ = []
            }, keypress.sequence_delay))
        } else {
            aJ = []
        }
    };
    d = function () {
        var x, v, w, u, t, s, r, h, p, i, m;
        u = [];
        s = 0;
        for (p = aN.length; s < p; s++) {
            x = aN[s];
            v = r = 1;
            for (i = aJ.length; 1 <= i ? r <= i : r >= i; v = 1 <= i ? ++r : --r) {
                if (t = aJ.slice(-v), x.is_sequence) {
                    if (0 > aM.call(x.keys, "shift") && (t = ar(t, function (g) {
                        return "shift" !== g
                    }), !t.length)) {
                        continue
                    }
                    v = h = 0;
                    for (m = t.length; 0 <= m ? h < m : h > m; v = 0 <= m ? ++h : --h) {
                        if (x.keys[v] === t[v]) {
                            w = !0
                        } else {
                            w = !1;
                            break
                        }
                    }
                    w && u.push(x)
                }
            }
        }
        return u
    };
    aj = function (z) {
        var x, y, w, v, u, t, s, i, p, r, h;
        t = 0;
        for (p = aN.length; t < p; t++) {
            if (x = aN[t], x.is_sequence) {
                y = s = 1;
                for (r = aJ.length; 1 <= r ? s <= r : s >= r; y = 1 <= r ? ++s : --s) {
                    if (u = ar(aJ, function (g) {
                        return 0 <= aM.call(x.keys, "shift") ? !0 : "shift" !== g
                    }).slice(-y), x.keys.length === u.length) {
                        y = i = 0;
                        for (h = u.length; 0 <= h ? i < h : i > h; y = 0 <= h ? ++i : --i) {
                            if (v = u[y], !(0 > aM.call(x.keys, "shift") && "shift" === v) && !("shift" === z && 0 > aM.call(x.keys, "shift"))) {
                                if (x.keys[y] === v) {
                                    w = !0
                                } else {
                                    w = !1;
                                    break
                                }
                            }
                        }
                    }
                }
                if (w) {
                    return x
                }
            }
        }
        return !1
    };
    ak = function (h, i) {
        var g;
        if (!i.shiftKey) {
            return !1
        }
        g = aH[h];
        return null != g ? g : !1
    };
    ax = function (h, i, g) {
        if (0 > aM.call(h.keys, i)) {
            return !1
        }
        aE(g, h && h.prevent_default);
        if (0 <= aM.call(aO, i) && !o(h)) {
            return !1
        }
        i = q(h, i);
        h.keyup_fired = !1;
        h.is_counting && "function" === typeof h.on_keydown && (h.count += 1);
        if (i) {
            return aK("keydown", h, g)
        }
    };
    av = function (h, p) {
        var g, m, j, i;
        (m = ak(h, p)) && (h = m);
        ab(h, p);
        (m = aj(h)) && aK("keydown", m, p);
        for (g in aF) {
            m = aF[g], p[m] && (g === h || 0 <= aM.call(aO, g) || aO.push(g))
        }
        for (g in aF) {
            if (m = aF[g], g !== h && 0 <= aM.call(aO, g) && !p[m]) {
                m = j = 0;
                for (i = aO.length; 0 <= i ? j < i : j > i; m = 0 <= i ? ++j : --j) {
                    aO[m] === g && aO.splice(m, 1)
                }
            }
        }
        m = e(h);
        j = 0;
        for (i = m.length; j < i; j++) {
            g = m[j], ax(g, h, p)
        }
        m = c(h);
        if (m.length) {
            j = 0;
            for (i = m.length; j < i; j++) {
                g = m[j], aE(p, g.prevent_default)
            }
        }
        0 > aM.call(aO, h) && aO.push(h)
    };
    au = function (h, m, g) {
        var j, i;
        i = ah(h);
        if (!h.keyup_fired && (j = aO.slice(), j.push(g), !h.is_solitary || at(j, h.keys))) {
            aK("keyup", h, m), h.is_counting && ("function" === typeof h.on_keyup && "function" !== typeof h.on_keydown) && (h.count += 1)
        }
        i || (aK("release", h, m), ad(h))
    };
    ai = function (i, t) {
        var g, r, p, m, j, s;
        r = i;
        (p = ak(i, t)) && (i = p);
        p = aH[r];
        t.shiftKey ? p && 0 <= aM.call(aO, p) || (i = r) : r && 0 <= aM.call(aO, r) || (i = p);
        (m = aj(i)) && aK("keyup", m, t);
        if (0 > aM.call(aO, i)) {
            return !1
        }
        m = j = 0;
        for (s = aO.length; 0 <= s ? j < s : j > s; m = 0 <= s ? ++j : --j) {
            if ((g = aO[m]) === i || g === p || g === r) {
                aO.splice(m, 1);
                break
            }
        }
        r = aL.length;
        p = [];
        m = 0;
        for (j = aL.length; m < j; m++) {
            g = aL[m], 0 <= aM.call(g.keys, i) && p.push(g)
        }
        m = 0;
        for (j = p.length; m < j; m++) {
            g = p[m], au(g, t, i)
        }
        if (1 < r) {
            r = 0;
            for (m = aL.length; r < m; r++) {
                g = aL[r], void 0 === g || 0 <= aM.call(p, g) || ah(g) || ad(g)
            }
        }
    };
    ap = function (h, i) {
        var g;
        if (aq) {
            aO.length && (aO = [])
        } else {
            if (i || aO.length) {
                if (g = al(h.keyCode)) {
                    return i ? av(g, h) : ai(g, h)
                }
            }
        }
    };
    ac = function (h) {
        var m, g, j, i;
        i = [];
        m = g = 0;
        for (j = aN.length; 0 <= j ? g < j : g > j; m = 0 <= j ? ++g : --g) {
            if (h === aN[m]) {
                aN.splice(m, 1);
                break
            } else {
                i.push(void 0)
            }
        }
        return i
    };
    aw = function (h) {
        var p, g, m, j, i;
        h.keys.length || aG("You're trying to bind a combo with no keys.");
        g = j = 0;
        for (i = h.keys.length; 0 <= i ? j < i : j > i; g = 0 <= i ? ++j : --j) {
            m = h.keys[g], (p = a[m]) && (m = h.keys[g] = p), "meta" === m && h.keys.splice(g, 1, ag), "cmd" === m && aG('Warning: use the "meta" key rather than "cmd" for Windows compatibility')
        }
        i = h.keys;
        p = 0;
        for (j = i.length; p < j; p++) {
            if (m = i[p], 0 > aM.call(am, m)) {
                return aG('Do not recognize the key "' + m + '"'), !1
            }
        }
        if (0 <= aM.call(h.keys, "meta") || 0 <= aM.call(h.keys, "cmd")) {
            p = h.keys.slice();
            j = 0;
            for (i = af.length; j < i; j++) {
                m = af[j], -1 < (g = p.indexOf(m)) && p.splice(g, 1)
            }
            1 < p.length && aG("META and CMD key combos cannot have more than 1 non-modifier keys", h, p)
        }
        return !0
    };
    l = function (g) {
        var h;
        if (0 <= aM.call(aO, "cmd") && "cmd" !== (h = al(g.keyCode)) && "shift" !== h && "alt" !== h && "caps" !== h && "tab" !== h) {
            return ap(g, !1)
        }
    };
    window.keypress = {};
    keypress.force_event_defaults = !1;
    keypress.suppress_event_defaults = !1;
    keypress.sequence_delay = 800;
    keypress.get_registered_combos = function () {
        return aN
    };
    keypress.reset = function () {
        aN = []
    };
    keypress.combo = function (h, i, g) {
        null == g && (g = !1);
        return keypress.register_combo({
            keys: h,
            on_keydown: i,
            prevent_default: g
        })
    };
    keypress.counting_combo = function (h, i, g) {
        null == g && (g = !1);
        return keypress.register_combo({
            keys: h,
            is_counting: !0,
            is_ordered: !0,
            on_keydown: i,
            prevent_default: g
        })
    };
    keypress.sequence_combo = function (h, i, g) {
        null == g && (g = !1);
        return keypress.register_combo({
            keys: h,
            on_keydown: i,
            is_sequence: !0,
            prevent_default: g
        })
    };
    keypress.register_combo = function (h) {
        var i, g;
        "string" === typeof h.keys && (h.keys = h.keys.split(" "));
        for (i in aA) {
            b.call(aA, i) && (g = aA[i], null == h[i] && (h[i] = g))
        }
        if (aw(h)) {
            return aN.push(h), !0
        }
    };
    keypress.register_many = function (h) {
        var m, g, j, i;
        i = [];
        g = 0;
        for (j = h.length; g < j; g++) {
            m = h[g], i.push(keypress.register_combo(m))
        }
        return i
    };
    keypress.unregister_combo = function (h) {
        var j, g, i;
        if (!h) {
            return !1
        }
        if (h.keys) {
            return ac(h)
        }
        i = [];
        j = 0;
        for (g = aN.length; j < g; j++) {
            (h = aN[j]) && (at(keys, h.keys) ? i.push(ac(h)) : i.push(void 0))
        }
        return i
    };
    keypress.unregister_many = function (h) {
        var m, g, j, i;
        i = [];
        g = 0;
        for (j = h.length; g < j; g++) {
            m = h[g], i.push(keypress.unregister_combo(m))
        }
        return i
    };
    keypress.listen = function () {
        return aq = !1
    };
    keypress.stop_listening = function () {
        return aq = !0
    };
    al = function (g) {
        return aI[g]
    };
    aF = {
        cmd: "metaKey",
        ctrl: "ctrlKey",
        shift: "shiftKey",
        alt: "altKey"
    };
    a = {
        escape: "esc",
        control: "ctrl",
        command: "cmd",
        "break": "pause",
        windows: "cmd",
        option: "alt",
        caps_lock: "caps",
        apostrophe: "'",
        semicolon: ";",
        tilde: "~",
        accent: "`",
        scroll_lock: "scroll",
        num_lock: "num"
    };
    aH = {
        "/": "?",
        ".": ">",
        ",": "<",
        "'": '"',
        ";": ":",
        "[": "{",
        "]": "}",
        "\\": "|",
        "`": "~",
        "=": "+",
        "-": "_",
        1: "!",
        2: "@",
        3: "#",
        4: "$",
        5: "%",
        6: "^",
        7: "&",
        8: "*",
        9: "(",
        "0": ")"
    };
    aI = {
        "0": "\\",
        8: "backspace",
        9: "tab",
        12: "num",
        13: "enter",
        16: "shift",
        17: "ctrl",
        18: "alt",
        19: "pause",
        20: "caps",
        27: "escape",
        32: "space",
        33: "pageup",
        34: "pagedown",
        35: "end",
        36: "home",
        37: "left",
        38: "up",
        39: "right",
        40: "down",
        44: "print",
        45: "insert",
        46: "delete",
        48: "0",
        49: "1",
        50: "2",
        51: "3",
        52: "4",
        53: "5",
        54: "6",
        55: "7",
        56: "8",
        57: "9",
        65: "a",
        66: "b",
        67: "c",
        68: "d",
        69: "e",
        70: "f",
        71: "g",
        72: "h",
        73: "i",
        74: "j",
        75: "k",
        76: "l",
        77: "m",
        78: "n",
        79: "o",
        80: "p",
        81: "q",
        82: "r",
        83: "s",
        84: "t",
        85: "u",
        86: "v",
        87: "w",
        88: "x",
        89: "y",
        90: "z",
        91: "cmd",
        92: "cmd",
        93: "cmd",
        96: "num_0",
        97: "num_1",
        98: "num_2",
        99: "num_3",
        100: "num_4",
        101: "num_5",
        102: "num_6",
        103: "num_7",
        104: "num_8",
        105: "num_9",
        106: "num_multiply",
        107: "num_add",
        108: "num_enter",
        109: "num_subtract",
        110: "num_decimal",
        111: "num_divide",
        124: "print",
        144: "num",
        145: "scroll",
        186: ";",
        187: "=",
        188: ",",
        189: "-",
        190: ".",
        191: "/",
        192: "`",
        219: "[",
        220: "\\",
        221: "]",
        222: "'",
        223: "`",
        224: "cmd",
        225: "alt",
        57392: "ctrl",
        63289: "num"
    };
    for (aC in aI) {
        aD = aI[aC], am.push(aD)
    }
    for (aC in aH) {
        aD = aH[aC], am.push(aD)
    } - 1 !== navigator.userAgent.indexOf("Mac OS X") && (ag = "cmd"); - 1 !== navigator.userAgent.indexOf("Opera") && (aI["17"] = "cmd");
    ae = function (g) {
        return (document.attachEvent ? "complete" === document.readyState : "loading" !== document.readyState) ? g() : setTimeout(function () {
            return ae(g)
        }, 9)
    };
    ae(function () {
        var g;
        g = function (i, h, j) {
            if (i.addEventListener) {
                return i.addEventListener(h, j)
            }
            if (i.attachEvent) {
                return i.attachEvent("on" + h, j)
            }
        };
        g(document.body, "keydown", function (h) {
            h = h || window.event;
            ap(h, !0);
            return l(h)
        });
        g(document.body, "keyup", function (h) {
            h = h || window.event;
            return ap(h, !1)
        });
        return g(window, "blur", function () {
            var i, h, j;
            h = 0;
            for (j = aO.length; h < j; h++) {
                i = aO[h], ai(i, {})
            }
            aO = [];
            return []
        })
    })
}).call(this);
(function (f) {
    f.support.touch = "ontouchend" in document;
    if (!f.support.touch) {
        return
    }
    var j = f.ui.mouse.prototype,
        h = j._mouseInit,
        g;

    function i(c, b) {
        if (c.originalEvent.touches.length > 1) {
            return
        }
        c.preventDefault();
        var a = c.originalEvent.changedTouches[0],
            d = document.createEvent("MouseEvents");
        d.initMouseEvent(b, true, true, window, 1, a.screenX, a.screenY, a.clientX, a.clientY, false, false, false, false, 0, null);
        c.target.dispatchEvent(d)
    }
    j._touchStart = function (a) {
        var b = this;
        if (g || !b._mouseCapture(a.originalEvent.changedTouches[0])) {
            return
        }
        g = true;
        b._touchMoved = false;
        i(a, "mouseover");
        i(a, "mousemove");
        i(a, "mousedown")
    };
    j._touchMove = function (a) {
        if (!g) {
            return
        }
        this._touchMoved = true;
        i(a, "mousemove")
    };
    j._touchEnd = function (a) {
        if (!g) {
            return
        }
        i(a, "mouseup");
        i(a, "mouseout");
        if (!this._touchMoved) {
            i(a, "click")
        }
        g = false
    };
    j._mouseInit = function () {
        var a = this;
        a.element.bind("touchstart", f.proxy(a, "_touchStart")).bind("touchmove", f.proxy(a, "_touchMove")).bind("touchend", f.proxy(a, "_touchEnd"));
        h.call(a)
    }
})(jQuery);
(function (d) {
    var c;
    c = function (aE) {
        var aD, aC, aB, aA, az, ay, ax, aw, av, au, at, ar, aq, ap, ao, an, am, al, ak, aj, ai, ah, ag, af, ae, ad, ac, ab, aa, Z, Y, X, W, V, U, T, S, R, Q, P;
        ao = function (f, e) {
            return f << e | f >>> 32 - e
        };
        aC = function (i, h) {
            var o, m, l, k, j;
            l = i & 2147483648;
            j = h & 2147483648;
            m = i & 1073741824;
            k = h & 1073741824;
            o = (i & 1073741823) + (h & 1073741823);
            if (m & k) {
                return o ^ 2147483648 ^ l ^ j
            }
            if (m | k) {
                if (o & 1073741824) {
                    return o ^ 3221225472 ^ l ^ j
                } else {
                    return o ^ 1073741824 ^ l ^ j
                }
            } else {
                return o ^ l ^ j
            }
        };
        ax = function (f, e, g) {
            return f & e | ~f & g
        };
        av = function (f, e, g) {
            return f & g | e & ~g
        };
        at = function (f, e, g) {
            return f ^ e ^ g
        };
        aq = function (f, e, g) {
            return e ^ (f | ~g)
        };
        aw = function (j, h, p, o, m, l, k) {
            j = aC(j, aC(aC(ax(h, p, o), m), k));
            return aC(ao(j, l), h)
        };
        au = function (j, i, p, o, m, l, k) {
            j = aC(j, aC(aC(av(i, p, o), m), k));
            return aC(ao(j, l), i)
        };
        ar = function (j, i, p, o, m, l, k) {
            j = aC(j, aC(aC(at(i, p, o), m), k));
            return aC(ao(j, l), i)
        };
        ap = function (j, i, p, o, m, l, k) {
            j = aC(j, aC(aC(aq(i, p, o), m), k));
            return aC(ao(j, l), i)
        };
        az = function (s) {
            var r, q, p, o, m, l, k, j;
            p = s.length;
            m = p + 8;
            l = (m - m % 64) / 64;
            o = (l + 1) * 16;
            k = Array(o - 1);
            q = 0;
            r = 0;
            while (r < p) {
                j = (r - r % 4) / 4;
                q = r % 4 * 8;
                k[j] = k[j] | s.charCodeAt(r) << q;
                r++
            }
            j = (r - r % 4) / 4;
            q = r % 4 * 8;
            k[j] = k[j] | 128 << q;
            k[o - 2] = p << 3;
            k[o - 1] = p >>> 29;
            return k
        };
        W = function (g) {
            var f, j, i, h;
            f = "";
            j = "";
            h = 0;
            while (h <= 3) {
                i = g >>> h * 8 & 255;
                j = "0" + i.toString(16);
                f = f + j.substr(j.length - 2, 2);
                h++
            }
            return f
        };
        X = function (f) {
            var e, h, g;
            f = f.replace(/\r\n/g, "\n");
            g = "";
            h = 0;
            while (h < f.length) {
                e = f.charCodeAt(h);
                if (e < 128) {
                    g += String.fromCharCode(e)
                } else {
                    if (e > 127 && e < 2048) {
                        g += String.fromCharCode(e >> 6 | 192);
                        g += String.fromCharCode(e & 63 | 128)
                    } else {
                        g += String.fromCharCode(e >> 12 | 224);
                        g += String.fromCharCode(e >> 6 & 63 | 128);
                        g += String.fromCharCode(e & 63 | 128)
                    }
                }
                h++
            }
            return g
        };
        P = Array();
        an = 7;
        am = 12;
        al = 17;
        ak = 22;
        aj = 5;
        ai = 9;
        ah = 14;
        ag = 20;
        af = 4;
        ae = 11;
        ad = 16;
        ac = 23;
        ab = 6;
        aa = 10;
        Z = 15;
        Y = 21;
        aE = X(aE);
        P = az(aE);
        V = 1732584193;
        U = 4023233417;
        T = 2562383102;
        S = 271733878;
        R = 0;
        while (R < P.length) {
            aD = V;
            aB = U;
            aA = T;
            ay = S;
            V = aw(V, U, T, S, P[R + 0], an, 3614090360);
            S = aw(S, V, U, T, P[R + 1], am, 3905402710);
            T = aw(T, S, V, U, P[R + 2], al, 606105819);
            U = aw(U, T, S, V, P[R + 3], ak, 3250441966);
            V = aw(V, U, T, S, P[R + 4], an, 4118548399);
            S = aw(S, V, U, T, P[R + 5], am, 1200080426);
            T = aw(T, S, V, U, P[R + 6], al, 2821735955);
            U = aw(U, T, S, V, P[R + 7], ak, 4249261313);
            V = aw(V, U, T, S, P[R + 8], an, 1770035416);
            S = aw(S, V, U, T, P[R + 9], am, 2336552879);
            T = aw(T, S, V, U, P[R + 10], al, 4294925233);
            U = aw(U, T, S, V, P[R + 11], ak, 2304563134);
            V = aw(V, U, T, S, P[R + 12], an, 1804603682);
            S = aw(S, V, U, T, P[R + 13], am, 4254626195);
            T = aw(T, S, V, U, P[R + 14], al, 2792965006);
            U = aw(U, T, S, V, P[R + 15], ak, 1236535329);
            V = au(V, U, T, S, P[R + 1], aj, 4129170786);
            S = au(S, V, U, T, P[R + 6], ai, 3225465664);
            T = au(T, S, V, U, P[R + 11], ah, 643717713);
            U = au(U, T, S, V, P[R + 0], ag, 3921069994);
            V = au(V, U, T, S, P[R + 5], aj, 3593408605);
            S = au(S, V, U, T, P[R + 10], ai, 38016083);
            T = au(T, S, V, U, P[R + 15], ah, 3634488961);
            U = au(U, T, S, V, P[R + 4], ag, 3889429448);
            V = au(V, U, T, S, P[R + 9], aj, 568446438);
            S = au(S, V, U, T, P[R + 14], ai, 3275163606);
            T = au(T, S, V, U, P[R + 3], ah, 4107603335);
            U = au(U, T, S, V, P[R + 8], ag, 1163531501);
            V = au(V, U, T, S, P[R + 13], aj, 2850285829);
            S = au(S, V, U, T, P[R + 2], ai, 4243563512);
            T = au(T, S, V, U, P[R + 7], ah, 1735328473);
            U = au(U, T, S, V, P[R + 12], ag, 2368359562);
            V = ar(V, U, T, S, P[R + 5], af, 4294588738);
            S = ar(S, V, U, T, P[R + 8], ae, 2272392833);
            T = ar(T, S, V, U, P[R + 11], ad, 1839030562);
            U = ar(U, T, S, V, P[R + 14], ac, 4259657740);
            V = ar(V, U, T, S, P[R + 1], af, 2763975236);
            S = ar(S, V, U, T, P[R + 4], ae, 1272893353);
            T = ar(T, S, V, U, P[R + 7], ad, 4139469664);
            U = ar(U, T, S, V, P[R + 10], ac, 3200236656);
            V = ar(V, U, T, S, P[R + 13], af, 681279174);
            S = ar(S, V, U, T, P[R + 0], ae, 3936430074);
            T = ar(T, S, V, U, P[R + 3], ad, 3572445317);
            U = ar(U, T, S, V, P[R + 6], ac, 76029189);
            V = ar(V, U, T, S, P[R + 9], af, 3654602809);
            S = ar(S, V, U, T, P[R + 12], ae, 3873151461);
            T = ar(T, S, V, U, P[R + 15], ad, 530742520);
            U = ar(U, T, S, V, P[R + 2], ac, 3299628645);
            V = ap(V, U, T, S, P[R + 0], ab, 4096336452);
            S = ap(S, V, U, T, P[R + 7], aa, 1126891415);
            T = ap(T, S, V, U, P[R + 14], Z, 2878612391);
            U = ap(U, T, S, V, P[R + 5], Y, 4237533241);
            V = ap(V, U, T, S, P[R + 12], ab, 1700485571);
            S = ap(S, V, U, T, P[R + 3], aa, 2399980690);
            T = ap(T, S, V, U, P[R + 10], Z, 4293915773);
            U = ap(U, T, S, V, P[R + 1], Y, 2240044497);
            V = ap(V, U, T, S, P[R + 8], ab, 1873313359);
            S = ap(S, V, U, T, P[R + 15], aa, 4264355552);
            T = ap(T, S, V, U, P[R + 6], Z, 2734768916);
            U = ap(U, T, S, V, P[R + 13], Y, 1309151649);
            V = ap(V, U, T, S, P[R + 4], ab, 4149444226);
            S = ap(S, V, U, T, P[R + 11], aa, 3174756917);
            T = ap(T, S, V, U, P[R + 2], Z, 718787259);
            U = ap(U, T, S, V, P[R + 9], Y, 3951481745);
            V = aC(V, aD);
            U = aC(U, aB);
            T = aC(T, aA);
            S = aC(S, ay);
            R += 16
        }
        Q = W(V) + W(U) + W(T) + W(S);
        return Q.toLowerCase()
    };
    return d.extend({
        MD5: c
    })
})(jQuery);
(function (a) {
    if (typeof define === "function" && define.amd) {
        define(["jquery"], a)
    } else {
        if (typeof exports === "object") {
            a(require("jquery"))
        } else {
            a(jQuery)
        }
    }
}(function (f) {
    var a = /\+/g;

    function d(i) {
        return b.raw ? i : encodeURIComponent(i)
    }

    function g(i) {
        return b.raw ? i : decodeURIComponent(i)
    }

    function h(i) {
        return d(b.json ? JSON.stringify(i) : String(i))
    }

    function c(i) {
        if (i.indexOf('"') === 0) {
            i = i.slice(1, -1).replace(/\\"/g, '"').replace(/\\\\/g, "\\")
        }
        try {
            i = decodeURIComponent(i.replace(a, " "));
            return b.json ? JSON.parse(i) : i
        } catch (j) { }
    }

    function e(j, i) {
        var k = b.raw ? j : c(j);
        return jQuery.isFunction(i) ? i(k) : k
    }
    var b = jQuery.cookie = function (r, q, w) {
        if (q !== undefined && !jQuery.isFunction(q)) {
            w = jQuery.extend({}, b.defaults, w);
            if (typeof w.expires === "number") {
                var s = w.expires,
                    v = w.expires = new Date();
                v.setTime(+v + s * 86400000)
            }
            return (document.cookie = [d(r), "=", h(q), w.expires ? "; expires=" + w.expires.toUTCString() : "", w.path ? "; path=" + w.path : "", w.domain ? "; domain=" + w.domain : "", w.secure ? "; secure" : ""].join(""))
        }
        var x = r ? undefined : {};
        var u = document.cookie ? document.cookie.split("; ") : [];
        for (var p = 0, m = u.length; p < m; p++) {
            var o = u[p].split("=");
            var j = g(o.shift());
            var k = o.join("=");
            if (r && r === j) {
                x = e(k, q);
                break
            }
            if (!r && (k = e(k)) !== undefined) {
                x[j] = k
            }
        }
        return x
    };
    b.defaults = {};
    jQuery.removeCookie = function (j, i) {
        if (jQuery.cookie(j) === undefined) {
            return false
        }
        jQuery.cookie(j, "", jQuery.extend({}, i, {
            expires: -1
        }));
        return !jQuery.cookie(j)
    }
}));
var EXIF = (function () {
    var p = false;
    var u = {
        36864: "ExifVersion",
        40960: "FlashpixVersion",
        40961: "ColorSpace",
        40962: "PixelXDimension",
        40963: "PixelYDimension",
        37121: "ComponentsConfiguration",
        37122: "CompressedBitsPerPixel",
        37500: "MakerNote",
        37510: "UserComment",
        40964: "RelatedSoundFile",
        36867: "DateTimeOriginal",
        36868: "DateTimeDigitized",
        37520: "SubsecTime",
        37521: "SubsecTimeOriginal",
        37522: "SubsecTimeDigitized",
        33434: "ExposureTime",
        33437: "FNumber",
        34850: "ExposureProgram",
        34852: "SpectralSensitivity",
        34855: "ISOSpeedRatings",
        34856: "OECF",
        37377: "ShutterSpeedValue",
        37378: "ApertureValue",
        37379: "BrightnessValue",
        37380: "ExposureBias",
        37381: "MaxApertureValue",
        37382: "SubjectDistance",
        37383: "MeteringMode",
        37384: "LightSource",
        37385: "Flash",
        37396: "SubjectArea",
        37386: "FocalLength",
        41483: "FlashEnergy",
        41484: "SpatialFrequencyResponse",
        41486: "FocalPlaneXResolution",
        41487: "FocalPlaneYResolution",
        41488: "FocalPlaneResolutionUnit",
        41492: "SubjectLocation",
        41493: "ExposureIndex",
        41495: "SensingMethod",
        41728: "FileSource",
        41729: "SceneType",
        41730: "CFAPattern",
        41985: "CustomRendered",
        41986: "ExposureMode",
        41987: "WhiteBalance",
        41988: "DigitalZoomRation",
        41989: "FocalLengthIn35mmFilm",
        41990: "SceneCaptureType",
        41991: "GainControl",
        41992: "Contrast",
        41993: "Saturation",
        41994: "Sharpness",
        41995: "DeviceSettingDescription",
        41996: "SubjectDistanceRange",
        40965: "InteroperabilityIFDPointer",
        42016: "ImageUniqueID"
    };
    var x = {
        256: "ImageWidth",
        257: "ImageHeight",
        34665: "ExifIFDPointer",
        34853: "GPSInfoIFDPointer",
        40965: "InteroperabilityIFDPointer",
        258: "BitsPerSample",
        259: "Compression",
        262: "PhotometricInterpretation",
        274: "Orientation",
        277: "SamplesPerPixel",
        284: "PlanarConfiguration",
        530: "YCbCrSubSampling",
        531: "YCbCrPositioning",
        282: "XResolution",
        283: "YResolution",
        296: "ResolutionUnit",
        273: "StripOffsets",
        278: "RowsPerStrip",
        279: "StripByteCounts",
        513: "JPEGInterchangeFormat",
        514: "JPEGInterchangeFormatLength",
        301: "TransferFunction",
        318: "WhitePoint",
        319: "PrimaryChromaticities",
        529: "YCbCrCoefficients",
        532: "ReferenceBlackWhite",
        306: "DateTime",
        270: "ImageDescription",
        271: "Make",
        272: "Model",
        305: "Software",
        315: "Artist",
        33432: "Copyright"
    };
    var o = {
        0: "GPSVersionID",
        1: "GPSLatitudeRef",
        2: "GPSLatitude",
        3: "GPSLongitudeRef",
        4: "GPSLongitude",
        5: "GPSAltitudeRef",
        6: "GPSAltitude",
        7: "GPSTimeStamp",
        8: "GPSSatellites",
        9: "GPSStatus",
        10: "GPSMeasureMode",
        11: "GPSDOP",
        12: "GPSSpeedRef",
        13: "GPSSpeed",
        14: "GPSTrackRef",
        15: "GPSTrack",
        16: "GPSImgDirectionRef",
        17: "GPSImgDirection",
        18: "GPSMapDatum",
        19: "GPSDestLatitudeRef",
        20: "GPSDestLatitude",
        21: "GPSDestLongitudeRef",
        22: "GPSDestLongitude",
        23: "GPSDestBearingRef",
        24: "GPSDestBearing",
        25: "GPSDestDistanceRef",
        26: "GPSDestDistance",
        27: "GPSProcessingMethod",
        28: "GPSAreaInformation",
        29: "GPSDateStamp",
        30: "GPSDifferential"
    };
    var l = {
        ExposureProgram: {
            0: "Not defined",
            1: "Manual",
            2: "Normal program",
            3: "Aperture priority",
            4: "Shutter priority",
            5: "Creative program",
            6: "Action program",
            7: "Portrait mode",
            8: "Landscape mode"
        },
        MeteringMode: {
            0: "Unknown",
            1: "Average",
            2: "CenterWeightedAverage",
            3: "Spot",
            4: "MultiSpot",
            5: "Pattern",
            6: "Partial",
            255: "Other"
        },
        LightSource: {
            0: "Unknown",
            1: "Daylight",
            2: "Fluorescent",
            3: "Tungsten (incandescent light)",
            4: "Flash",
            9: "Fine weather",
            10: "Cloudy weather",
            11: "Shade",
            12: "Daylight fluorescent (D 5700 - 7100K)",
            13: "Day white fluorescent (N 4600 - 5400K)",
            14: "Cool white fluorescent (W 3900 - 4500K)",
            15: "White fluorescent (WW 3200 - 3700K)",
            17: "Standard light A",
            18: "Standard light B",
            19: "Standard light C",
            20: "D55",
            21: "D65",
            22: "D75",
            23: "D50",
            24: "ISO studio tungsten",
            255: "Other"
        },
        Flash: {
            0: "Flash did not fire",
            1: "Flash fired",
            5: "Strobe return light not detected",
            7: "Strobe return light detected",
            9: "Flash fired, compulsory flash mode",
            13: "Flash fired, compulsory flash mode, return light not detected",
            15: "Flash fired, compulsory flash mode, return light detected",
            16: "Flash did not fire, compulsory flash mode",
            24: "Flash did not fire, auto mode",
            25: "Flash fired, auto mode",
            29: "Flash fired, auto mode, return light not detected",
            31: "Flash fired, auto mode, return light detected",
            32: "No flash function",
            65: "Flash fired, red-eye reduction mode",
            69: "Flash fired, red-eye reduction mode, return light not detected",
            71: "Flash fired, red-eye reduction mode, return light detected",
            73: "Flash fired, compulsory flash mode, red-eye reduction mode",
            77: "Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected",
            79: "Flash fired, compulsory flash mode, red-eye reduction mode, return light detected",
            89: "Flash fired, auto mode, red-eye reduction mode",
            93: "Flash fired, auto mode, return light not detected, red-eye reduction mode",
            95: "Flash fired, auto mode, return light detected, red-eye reduction mode"
        },
        SensingMethod: {
            1: "Not defined",
            2: "One-chip color area sensor",
            3: "Two-chip color area sensor",
            4: "Three-chip color area sensor",
            5: "Color sequential area sensor",
            7: "Trilinear sensor",
            8: "Color sequential linear sensor"
        },
        SceneCaptureType: {
            0: "Standard",
            1: "Landscape",
            2: "Portrait",
            3: "Night scene"
        },
        SceneType: {
            1: "Directly photographed"
        },
        CustomRendered: {
            0: "Normal process",
            1: "Custom process"
        },
        WhiteBalance: {
            0: "Auto white balance",
            1: "Manual white balance"
        },
        GainControl: {
            0: "None",
            1: "Low gain up",
            2: "High gain up",
            3: "Low gain down",
            4: "High gain down"
        },
        Contrast: {
            0: "Normal",
            1: "Soft",
            2: "Hard"
        },
        Saturation: {
            0: "Normal",
            1: "Low saturation",
            2: "High saturation"
        },
        Sharpness: {
            0: "Normal",
            1: "Soft",
            2: "Hard"
        },
        SubjectDistanceRange: {
            0: "Unknown",
            1: "Macro",
            2: "Close view",
            3: "Distant view"
        },
        FileSource: {
            3: "DSC"
        },
        Components: {
            0: "",
            1: "Y",
            2: "Cb",
            3: "Cr",
            4: "R",
            5: "G",
            6: "B"
        }
    };

    function r(y, A, z) {
        if (y.addEventListener) {
            y.addEventListener(A, z, false)
        } else {
            if (y.attachEvent) {
                y.attachEvent("on" + A, z)
            }
        }
    }

    function j(y) {
        return !!(y.exifdata)
    }

    function e(B, E) {
        E = E || B.match(/^data\:([^\;]+)\;base64,/mi)[1] || "";
        B = B.replace(/^data\:([^\;]+)\;base64,/gmi, "");
        var D = atob(B);
        var y = D.length;
        var A = new ArrayBuffer(y);
        var z = new Uint8Array(A);
        for (var C = 0; C < y; C++) {
            z[C] = D.charCodeAt(C)
        }
        return A
    }

    function v(z, A) {
        var y = new XMLHttpRequest();
        y.open("GET", z, true);
        y.responseType = "blob";
        y.onload = function (B) {
            if (this.status == 200 || this.status === 0) {
                A(this.response)
            }
        };
        y.send()
    }

    function b(z, D) {
        function B(G) {
            var F = h(G);
            var E = f(G);
            z.exifdata = F || {};
            z.iptcdata = E || {};
            if (D) {
                D.call(z)
            }
        }
        if (z instanceof Image || z instanceof HTMLImageElement) {
            if (/^data\:/i.test(z.src)) {
                var C = e(z.src);
                B(C)
            } else {
                if (/^blob\:/i.test(z.src)) {
                    var y = new FileReader();
                    y.onload = function (E) {
                        B(E.target.result)
                    };
                    v(z.src, function (E) {
                        y.readAsArrayBuffer(E)
                    })
                } else {
                    var A = new XMLHttpRequest();
                    A.onload = function () {
                        if (A.status == "200") {
                            B(A.response)
                        } else {
                            throw "Could not load image"
                        }
                        A = null
                    };
                    A.open("GET", z.src, true);
                    A.responseType = "arraybuffer";
                    A.send(null)
                }
            }
        } else {
            if (window.FileReader && (z instanceof window.Blob || z instanceof window.File)) {
                var y = new FileReader();
                y.onload = function (E) {
                    if (p) {
                        console.log("Got file of length " + E.target.result.byteLength)
                    }
                    B(E.target.result)
                };
                y.readAsArrayBuffer(z)
            }
        }
    }

    function h(z) {
        var C = new DataView(z);
        if (p) {
            console.log("Got file of length " + z.byteLength)
        }
        if ((C.getUint8(0) != 255) || (C.getUint8(1) != 216)) {
            if (p) {
                console.log("Not a valid JPEG")
            }
            return false
        }
        var B = 2,
            A = z.byteLength,
            y;
        while (B < A) {
            if (C.getUint8(B) != 255) {
                if (p) {
                    console.log("Not a valid marker at offset " + B + ", found: " + C.getUint8(B))
                }
                return false
            }
            y = C.getUint8(B + 1);
            if (p) {
                console.log(y)
            }
            if (y == 225) {
                if (p) {
                    console.log("Found 0xFFE1 marker")
                }
                return t(C, B + 4, C.getUint16(B + 2) - 2)
            } else {
                B += 2 + C.getUint16(B + 2)
            }
        }
    }

    function f(C) {
        var F = new DataView(C);
        if (p) {
            console.log("Got file of length " + C.byteLength)
        }
        if ((F.getUint8(0) != 255) || (F.getUint8(1) != 216)) {
            if (p) {
                console.log("Not a valid JPEG")
            }
            return false
        }
        var E = 2,
            D = C.byteLength;
        var z = function (I, H) {
            try {
                return (I.getUint8(H) === 56 && I.getUint8(H + 1) === 66 && I.getUint8(H + 2) === 73 && I.getUint8(H + 3) === 77 && I.getUint8(H + 4) === 4 && I.getUint8(H + 5) === 4)
            } catch (G) {
                return false
            }
        };
        while (E < D) {
            if (z(F, E)) {
                var B = F.getUint8(E + 7);
                if (B % 2 !== 0) {
                    B += 1
                }
                if (B === 0) {
                    B = 4
                }
                var y = E + 8 + B;
                var A = F.getUint16(E + 6 + B);
                return w(C, y, A);
                break
            }
            E++
        }
    }
    var a = {
        120: "caption",
        110: "credit",
        25: "keywords",
        55: "dateCreated",
        80: "byline",
        85: "bylineTitle",
        122: "captionWriter",
        105: "headline",
        116: "copyright",
        15: "category"
    };

    function w(C, F, E) {
        var G = new DataView(C);
        var D = {};
        var z, I, y, H, A;
        var B = F;
        while (B < F + E) {
            if (G.getUint8(B) === 28 && G.getUint8(B + 1) === 2) {
                H = G.getUint8(B + 2);
                if (H in a) {
                    y = G.getInt16(B + 3);
                    A = y + 5;
                    I = a[H];
                    z = q(G, B + 5, y);
                    if (D.hasOwnProperty(I)) {
                        if (D[I] instanceof Array) {
                            D[I].push(z)
                        } else {
                            D[I] = [D[I], z]
                        }
                    } else {
                        D[I] = z
                    }
                }
            }
            B++
        }
        return D
    }

    function s(y, G, I, F, C, z) {
        var D, J = {},
            E, H, B;
        try {
            D = y.getUint16(I, !C)
        } catch (A) {
            return {}
        }
        for (B = 0; B < D; B++) {
            try {
                E = I + B * 12 + 2;
                H = F[y.getUint16(E, !C)];
                if (!H && p) {
                    console.log("Unknown tag: " + y.getUint16(E, !C))
                }
                J[H] = m(y, E, G, I, C);
                if (z != null) {
                    if (((J.Orientation != null) || (z.Orientation != null)) && (J.DateTimeOriginal != null)) {
                        break
                    }
                }
            } catch (A) {
                break
            }
        }
        return J
    }

    function m(D, H, K, L, F) {
        var G = D.getUint16(H + 2, !F),
            J = D.getUint32(H + 4, !F),
            z = D.getUint32(H + 8, !F) + K,
            E, I, C, B, y, A;
        switch (G) {
            case 1:
            case 7:
                if (J == 1) {
                    return D.getUint8(H + 8, !F)
                } else {
                    E = J > 4 ? z : (H + 8);
                    I = [];
                    for (B = 0; B < J; B++) {
                        I[B] = D.getUint8(E + B)
                    }
                    return I
                }
            case 2:
                E = J > 4 ? z : (H + 8);
                return q(D, E, J - 1);
            case 3:
                if (J == 1) {
                    return D.getUint16(H + 8, !F)
                } else {
                    E = J > 2 ? z : (H + 8);
                    I = [];
                    for (B = 0; B < J; B++) {
                        I[B] = D.getUint16(E + 2 * B, !F)
                    }
                    return I
                }
            case 4:
                if (J == 1) {
                    return D.getUint32(H + 8, !F)
                } else {
                    I = [];
                    for (B = 0; B < J; B++) {
                        I[B] = D.getUint32(z + 4 * B, !F)
                    }
                    return I
                }
            case 5:
                if (J == 1) {
                    y = D.getUint32(z, !F);
                    A = D.getUint32(z + 4, !F);
                    C = new Number(y / A);
                    C.numerator = y;
                    C.denominator = A;
                    return C
                } else {
                    I = [];
                    for (B = 0; B < J; B++) {
                        y = D.getUint32(z + 8 * B, !F);
                        A = D.getUint32(z + 4 + 8 * B, !F);
                        I[B] = new Number(y / A);
                        I[B].numerator = y;
                        I[B].denominator = A
                    }
                    return I
                }
            case 9:
                if (J == 1) {
                    return D.getInt32(H + 8, !F)
                } else {
                    I = [];
                    for (B = 0; B < J; B++) {
                        I[B] = D.getInt32(z + 4 * B, !F)
                    }
                    return I
                }
            case 10:
                if (J == 1) {
                    return D.getInt32(z, !F) / D.getInt32(z + 4, !F)
                } else {
                    I = [];
                    for (B = 0; B < J; B++) {
                        I[B] = D.getInt32(z + 8 * B, !F) / D.getInt32(z + 4 + 8 * B, !F)
                    }
                    return I
                }
        }
    }

    function q(z, B, A) {
        var y = "";
        for (n = B; n < B + A; n++) {
            y += String.fromCharCode(z.getUint8(n))
        }
        return y
    }

    function t(C, z) {
        if (q(C, z, 4) != "Exif") {
            if (p) {
                console.log("Not valid EXIF data! " + q(C, z, 4))
            }
            return false
        }
        var D, F, G, B, A, E = z + 6;
        if (C.getUint16(E) == 18761) {
            D = false
        } else {
            if (C.getUint16(E) == 19789) {
                D = true
            } else {
                if (p) {
                    console.log("Not valid TIFF data! (no 0x4949 or 0x4D4D)")
                }
                return false
            }
        } if (C.getUint16(E + 2, !D) != 42) {
            if (p) {
                console.log("Not valid TIFF data! (no 0x002A)")
            }
            return false
        }
        var y = C.getUint32(E + 4, !D);
        if (y < 8) {
            if (p) {
                console.log("Not valid TIFF data! (First offset less than 8)", C.getUint32(E + 4, !D))
            }
            return false
        }
        F = s(C, E, E + y, x, D);
        if (F.ExifIFDPointer) {
            B = s(C, E, E + F.ExifIFDPointer, u, D, F);
            for (G in B) {
                switch (G) {
                    case "LightSource":
                    case "Flash":
                    case "MeteringMode":
                    case "ExposureProgram":
                    case "SensingMethod":
                    case "SceneCaptureType":
                    case "SceneType":
                    case "CustomRendered":
                    case "WhiteBalance":
                    case "GainControl":
                    case "Contrast":
                    case "Saturation":
                    case "Sharpness":
                    case "SubjectDistanceRange":
                    case "FileSource":
                        B[G] = l[G][B[G]];
                        break;
                    case "ExifVersion":
                    case "FlashpixVersion":
                        B[G] = String.fromCharCode(B[G][0], B[G][1], B[G][2], B[G][3]);
                        break;
                    case "ComponentsConfiguration":
                        B[G] = l.Components[B[G][0]] + l.Components[B[G][1]] + l.Components[B[G][2]] + l.Components[B[G][3]];
                        break
                }
                F[G] = B[G]
            }
        }
        if (F.GPSInfoIFDPointer) {
            A = s(C, E, E + F.GPSInfoIFDPointer, o, D);
            for (G in A) {
                switch (G) {
                    case "GPSVersionID":
                        A[G] = A[G][0] + "." + A[G][1] + "." + A[G][2] + "." + A[G][3];
                        break
                }
                F[G] = A[G]
            }
        }
        return F
    }

    function k(y, z) {
        if ((y instanceof Image || y instanceof HTMLImageElement) && !y.complete) {
            return false
        }
        if (!j(y)) {
            b(y, z)
        } else {
            if (z) {
                z.call(y)
            }
        }
        return true
    }

    function i(z, y) {
        if (!j(z)) {
            return
        }
        return z.exifdata[y]
    }

    function c(z) {
        if (!j(z)) {
            return {}
        }
        var y, B = z.exifdata,
            A = {};
        for (y in B) {
            if (B.hasOwnProperty(y)) {
                A[y] = B[y]
            }
        }
        return A
    }

    function d(z) {
        if (!j(z)) {
            return ""
        }
        var y, B = z.exifdata,
            A = "";
        for (y in B) {
            if (B.hasOwnProperty(y)) {
                if (typeof B[y] == "object") {
                    if (B[y] instanceof Number) {
                        A += y + " : " + B[y] + " [" + B[y].numerator + "/" + B[y].denominator + "]\r\n"
                    } else {
                        A += y + " : [" + B[y].length + " values]\r\n"
                    }
                } else {
                    A += y + " : " + B[y] + "\r\n"
                }
            }
        }
        return A
    }

    function g(y) {
        return h(y)
    }
    return {
        readFromBinaryFile: g,
        pretty: d,
        getTag: i,
        getAllTags: c,
        getData: k,
        Tags: u,
        TiffTags: x,
        GPSTags: o,
        StringValues: l
    }
})();
var CryptoJS = CryptoJS || function (x, i) {
    var c = {},
        t = c.lib = {},
        o = function () { },
        w = t.Base = {
            extend: function (b) {
                o.prototype = this;
                var e = new o;
                b && e.mixIn(b);
                e.hasOwnProperty("init") || (e.init = function () {
                    e.$super.init.apply(this, arguments)
                });
                e.init.prototype = e;
                e.$super = this;
                return e
            },
            create: function () {
                var b = this.extend();
                b.init.apply(b, arguments);
                return b
            },
            init: function () { },
            mixIn: function (b) {
                for (var e in b) {
                    b.hasOwnProperty(e) && (this[e] = b[e])
                }
                b.hasOwnProperty("toString") && (this.toString = b.toString)
            },
            clone: function () {
                return this.init.prototype.extend(this)
            }
        },
        d = t.WordArray = w.extend({
            init: function (b, e) {
                b = this.words = b || [];
                this.sigBytes = e != i ? e : 4 * b.length
            },
            toString: function (b) {
                return (b || u).stringify(this)
            },
            concat: function (f) {
                var j = this.words,
                    g = f.words,
                    h = this.sigBytes;
                f = f.sigBytes;
                this.clamp();
                if (h % 4) {
                    for (var e = 0; e < f; e++) {
                        j[h + e >>> 2] |= (g[e >>> 2] >>> 24 - 8 * (e % 4) & 255) << 24 - 8 * ((h + e) % 4)
                    }
                } else {
                    if (65535 < g.length) {
                        for (e = 0; e < f; e += 4) {
                            j[h + e >>> 2] = g[e >>> 2]
                        }
                    } else {
                        j.push.apply(j, g)
                    }
                }
                this.sigBytes += f;
                return this
            },
            clamp: function () {
                var b = this.words,
                    e = this.sigBytes;
                b[e >>> 2] &= 4294967295 << 32 - 8 * (e % 4);
                b.length = x.ceil(e / 4)
            },
            clone: function () {
                var b = w.clone.call(this);
                b.words = this.words.slice(0);
                return b
            },
            random: function (f) {
                for (var g = [], e = 0; e < f; e += 4) {
                    g.push(4294967296 * x.random() | 0)
                }
                return new d.init(g, f)
            }
        }),
        y = c.enc = {},
        u = y.Hex = {
            stringify: function (g) {
                var k = g.words;
                g = g.sigBytes;
                for (var e = [], j = 0; j < g; j++) {
                    var h = k[j >>> 2] >>> 24 - 8 * (j % 4) & 255;
                    e.push((h >>> 4).toString(16));
                    e.push((h & 15).toString(16))
                }
                return e.join("")
            },
            parse: function (f) {
                for (var h = f.length, e = [], g = 0; g < h; g += 2) {
                    e[g >>> 3] |= parseInt(f.substr(g, 2), 16) << 24 - 4 * (g % 8)
                }
                return new d.init(e, h / 2)
            }
        },
        v = y.Latin1 = {
            stringify: function (f) {
                var h = f.words;
                f = f.sigBytes;
                for (var e = [], g = 0; g < f; g++) {
                    e.push(String.fromCharCode(h[g >>> 2] >>> 24 - 8 * (g % 4) & 255))
                }
                return e.join("")
            },
            parse: function (f) {
                for (var h = f.length, e = [], g = 0; g < h; g++) {
                    e[g >>> 2] |= (f.charCodeAt(g) & 255) << 24 - 8 * (g % 4)
                }
                return new d.init(e, h)
            }
        },
        a = y.Utf8 = {
            stringify: function (b) {
                try {
                    return decodeURIComponent(escape(v.stringify(b)))
                } catch (e) {
                    throw Error("Malformed UTF-8 data")
                }
            },
            parse: function (b) {
                return v.parse(unescape(encodeURIComponent(b)))
            }
        },
        q = t.BufferedBlockAlgorithm = w.extend({
            reset: function () {
                this._data = new d.init;
                this._nDataBytes = 0
            },
            _append: function (b) {
                "string" == typeof b && (b = a.parse(b));
                this._data.concat(b);
                this._nDataBytes += b.sigBytes
            },
            _process: function (j) {
                var r = this._data,
                    e = r.words,
                    p = r.sigBytes,
                    m = this.blockSize,
                    k = p / (4 * m),
                    k = j ? x.ceil(k) : x.max((k | 0) - this._minBufferSize, 0);
                j = k * m;
                p = x.min(4 * j, p);
                if (j) {
                    for (var l = 0; l < j; l += m) {
                        this._doProcessBlock(e, l)
                    }
                    l = e.splice(0, j);
                    r.sigBytes -= p
                }
                return new d.init(l, p)
            },
            clone: function () {
                var b = w.clone.call(this);
                b._data = this._data.clone();
                return b
            },
            _minBufferSize: 0
        });
    t.Hasher = q.extend({
        cfg: w.extend(),
        init: function (b) {
            this.cfg = this.cfg.extend(b);
            this.reset()
        },
        reset: function () {
            q.reset.call(this);
            this._doReset()
        },
        update: function (b) {
            this._append(b);
            this._process();
            return this
        },
        finalize: function (b) {
            b && this._append(b);
            return this._doFinalize()
        },
        blockSize: 16,
        _createHelper: function (b) {
            return function (f, e) {
                return (new b.init(e)).finalize(f)
            }
        },
        _createHmacHelper: function (b) {
            return function (e, g) {
                return (new z.HMAC.init(b, g)).finalize(e)
            }
        }
    });
    var z = c.algo = {};
    return c
}(Math);
(function () {
    var f = CryptoJS,
        a = f.lib,
        d = a.WordArray,
        c = a.Hasher,
        b = [],
        a = f.algo.SHA1 = c.extend({
            _doReset: function () {
                this._hash = new d.init([1732584193, 4023233417, 2562383102, 271733878, 3285377520])
            },
            _doProcessBlock: function (q, i) {
                for (var t = this._hash.words, o = t[0], p = t[1], r = t[2], l = t[3], m = t[4], u = 0; 80 > u; u++) {
                    if (16 > u) {
                        b[u] = q[i + u] | 0
                    } else {
                        var s = b[u - 3] ^ b[u - 8] ^ b[u - 14] ^ b[u - 16];
                        b[u] = s << 1 | s >>> 31
                    }
                    s = (o << 5 | o >>> 27) + m + b[u];
                    s = 20 > u ? s + ((p & r | ~p & l) + 1518500249) : 40 > u ? s + ((p ^ r ^ l) + 1859775393) : 60 > u ? s + ((p & r | p & l | r & l) - 1894007588) : s + ((p ^ r ^ l) - 899497514);
                    m = l;
                    l = r;
                    r = p << 30 | p >>> 2;
                    p = o;
                    o = s
                }
                t[0] = t[0] + o | 0;
                t[1] = t[1] + p | 0;
                t[2] = t[2] + r | 0;
                t[3] = t[3] + l | 0;
                t[4] = t[4] + m | 0
            },
            _doFinalize: function () {
                var j = this._data,
                    k = j.words,
                    g = 8 * this._nDataBytes,
                    i = 8 * j.sigBytes;
                k[i >>> 5] |= 128 << 24 - i % 32;
                k[(i + 64 >>> 9 << 4) + 14] = Math.floor(g / 4294967296);
                k[(i + 64 >>> 9 << 4) + 15] = g;
                j.sigBytes = 4 * k.length;
                this._process();
                return this._hash
            },
            clone: function () {
                var g = c.clone.call(this);
                g._hash = this._hash.clone();
                return g
            }
        });
    f.SHA1 = c._createHelper(a);
    f.HmacSHA1 = c._createHmacHelper(a)
})();
(function (a) {
    if (typeof jQuery.fn.each2 == "undefined") {
        jQuery.extend(jQuery.fn, {
            each2: function (f) {
                var d = jQuery([0]),
                    e = -1,
                    b = this.length;
                while (++e < b && (d.context = d[0] = this[e]) && f.call(d[0], e, d) !== false) { }
                return this
            }
        })
    }
})(jQuery);
(function (E, m) {
    if (window.Select2 !== m) {
        return
    }
    var L, O, y, c, a, q, p = {
        x: 0,
        y: 0
    },
        w, x, L = {
            TAB: 9,
            ENTER: 13,
            ESC: 27,
            SPACE: 32,
            LEFT: 37,
            UP: 38,
            RIGHT: 39,
            DOWN: 40,
            SHIFT: 16,
            CTRL: 17,
            ALT: 18,
            PAGE_UP: 33,
            PAGE_DOWN: 34,
            HOME: 36,
            END: 35,
            BACKSPACE: 8,
            DELETE: 46,
            isArrow: function (P) {
                P = P.which ? P.which : P;
                switch (P) {
                    case L.LEFT:
                    case L.RIGHT:
                    case L.UP:
                    case L.DOWN:
                        return true
                }
                return false
            },
            isControl: function (Q) {
                var P = Q.which;
                switch (P) {
                    case L.SHIFT:
                    case L.CTRL:
                    case L.ALT:
                        return true
                }
                if (Q.metaKey) {
                    return true
                }
                return false
            },
            isFunctionKey: function (P) {
                P = P.which ? P.which : P;
                return P >= 112 && P <= 123
            }
        },
        C = "<div class='select2-measure-scrollbar'></div>",
        d = {
            "\u24B6": "A",
            "\uFF21": "A",
            "\u00C0": "A",
            "\u00C1": "A",
            "\u00C2": "A",
            "\u1EA6": "A",
            "\u1EA4": "A",
            "\u1EAA": "A",
            "\u1EA8": "A",
            "\u00C3": "A",
            "\u0100": "A",
            "\u0102": "A",
            "\u1EB0": "A",
            "\u1EAE": "A",
            "\u1EB4": "A",
            "\u1EB2": "A",
            "\u0226": "A",
            "\u01E0": "A",
            "\u00C4": "A",
            "\u01DE": "A",
            "\u1EA2": "A",
            "\u00C5": "A",
            "\u01FA": "A",
            "\u01CD": "A",
            "\u0200": "A",
            "\u0202": "A",
            "\u1EA0": "A",
            "\u1EAC": "A",
            "\u1EB6": "A",
            "\u1E00": "A",
            "\u0104": "A",
            "\u023A": "A",
            "\u2C6F": "A",
            "\uA732": "AA",
            "\u00C6": "AE",
            "\u01FC": "AE",
            "\u01E2": "AE",
            "\uA734": "AO",
            "\uA736": "AU",
            "\uA738": "AV",
            "\uA73A": "AV",
            "\uA73C": "AY",
            "\u24B7": "B",
            "\uFF22": "B",
            "\u1E02": "B",
            "\u1E04": "B",
            "\u1E06": "B",
            "\u0243": "B",
            "\u0182": "B",
            "\u0181": "B",
            "\u24B8": "C",
            "\uFF23": "C",
            "\u0106": "C",
            "\u0108": "C",
            "\u010A": "C",
            "\u010C": "C",
            "\u00C7": "C",
            "\u1E08": "C",
            "\u0187": "C",
            "\u023B": "C",
            "\uA73E": "C",
            "\u24B9": "D",
            "\uFF24": "D",
            "\u1E0A": "D",
            "\u010E": "D",
            "\u1E0C": "D",
            "\u1E10": "D",
            "\u1E12": "D",
            "\u1E0E": "D",
            "\u0110": "D",
            "\u018B": "D",
            "\u018A": "D",
            "\u0189": "D",
            "\uA779": "D",
            "\u01F1": "DZ",
            "\u01C4": "DZ",
            "\u01F2": "Dz",
            "\u01C5": "Dz",
            "\u24BA": "E",
            "\uFF25": "E",
            "\u00C8": "E",
            "\u00C9": "E",
            "\u00CA": "E",
            "\u1EC0": "E",
            "\u1EBE": "E",
            "\u1EC4": "E",
            "\u1EC2": "E",
            "\u1EBC": "E",
            "\u0112": "E",
            "\u1E14": "E",
            "\u1E16": "E",
            "\u0114": "E",
            "\u0116": "E",
            "\u00CB": "E",
            "\u1EBA": "E",
            "\u011A": "E",
            "\u0204": "E",
            "\u0206": "E",
            "\u1EB8": "E",
            "\u1EC6": "E",
            "\u0228": "E",
            "\u1E1C": "E",
            "\u0118": "E",
            "\u1E18": "E",
            "\u1E1A": "E",
            "\u0190": "E",
            "\u018E": "E",
            "\u24BB": "F",
            "\uFF26": "F",
            "\u1E1E": "F",
            "\u0191": "F",
            "\uA77B": "F",
            "\u24BC": "G",
            "\uFF27": "G",
            "\u01F4": "G",
            "\u011C": "G",
            "\u1E20": "G",
            "\u011E": "G",
            "\u0120": "G",
            "\u01E6": "G",
            "\u0122": "G",
            "\u01E4": "G",
            "\u0193": "G",
            "\uA7A0": "G",
            "\uA77D": "G",
            "\uA77E": "G",
            "\u24BD": "H",
            "\uFF28": "H",
            "\u0124": "H",
            "\u1E22": "H",
            "\u1E26": "H",
            "\u021E": "H",
            "\u1E24": "H",
            "\u1E28": "H",
            "\u1E2A": "H",
            "\u0126": "H",
            "\u2C67": "H",
            "\u2C75": "H",
            "\uA78D": "H",
            "\u24BE": "I",
            "\uFF29": "I",
            "\u00CC": "I",
            "\u00CD": "I",
            "\u00CE": "I",
            "\u0128": "I",
            "\u012A": "I",
            "\u012C": "I",
            "\u0130": "I",
            "\u00CF": "I",
            "\u1E2E": "I",
            "\u1EC8": "I",
            "\u01CF": "I",
            "\u0208": "I",
            "\u020A": "I",
            "\u1ECA": "I",
            "\u012E": "I",
            "\u1E2C": "I",
            "\u0197": "I",
            "\u24BF": "J",
            "\uFF2A": "J",
            "\u0134": "J",
            "\u0248": "J",
            "\u24C0": "K",
            "\uFF2B": "K",
            "\u1E30": "K",
            "\u01E8": "K",
            "\u1E32": "K",
            "\u0136": "K",
            "\u1E34": "K",
            "\u0198": "K",
            "\u2C69": "K",
            "\uA740": "K",
            "\uA742": "K",
            "\uA744": "K",
            "\uA7A2": "K",
            "\u24C1": "L",
            "\uFF2C": "L",
            "\u013F": "L",
            "\u0139": "L",
            "\u013D": "L",
            "\u1E36": "L",
            "\u1E38": "L",
            "\u013B": "L",
            "\u1E3C": "L",
            "\u1E3A": "L",
            "\u0141": "L",
            "\u023D": "L",
            "\u2C62": "L",
            "\u2C60": "L",
            "\uA748": "L",
            "\uA746": "L",
            "\uA780": "L",
            "\u01C7": "LJ",
            "\u01C8": "Lj",
            "\u24C2": "M",
            "\uFF2D": "M",
            "\u1E3E": "M",
            "\u1E40": "M",
            "\u1E42": "M",
            "\u2C6E": "M",
            "\u019C": "M",
            "\u24C3": "N",
            "\uFF2E": "N",
            "\u01F8": "N",
            "\u0143": "N",
            "\u00D1": "N",
            "\u1E44": "N",
            "\u0147": "N",
            "\u1E46": "N",
            "\u0145": "N",
            "\u1E4A": "N",
            "\u1E48": "N",
            "\u0220": "N",
            "\u019D": "N",
            "\uA790": "N",
            "\uA7A4": "N",
            "\u01CA": "NJ",
            "\u01CB": "Nj",
            "\u24C4": "O",
            "\uFF2F": "O",
            "\u00D2": "O",
            "\u00D3": "O",
            "\u00D4": "O",
            "\u1ED2": "O",
            "\u1ED0": "O",
            "\u1ED6": "O",
            "\u1ED4": "O",
            "\u00D5": "O",
            "\u1E4C": "O",
            "\u022C": "O",
            "\u1E4E": "O",
            "\u014C": "O",
            "\u1E50": "O",
            "\u1E52": "O",
            "\u014E": "O",
            "\u022E": "O",
            "\u0230": "O",
            "\u00D6": "O",
            "\u022A": "O",
            "\u1ECE": "O",
            "\u0150": "O",
            "\u01D1": "O",
            "\u020C": "O",
            "\u020E": "O",
            "\u01A0": "O",
            "\u1EDC": "O",
            "\u1EDA": "O",
            "\u1EE0": "O",
            "\u1EDE": "O",
            "\u1EE2": "O",
            "\u1ECC": "O",
            "\u1ED8": "O",
            "\u01EA": "O",
            "\u01EC": "O",
            "\u00D8": "O",
            "\u01FE": "O",
            "\u0186": "O",
            "\u019F": "O",
            "\uA74A": "O",
            "\uA74C": "O",
            "\u01A2": "OI",
            "\uA74E": "OO",
            "\u0222": "OU",
            "\u24C5": "P",
            "\uFF30": "P",
            "\u1E54": "P",
            "\u1E56": "P",
            "\u01A4": "P",
            "\u2C63": "P",
            "\uA750": "P",
            "\uA752": "P",
            "\uA754": "P",
            "\u24C6": "Q",
            "\uFF31": "Q",
            "\uA756": "Q",
            "\uA758": "Q",
            "\u024A": "Q",
            "\u24C7": "R",
            "\uFF32": "R",
            "\u0154": "R",
            "\u1E58": "R",
            "\u0158": "R",
            "\u0210": "R",
            "\u0212": "R",
            "\u1E5A": "R",
            "\u1E5C": "R",
            "\u0156": "R",
            "\u1E5E": "R",
            "\u024C": "R",
            "\u2C64": "R",
            "\uA75A": "R",
            "\uA7A6": "R",
            "\uA782": "R",
            "\u24C8": "S",
            "\uFF33": "S",
            "\u1E9E": "S",
            "\u015A": "S",
            "\u1E64": "S",
            "\u015C": "S",
            "\u1E60": "S",
            "\u0160": "S",
            "\u1E66": "S",
            "\u1E62": "S",
            "\u1E68": "S",
            "\u0218": "S",
            "\u015E": "S",
            "\u2C7E": "S",
            "\uA7A8": "S",
            "\uA784": "S",
            "\u24C9": "T",
            "\uFF34": "T",
            "\u1E6A": "T",
            "\u0164": "T",
            "\u1E6C": "T",
            "\u021A": "T",
            "\u0162": "T",
            "\u1E70": "T",
            "\u1E6E": "T",
            "\u0166": "T",
            "\u01AC": "T",
            "\u01AE": "T",
            "\u023E": "T",
            "\uA786": "T",
            "\uA728": "TZ",
            "\u24CA": "U",
            "\uFF35": "U",
            "\u00D9": "U",
            "\u00DA": "U",
            "\u00DB": "U",
            "\u0168": "U",
            "\u1E78": "U",
            "\u016A": "U",
            "\u1E7A": "U",
            "\u016C": "U",
            "\u00DC": "U",
            "\u01DB": "U",
            "\u01D7": "U",
            "\u01D5": "U",
            "\u01D9": "U",
            "\u1EE6": "U",
            "\u016E": "U",
            "\u0170": "U",
            "\u01D3": "U",
            "\u0214": "U",
            "\u0216": "U",
            "\u01AF": "U",
            "\u1EEA": "U",
            "\u1EE8": "U",
            "\u1EEE": "U",
            "\u1EEC": "U",
            "\u1EF0": "U",
            "\u1EE4": "U",
            "\u1E72": "U",
            "\u0172": "U",
            "\u1E76": "U",
            "\u1E74": "U",
            "\u0244": "U",
            "\u24CB": "V",
            "\uFF36": "V",
            "\u1E7C": "V",
            "\u1E7E": "V",
            "\u01B2": "V",
            "\uA75E": "V",
            "\u0245": "V",
            "\uA760": "VY",
            "\u24CC": "W",
            "\uFF37": "W",
            "\u1E80": "W",
            "\u1E82": "W",
            "\u0174": "W",
            "\u1E86": "W",
            "\u1E84": "W",
            "\u1E88": "W",
            "\u2C72": "W",
            "\u24CD": "X",
            "\uFF38": "X",
            "\u1E8A": "X",
            "\u1E8C": "X",
            "\u24CE": "Y",
            "\uFF39": "Y",
            "\u1EF2": "Y",
            "\u00DD": "Y",
            "\u0176": "Y",
            "\u1EF8": "Y",
            "\u0232": "Y",
            "\u1E8E": "Y",
            "\u0178": "Y",
            "\u1EF6": "Y",
            "\u1EF4": "Y",
            "\u01B3": "Y",
            "\u024E": "Y",
            "\u1EFE": "Y",
            "\u24CF": "Z",
            "\uFF3A": "Z",
            "\u0179": "Z",
            "\u1E90": "Z",
            "\u017B": "Z",
            "\u017D": "Z",
            "\u1E92": "Z",
            "\u1E94": "Z",
            "\u01B5": "Z",
            "\u0224": "Z",
            "\u2C7F": "Z",
            "\u2C6B": "Z",
            "\uA762": "Z",
            "\u24D0": "a",
            "\uFF41": "a",
            "\u1E9A": "a",
            "\u00E0": "a",
            "\u00E1": "a",
            "\u00E2": "a",
            "\u1EA7": "a",
            "\u1EA5": "a",
            "\u1EAB": "a",
            "\u1EA9": "a",
            "\u00E3": "a",
            "\u0101": "a",
            "\u0103": "a",
            "\u1EB1": "a",
            "\u1EAF": "a",
            "\u1EB5": "a",
            "\u1EB3": "a",
            "\u0227": "a",
            "\u01E1": "a",
            "\u00E4": "a",
            "\u01DF": "a",
            "\u1EA3": "a",
            "\u00E5": "a",
            "\u01FB": "a",
            "\u01CE": "a",
            "\u0201": "a",
            "\u0203": "a",
            "\u1EA1": "a",
            "\u1EAD": "a",
            "\u1EB7": "a",
            "\u1E01": "a",
            "\u0105": "a",
            "\u2C65": "a",
            "\u0250": "a",
            "\uA733": "aa",
            "\u00E6": "ae",
            "\u01FD": "ae",
            "\u01E3": "ae",
            "\uA735": "ao",
            "\uA737": "au",
            "\uA739": "av",
            "\uA73B": "av",
            "\uA73D": "ay",
            "\u24D1": "b",
            "\uFF42": "b",
            "\u1E03": "b",
            "\u1E05": "b",
            "\u1E07": "b",
            "\u0180": "b",
            "\u0183": "b",
            "\u0253": "b",
            "\u24D2": "c",
            "\uFF43": "c",
            "\u0107": "c",
            "\u0109": "c",
            "\u010B": "c",
            "\u010D": "c",
            "\u00E7": "c",
            "\u1E09": "c",
            "\u0188": "c",
            "\u023C": "c",
            "\uA73F": "c",
            "\u2184": "c",
            "\u24D3": "d",
            "\uFF44": "d",
            "\u1E0B": "d",
            "\u010F": "d",
            "\u1E0D": "d",
            "\u1E11": "d",
            "\u1E13": "d",
            "\u1E0F": "d",
            "\u0111": "d",
            "\u018C": "d",
            "\u0256": "d",
            "\u0257": "d",
            "\uA77A": "d",
            "\u01F3": "dz",
            "\u01C6": "dz",
            "\u24D4": "e",
            "\uFF45": "e",
            "\u00E8": "e",
            "\u00E9": "e",
            "\u00EA": "e",
            "\u1EC1": "e",
            "\u1EBF": "e",
            "\u1EC5": "e",
            "\u1EC3": "e",
            "\u1EBD": "e",
            "\u0113": "e",
            "\u1E15": "e",
            "\u1E17": "e",
            "\u0115": "e",
            "\u0117": "e",
            "\u00EB": "e",
            "\u1EBB": "e",
            "\u011B": "e",
            "\u0205": "e",
            "\u0207": "e",
            "\u1EB9": "e",
            "\u1EC7": "e",
            "\u0229": "e",
            "\u1E1D": "e",
            "\u0119": "e",
            "\u1E19": "e",
            "\u1E1B": "e",
            "\u0247": "e",
            "\u025B": "e",
            "\u01DD": "e",
            "\u24D5": "f",
            "\uFF46": "f",
            "\u1E1F": "f",
            "\u0192": "f",
            "\uA77C": "f",
            "\u24D6": "g",
            "\uFF47": "g",
            "\u01F5": "g",
            "\u011D": "g",
            "\u1E21": "g",
            "\u011F": "g",
            "\u0121": "g",
            "\u01E7": "g",
            "\u0123": "g",
            "\u01E5": "g",
            "\u0260": "g",
            "\uA7A1": "g",
            "\u1D79": "g",
            "\uA77F": "g",
            "\u24D7": "h",
            "\uFF48": "h",
            "\u0125": "h",
            "\u1E23": "h",
            "\u1E27": "h",
            "\u021F": "h",
            "\u1E25": "h",
            "\u1E29": "h",
            "\u1E2B": "h",
            "\u1E96": "h",
            "\u0127": "h",
            "\u2C68": "h",
            "\u2C76": "h",
            "\u0265": "h",
            "\u0195": "hv",
            "\u24D8": "i",
            "\uFF49": "i",
            "\u00EC": "i",
            "\u00ED": "i",
            "\u00EE": "i",
            "\u0129": "i",
            "\u012B": "i",
            "\u012D": "i",
            "\u00EF": "i",
            "\u1E2F": "i",
            "\u1EC9": "i",
            "\u01D0": "i",
            "\u0209": "i",
            "\u020B": "i",
            "\u1ECB": "i",
            "\u012F": "i",
            "\u1E2D": "i",
            "\u0268": "i",
            "\u0131": "i",
            "\u24D9": "j",
            "\uFF4A": "j",
            "\u0135": "j",
            "\u01F0": "j",
            "\u0249": "j",
            "\u24DA": "k",
            "\uFF4B": "k",
            "\u1E31": "k",
            "\u01E9": "k",
            "\u1E33": "k",
            "\u0137": "k",
            "\u1E35": "k",
            "\u0199": "k",
            "\u2C6A": "k",
            "\uA741": "k",
            "\uA743": "k",
            "\uA745": "k",
            "\uA7A3": "k",
            "\u24DB": "l",
            "\uFF4C": "l",
            "\u0140": "l",
            "\u013A": "l",
            "\u013E": "l",
            "\u1E37": "l",
            "\u1E39": "l",
            "\u013C": "l",
            "\u1E3D": "l",
            "\u1E3B": "l",
            "\u017F": "l",
            "\u0142": "l",
            "\u019A": "l",
            "\u026B": "l",
            "\u2C61": "l",
            "\uA749": "l",
            "\uA781": "l",
            "\uA747": "l",
            "\u01C9": "lj",
            "\u24DC": "m",
            "\uFF4D": "m",
            "\u1E3F": "m",
            "\u1E41": "m",
            "\u1E43": "m",
            "\u0271": "m",
            "\u026F": "m",
            "\u24DD": "n",
            "\uFF4E": "n",
            "\u01F9": "n",
            "\u0144": "n",
            "\u00F1": "n",
            "\u1E45": "n",
            "\u0148": "n",
            "\u1E47": "n",
            "\u0146": "n",
            "\u1E4B": "n",
            "\u1E49": "n",
            "\u019E": "n",
            "\u0272": "n",
            "\u0149": "n",
            "\uA791": "n",
            "\uA7A5": "n",
            "\u01CC": "nj",
            "\u24DE": "o",
            "\uFF4F": "o",
            "\u00F2": "o",
            "\u00F3": "o",
            "\u00F4": "o",
            "\u1ED3": "o",
            "\u1ED1": "o",
            "\u1ED7": "o",
            "\u1ED5": "o",
            "\u00F5": "o",
            "\u1E4D": "o",
            "\u022D": "o",
            "\u1E4F": "o",
            "\u014D": "o",
            "\u1E51": "o",
            "\u1E53": "o",
            "\u014F": "o",
            "\u022F": "o",
            "\u0231": "o",
            "\u00F6": "o",
            "\u022B": "o",
            "\u1ECF": "o",
            "\u0151": "o",
            "\u01D2": "o",
            "\u020D": "o",
            "\u020F": "o",
            "\u01A1": "o",
            "\u1EDD": "o",
            "\u1EDB": "o",
            "\u1EE1": "o",
            "\u1EDF": "o",
            "\u1EE3": "o",
            "\u1ECD": "o",
            "\u1ED9": "o",
            "\u01EB": "o",
            "\u01ED": "o",
            "\u00F8": "o",
            "\u01FF": "o",
            "\u0254": "o",
            "\uA74B": "o",
            "\uA74D": "o",
            "\u0275": "o",
            "\u01A3": "oi",
            "\u0223": "ou",
            "\uA74F": "oo",
            "\u24DF": "p",
            "\uFF50": "p",
            "\u1E55": "p",
            "\u1E57": "p",
            "\u01A5": "p",
            "\u1D7D": "p",
            "\uA751": "p",
            "\uA753": "p",
            "\uA755": "p",
            "\u24E0": "q",
            "\uFF51": "q",
            "\u024B": "q",
            "\uA757": "q",
            "\uA759": "q",
            "\u24E1": "r",
            "\uFF52": "r",
            "\u0155": "r",
            "\u1E59": "r",
            "\u0159": "r",
            "\u0211": "r",
            "\u0213": "r",
            "\u1E5B": "r",
            "\u1E5D": "r",
            "\u0157": "r",
            "\u1E5F": "r",
            "\u024D": "r",
            "\u027D": "r",
            "\uA75B": "r",
            "\uA7A7": "r",
            "\uA783": "r",
            "\u24E2": "s",
            "\uFF53": "s",
            "\u00DF": "s",
            "\u015B": "s",
            "\u1E65": "s",
            "\u015D": "s",
            "\u1E61": "s",
            "\u0161": "s",
            "\u1E67": "s",
            "\u1E63": "s",
            "\u1E69": "s",
            "\u0219": "s",
            "\u015F": "s",
            "\u023F": "s",
            "\uA7A9": "s",
            "\uA785": "s",
            "\u1E9B": "s",
            "\u24E3": "t",
            "\uFF54": "t",
            "\u1E6B": "t",
            "\u1E97": "t",
            "\u0165": "t",
            "\u1E6D": "t",
            "\u021B": "t",
            "\u0163": "t",
            "\u1E71": "t",
            "\u1E6F": "t",
            "\u0167": "t",
            "\u01AD": "t",
            "\u0288": "t",
            "\u2C66": "t",
            "\uA787": "t",
            "\uA729": "tz",
            "\u24E4": "u",
            "\uFF55": "u",
            "\u00F9": "u",
            "\u00FA": "u",
            "\u00FB": "u",
            "\u0169": "u",
            "\u1E79": "u",
            "\u016B": "u",
            "\u1E7B": "u",
            "\u016D": "u",
            "\u00FC": "u",
            "\u01DC": "u",
            "\u01D8": "u",
            "\u01D6": "u",
            "\u01DA": "u",
            "\u1EE7": "u",
            "\u016F": "u",
            "\u0171": "u",
            "\u01D4": "u",
            "\u0215": "u",
            "\u0217": "u",
            "\u01B0": "u",
            "\u1EEB": "u",
            "\u1EE9": "u",
            "\u1EEF": "u",
            "\u1EED": "u",
            "\u1EF1": "u",
            "\u1EE5": "u",
            "\u1E73": "u",
            "\u0173": "u",
            "\u1E77": "u",
            "\u1E75": "u",
            "\u0289": "u",
            "\u24E5": "v",
            "\uFF56": "v",
            "\u1E7D": "v",
            "\u1E7F": "v",
            "\u028B": "v",
            "\uA75F": "v",
            "\u028C": "v",
            "\uA761": "vy",
            "\u24E6": "w",
            "\uFF57": "w",
            "\u1E81": "w",
            "\u1E83": "w",
            "\u0175": "w",
            "\u1E87": "w",
            "\u1E85": "w",
            "\u1E98": "w",
            "\u1E89": "w",
            "\u2C73": "w",
            "\u24E7": "x",
            "\uFF58": "x",
            "\u1E8B": "x",
            "\u1E8D": "x",
            "\u24E8": "y",
            "\uFF59": "y",
            "\u1EF3": "y",
            "\u00FD": "y",
            "\u0177": "y",
            "\u1EF9": "y",
            "\u0233": "y",
            "\u1E8F": "y",
            "\u00FF": "y",
            "\u1EF7": "y",
            "\u1E99": "y",
            "\u1EF5": "y",
            "\u01B4": "y",
            "\u024F": "y",
            "\u1EFF": "y",
            "\u24E9": "z",
            "\uFF5A": "z",
            "\u017A": "z",
            "\u1E91": "z",
            "\u017C": "z",
            "\u017E": "z",
            "\u1E93": "z",
            "\u1E95": "z",
            "\u01B6": "z",
            "\u0225": "z",
            "\u0240": "z",
            "\u2C6C": "z",
            "\uA763": "z"
        };
    w = jQuery(document);
    a = (function () {
        var P = 1;
        return function () {
            return P++
        }
    }());

    function e(S) {
        var Q, R, P, T;
        if (!S || S.length < 1) {
            return S
        }
        Q = "";
        for (R = 0, P = S.length; R < P; R++) {
            T = S.charAt(R);
            Q += d[T] || T
        }
        return Q
    }

    function r(R, S) {
        var Q = 0,
            P = S.length;
        for (; Q < P; Q = Q + 1) {
            if (u(R, S[Q])) {
                return Q
            }
        }
        return -1
    }

    function N() {
        var P = jQuery(C);
        P.appendTo("body");
        var Q = {
            width: P.width() - P[0].clientWidth,
            height: P.height() - P[0].clientHeight
        };
        P.remove();
        return Q
    }

    function u(Q, P) {
        if (Q === P) {
            return true
        }
        if (Q === m || P === m) {
            return false
        }
        if (Q === null || P === null) {
            return false
        }
        if (Q.constructor === String) {
            return Q + "" === P + ""
        }
        if (P.constructor === String) {
            return P + "" === Q + ""
        }
        return false
    }

    function i(Q, S) {
        var T, R, P;
        if (Q === null || Q.length < 1) {
            return []
        }
        T = Q.split(S);
        for (R = 0, P = T.length; R < P; R = R + 1) {
            T[R] = jQuery.trim(T[R])
        }
        return T
    }

    function h(P) {
        return P.outerWidth(false) - P.width()
    }

    function G(Q) {
        var P = "keyup-change-value";
        Q.on("keydown", function () {
            if (jQuery.data(Q, P) === m) {
                jQuery.data(Q, P, Q.val())
            }
        });
        Q.on("keyup", function () {
            var R = jQuery.data(Q, P);
            if (R !== m && Q.val() !== R) {
                jQuery.removeData(Q, P);
                Q.trigger("keyup-change")
            }
        })
    }
    w.on("mousemove", function (P) {
        p.x = P.pageX;
        p.y = P.pageY
    });

    function K(P) {
        P.on("mousemove", function (R) {
            var Q = p;
            if (Q === m || Q.x !== R.pageX || Q.y !== R.pageY) {
                jQuery(R.target).trigger("mousemove-filtered", R)
            }
        })
    }

    function k(S, Q, P) {
        P = P || m;
        var R;
        return function () {
            var T = arguments;
            window.clearTimeout(R);
            R = window.setTimeout(function () {
                Q.apply(P, T)
            }, S)
        }
    }

    function t(R) {
        var P = false,
            Q;
        return function () {
            if (P === false) {
                Q = R();
                P = true
            }
            return Q
        }
    }

    function l(P, R) {
        var Q = k(P, function (S) {
            R.trigger("scroll-debounced", S)
        });
        R.on("scroll", function (S) {
            if (r(S.target, R.get()) >= 0) {
                Q(S)
            }
        })
    }

    function J(P) {
        if (P[0] === document.activeElement) {
            return
        }
        window.setTimeout(function () {
            var R = P[0],
                S = P.val().length,
                Q;
            P.focus();
            if (P.is(":visible") && R === document.activeElement) {
                if (R.setSelectionRange) {
                    R.setSelectionRange(S, S)
                } else {
                    if (R.createTextRange) {
                        Q = R.createTextRange();
                        Q.collapse(false);
                        Q.select()
                    }
                }
            }
        }, 0)
    }

    function f(P) {
        P = jQuery(P)[0];
        var S = 0;
        var Q = 0;
        if ("selectionStart" in P) {
            S = P.selectionStart;
            Q = P.selectionEnd - S
        } else {
            if ("selection" in document) {
                P.focus();
                var R = document.selection.createRange();
                Q = document.selection.createRange().text.length;
                R.moveStart("character", -P.value.length);
                S = R.text.length - Q
            }
        }
        return {
            offset: S,
            length: Q
        }
    }

    function B(P) {
        P.preventDefault();
        P.stopPropagation()
    }

    function b(P) {
        P.preventDefault();
        P.stopImmediatePropagation()
    }

    function o(Q) {
        if (!q) {
            var P = Q[0].currentStyle || window.getComputedStyle(Q[0], null);
            q = jQuery(document.createElement("div")).css({
                position: "absolute",
                left: "-10000px",
                top: "-10000px",
                display: "none",
                fontSize: P.fontSize,
                fontFamily: P.fontFamily,
                fontStyle: P.fontStyle,
                fontWeight: P.fontWeight,
                letterSpacing: P.letterSpacing,
                textTransform: P.textTransform,
                whiteSpace: "nowrap"
            });
            q.attr("class", "select2-sizer");
            jQuery("body").append(q)
        }
        q.text(Q.val());
        return q.width()
    }

    function j(Q, U, P) {
        var S, T = [],
            R;
        S = Q.attr("class");
        if (S) {
            S = "" + S;
            jQuery(S.split(" ")).each2(function () {
                if (this.indexOf("select2-") === 0) {
                    T.push(this)
                }
            })
        }
        S = U.attr("class");
        if (S) {
            S = "" + S;
            jQuery(S.split(" ")).each2(function () {
                if (this.indexOf("select2-") !== 0) {
                    R = P(this);
                    if (R) {
                        T.push(R)
                    }
                }
            })
        }
        Q.attr("class", T.join(" "))
    }

    function v(U, T, R, P) {
        var S = e(U.toUpperCase()).indexOf(e(T.toUpperCase())),
            Q = T.length;
        if (S < 0) {
            R.push(P(U));
            return
        }
        R.push(P(U.substring(0, S)));
        R.push("<span class='select2-match'>");
        R.push(P(U.substring(S, S + Q)));
        R.push("</span>");
        R.push(P(U.substring(S + Q, U.length)))
    }

    function H(P) {
        var Q = {
            "\\": "&#92;",
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&quot;",
            "'": "&#39;",
            "/": "&#47;"
        };
        return String(P).replace(/[&<>"'\/\\]/g, function (R) {
            return Q[R]
        })
    }

    function F(Q) {
        var T, R = null,
            U = Q.quietMillis || 100,
            S = Q.url,
            P = this;
        return function (V) {
            window.clearTimeout(T);
            T = window.setTimeout(function () {
                var Y = Q.data,
                    X = S,
                    aa = Q.transport || jQuery.fn.select2.ajaxDefaults.transport,
                    W = {
                        type: Q.type || "GET",
                        cache: Q.cache || false,
                        jsonpCallback: Q.jsonpCallback || m,
                        dataType: Q.dataType || "json"
                    },
                    Z = jQuery.extend({}, jQuery.fn.select2.ajaxDefaults.params, W);
                Y = Y ? Y.call(P, V.term, V.page, V.context) : null;
                X = (typeof X === "function") ? X.call(P, V.term, V.page, V.context) : X;
                if (R) {
                    R.abort()
                }
                if (Q.params) {
                    if (jQuery.isFunction(Q.params)) {
                        jQuery.extend(Z, Q.params.call(P))
                    } else {
                        jQuery.extend(Z, Q.params)
                    }
                }
                jQuery.extend(Z, {
                    url: X,
                    dataType: Q.dataType,
                    data: Y,
                    success: function (ac) {
                        var ab = Q.results(ac, V.page);
                        V.callback(ab)
                    }
                });
                R = aa.call(P, Z)
            }, U)
        }
    }

    function I(Q) {
        var T = Q,
            S, R, U = function (V) {
                return "" + V.text
            };
        if (jQuery.isArray(T)) {
            R = T;
            T = {
                results: R
            }
        }
        if (jQuery.isFunction(T) === false) {
            R = T;
            T = function () {
                return R
            }
        }
        var P = T();
        if (P.text) {
            U = P.text;
            if (!jQuery.isFunction(U)) {
                S = P.text;
                U = function (V) {
                    return V[S]
                }
            }
        }
        return function (X) {
            var W = X.term,
                V = {
                    results: []
                },
                Y;
            if (W === "") {
                X.callback(T());
                return
            }
            Y = function (aa, ac) {
                var ab, Z;
                aa = aa[0];
                if (aa.children) {
                    ab = {};
                    for (Z in aa) {
                        if (aa.hasOwnProperty(Z)) {
                            ab[Z] = aa[Z]
                        }
                    }
                    ab.children = [];
                    jQuery(aa.children).each2(function (ad, ae) {
                        Y(ae, ab.children)
                    });
                    if (ab.children.length || X.matcher(W, U(ab), aa)) {
                        ac.push(ab)
                    }
                } else {
                    if (X.matcher(W, U(aa), aa)) {
                        ac.push(aa)
                    }
                }
            };
            jQuery(T().results).each2(function (aa, Z) {
                Y(Z, V.results)
            });
            X.callback(V)
        }
    }

    function A(Q) {
        var P = jQuery.isFunction(Q);
        return function (T) {
            var S = T.term,
                R = {
                    results: []
                };
            jQuery(P ? Q() : Q).each(function () {
                var U = this.text !== m,
                    V = U ? this.text : this;
                if (S === "" || T.matcher(S, V)) {
                    R.results.push(U ? this : {
                        id: this,
                        text: this
                    })
                }
            });
            T.callback(R)
        }
    }

    function z(P, Q) {
        if (jQuery.isFunction(P)) {
            return true
        }
        if (!P) {
            return false
        }
        throw new Error(Q + " must be a function or a falsy value")
    }

    function D(P) {
        return jQuery.isFunction(P) ? P() : P
    }

    function s(P) {
        var Q = 0;
        jQuery.each(P, function (R, S) {
            if (S.children) {
                Q += s(S.children)
            } else {
                Q++
            }
        });
        return Q
    }

    function g(X, Y, V, P) {
        var Q = X,
            Z = false,
            S, W, T, R, U;
        if (!P.createSearchChoice || !P.tokenSeparators || P.tokenSeparators.length < 1) {
            return m
        }
        while (true) {
            W = -1;
            for (T = 0, R = P.tokenSeparators.length; T < R; T++) {
                U = P.tokenSeparators[T];
                W = X.indexOf(U);
                if (W >= 0) {
                    break
                }
            }
            if (W < 0) {
                break
            }
            S = X.substring(0, W);
            X = X.substring(W + U.length);
            if (S.length > 0) {
                S = P.createSearchChoice.call(this, S, Y);
                if (S !== m && S !== null && P.id(S) !== m && P.id(S) !== null) {
                    Z = false;
                    for (T = 0, R = Y.length; T < R; T++) {
                        if (u(P.id(S), P.id(Y[T]))) {
                            Z = true;
                            break
                        }
                    }
                    if (!Z) {
                        V(S)
                    }
                }
            }
        }
        if (Q !== X) {
            return X
        }
    }

    function M(P, Q) {
        var R = function () { };
        R.prototype = new P;
        R.prototype.constructor = R;
        R.prototype.parent = P.prototype;
        R.prototype = jQuery.extend(R.prototype, Q);
        return R
    }
    O = M(Object, {
        bind: function (Q) {
            var P = this;
            return function () {
                Q.apply(P, arguments)
            }
        },
        init: function (T) {
            var R, Q, U = ".select2-results";
            this.opts = T = this.prepareOpts(T);
            this.id = T.id;
            if (T.element.data("select2") !== m && T.element.data("select2") !== null) {
                T.element.data("select2").destroy()
            }
            this.container = this.createContainer();
            this.containerId = "s2id_" + (T.element.attr("id") || "autogen" + a());
            this.containerSelector = "#" + this.containerId.replace(/([;&,\.\+\*\~':"\!\^#$%@\[\]\(\)=>\|])/g, "\\$1");
            this.container.attr("id", this.containerId);
            this.body = t(function () {
                return T.element.closest("body")
            });
            j(this.container, this.opts.element, this.opts.adaptContainerCssClass);
            this.container.attr("style", T.element.attr("style"));
            this.container.css(D(T.containerCss));
            this.container.addClass(D(T.containerCssClass));
            this.elementTabIndex = this.opts.element.attr("tabindex");
            this.opts.element.data("select2", this).attr("tabindex", "-1").before(this.container).on("click.select2", B);
            this.container.data("select2", this);
            this.dropdown = this.container.find(".select2-drop");
            j(this.dropdown, this.opts.element, this.opts.adaptDropdownCssClass);
            this.dropdown.addClass(D(T.dropdownCssClass));
            this.dropdown.data("select2", this);
            this.dropdown.on("click", B);
            this.results = R = this.container.find(U);
            this.search = Q = this.container.find("input.select2-input");
            this.queryCount = 0;
            this.resultsPage = 0;
            this.context = null;
            this.initContainer();
            this.container.on("click", B);
            K(this.results);
            this.dropdown.on("mousemove-filtered touchstart touchmove touchend", U, this.bind(this.highlightUnderEvent));
            l(80, this.results);
            this.dropdown.on("scroll-debounced", U, this.bind(this.loadMoreIfNeeded));
            jQuery(this.container).on("change", ".select2-input", function (V) {
                V.stopPropagation()
            });
            jQuery(this.dropdown).on("change", ".select2-input", function (V) {
                V.stopPropagation()
            });
            if (jQuery.fn.mousewheel) {
                R.mousewheel(function (Y, Z, W, V) {
                    var X = R.scrollTop();
                    if (V > 0 && X - V <= 0) {
                        R.scrollTop(0);
                        B(Y)
                    } else {
                        if (V < 0 && R.get(0).scrollHeight - R.scrollTop() + V <= R.height()) {
                            R.scrollTop(R.get(0).scrollHeight - R.height());
                            B(Y)
                        }
                    }
                })
            }
            G(Q);
            Q.on("keyup-change input paste", this.bind(this.updateResults));
            Q.on("focus", function () {
                Q.addClass("select2-focused")
            });
            Q.on("blur", function () {
                Q.removeClass("select2-focused")
            });
            this.dropdown.on("mouseup", U, this.bind(function (V) {
                if (jQuery(V.target).closest(".select2-result-selectable").length > 0) {
                    this.highlightUnderEvent(V);
                    this.selectHighlighted(V)
                }
            }));
            this.dropdown.on("click mouseup mousedown", function (V) {
                V.stopPropagation()
            });
            if (jQuery.isFunction(this.opts.initSelection)) {
                this.initSelection();
                this.monitorSource()
            }
            if (T.maximumInputLength !== null) {
                this.search.attr("maxlength", T.maximumInputLength)
            }
            var S = T.element.prop("disabled");
            if (S === m) {
                S = false
            }
            this.enable(!S);
            var P = T.element.prop("readonly");
            if (P === m) {
                P = false
            }
            this.readonly(P);
            x = x || N();
            this.autofocus = T.element.prop("autofocus");
            T.element.prop("autofocus", false);
            if (this.autofocus) {
                this.focus()
            }
            this.nextSearchTerm = m
        },
        destroy: function () {
            var Q = this.opts.element,
                P = Q.data("select2");
            this.close();
            if (this.propertyObserver) {
                delete this.propertyObserver;
                this.propertyObserver = null
            }
            if (P !== m) {
                P.container.remove();
                P.dropdown.remove();
                Q.removeClass("select2-offscreen").removeData("select2").off(".select2").prop("autofocus", this.autofocus || false);
                if (this.elementTabIndex) {
                    Q.attr({
                        tabindex: this.elementTabIndex
                    })
                } else {
                    Q.removeAttr("tabindex")
                }
                Q.show()
            }
        },
        optionToData: function (P) {
            if (P.is("option")) {
                return {
                    id: P.prop("value"),
                    text: P.text(),
                    element: P.get(),
                    css: P.attr("class"),
                    disabled: P.prop("disabled"),
                    locked: u(P.attr("locked"), "locked") || u(P.data("locked"), true)
                }
            } else {
                if (P.is("optgroup")) {
                    return {
                        text: P.attr("label"),
                        children: [],
                        element: P.get(),
                        css: P.attr("class")
                    }
                }
            }
        },
        prepareOpts: function (U) {
            var S, Q, P, T, R = this;
            S = U.element;
            if (S.get(0).tagName.toLowerCase() === "select") {
                this.select = Q = U.element
            }
            if (Q) {
                jQuery.each(["id", "multiple", "ajax", "query", "createSearchChoice", "initSelection", "data", "tags"], function () {
                    if (this in U) {
                        throw new Error("Option '" + this + "' is not allowed for Select2 when attached to a <select> element.")
                    }
                })
            }
            U = jQuery.extend({}, {
                populateResults: function (V, W, Y) {
                    var X, Z = this.opts.id;
                    X = function (ag, aa, af) {
                        var ah, ac, am, aj, ad, al, ab, ak, ai, ae;
                        ag = U.sortResults(ag, aa, Y);
                        for (ah = 0, ac = ag.length; ah < ac; ah = ah + 1) {
                            am = ag[ah];
                            ad = (am.disabled === true);
                            aj = (!ad) && (Z(am) !== m);
                            al = am.children && am.children.length > 0;
                            ab = jQuery("<li></li>");
                            ab.addClass("select2-results-dept-" + af);
                            ab.addClass("select2-result");
                            ab.addClass(aj ? "select2-result-selectable" : "select2-result-unselectable");
                            if (ad) {
                                ab.addClass("select2-disabled")
                            }
                            if (al) {
                                ab.addClass("select2-result-with-children")
                            }
                            ab.addClass(R.opts.formatResultCssClass(am));
                            ak = jQuery(document.createElement("div"));
                            ak.addClass("select2-result-label");
                            ae = U.formatResult(am, ak, Y, R.opts.escapeMarkup);
                            if (ae !== m) {
                                ak.html(ae)
                            }
                            ab.append(ak);
                            if (al) {
                                ai = jQuery("<ul></ul>");
                                ai.addClass("select2-result-sub");
                                X(am.children, ai, af + 1);
                                ab.append(ai)
                            }
                            ab.data("select2-data", am);
                            aa.append(ab)
                        }
                    };
                    X(W, V, 0)
                }
            }, jQuery.fn.select2.defaults, U);
            if (typeof (U.id) !== "function") {
                P = U.id;
                U.id = function (V) {
                    return V[P]
                }
            }
            if (jQuery.isArray(U.element.data("select2Tags"))) {
                if ("tags" in U) {
                    throw "tags specified as both an attribute 'data-select2-tags' and in options of Select2 " + U.element.attr("id")
                }
                U.tags = U.element.data("select2Tags")
            }
            if (Q) {
                U.query = this.bind(function (Z) {
                    var Y = {
                        results: [],
                        more: false
                    },
                        X = Z.term,
                        W, V, aa;
                    aa = function (ab, ad) {
                        var ac;
                        if (ab.is("option")) {
                            if (Z.matcher(X, ab.text(), ab)) {
                                ad.push(R.optionToData(ab))
                            }
                        } else {
                            if (ab.is("optgroup")) {
                                ac = R.optionToData(ab);
                                ab.children().each2(function (ae, af) {
                                    aa(af, ac.children)
                                });
                                if (ac.children.length > 0) {
                                    ad.push(ac)
                                }
                            }
                        }
                    };
                    W = S.children();
                    if (this.getPlaceholder() !== m && W.length > 0) {
                        V = this.getPlaceholderOption();
                        if (V) {
                            W = W.not(V)
                        }
                    }
                    W.each2(function (ab, ac) {
                        aa(ac, Y.results)
                    });
                    Z.callback(Y)
                });
                U.id = function (V) {
                    return V.id
                };
                U.formatResultCssClass = function (V) {
                    return V.css
                }
            } else {
                if (!("query" in U)) {
                    if ("ajax" in U) {
                        T = U.element.data("ajax-url");
                        if (T && T.length > 0) {
                            U.ajax.url = T
                        }
                        U.query = F.call(U.element, U.ajax)
                    } else {
                        if ("data" in U) {
                            U.query = I(U.data)
                        } else {
                            if ("tags" in U) {
                                U.query = A(U.tags);
                                if (U.createSearchChoice === m) {
                                    U.createSearchChoice = function (V) {
                                        return {
                                            id: jQuery.trim(V),
                                            text: jQuery.trim(V)
                                        }
                                    }
                                }
                                if (U.initSelection === m) {
                                    U.initSelection = function (V, X) {
                                        var W = [];
                                        jQuery(i(V.val(), U.separator)).each(function () {
                                            var Z = {
                                                id: this,
                                                text: this
                                            },
                                                Y = U.tags;
                                            if (jQuery.isFunction(Y)) {
                                                Y = Y()
                                            }
                                            jQuery(Y).each(function () {
                                                if (u(this.id, Z.id)) {
                                                    Z = this;
                                                    return false
                                                }
                                            });
                                            W.push(Z)
                                        });
                                        X(W)
                                    }
                                }
                            }
                        }
                    }
                }
            } if (typeof (U.query) !== "function") {
                throw "query function not defined for Select2 " + U.element.attr("id")
            }
            return U
        },
        monitorSource: function () {
            var Q = this.opts.element,
                R, P;
            Q.on("change.select2", this.bind(function (S) {
                if (this.opts.element.data("select2-change-triggered") !== true) {
                    this.initSelection()
                }
            }));
            R = this.bind(function () {
                var T = Q.prop("disabled");
                if (T === m) {
                    T = false
                }
                this.enable(!T);
                var S = Q.prop("readonly");
                if (S === m) {
                    S = false
                }
                this.readonly(S);
                j(this.container, this.opts.element, this.opts.adaptContainerCssClass);
                this.container.addClass(D(this.opts.containerCssClass));
                j(this.dropdown, this.opts.element, this.opts.adaptDropdownCssClass);
                this.dropdown.addClass(D(this.opts.dropdownCssClass))
            });
            Q.on("propertychange.select2", R);
            if (this.mutationCallback === m) {
                this.mutationCallback = function (S) {
                    S.forEach(R)
                }
            }
            P = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver;
            if (P !== m) {
                if (this.propertyObserver) {
                    delete this.propertyObserver;
                    this.propertyObserver = null
                }
                this.propertyObserver = new P(this.mutationCallback);
                this.propertyObserver.observe(Q.get(0), {
                    attributes: true,
                    subtree: false
                })
            }
        },
        triggerSelect: function (Q) {
            var P = jQuery.Event("select2-selecting", {
                val: this.id(Q),
                object: Q
            });
            this.opts.element.trigger(P);
            return !P.isDefaultPrevented()
        },
        triggerChange: function (P) {
            P = P || {};
            P = jQuery.extend({}, P, {
                type: "change",
                val: this.val()
            });
            this.opts.element.data("select2-change-triggered", true);
            this.opts.element.trigger(P);
            this.opts.element.data("select2-change-triggered", false);
            this.opts.element.click();
            if (this.opts.blurOnChange) {
                this.opts.element.blur()
            }
        },
        isInterfaceEnabled: function () {
            return this.enabledInterface === true
        },
        enableInterface: function () {
            var P = this._enabled && !this._readonly,
                Q = !P;
            if (P === this.enabledInterface) {
                return false
            }
            this.container.toggleClass("select2-container-disabled", Q);
            this.close();
            this.enabledInterface = P;
            return true
        },
        enable: function (P) {
            if (P === m) {
                P = true
            }
            if (this._enabled === P) {
                return
            }
            this._enabled = P;
            this.opts.element.prop("disabled", !P);
            this.enableInterface()
        },
        disable: function () {
            this.enable(false)
        },
        readonly: function (P) {
            if (P === m) {
                P = false
            }
            if (this._readonly === P) {
                return false
            }
            this._readonly = P;
            this.opts.element.prop("readonly", P);
            this.enableInterface();
            return true
        },
        opened: function () {
            return this.container.hasClass("select2-dropdown-open")
        },
        positionDropdown: function () {
            var R = this.dropdown,
                U = this.container.offset(),
                ad = this.container.outerHeight(false),
                ae = this.container.outerWidth(false),
                Z = R.outerHeight(false),
                ab = jQuery(window),
                ai = ab.width(),
                X = ab.height(),
                Q = ab.scrollLeft() + ai,
                ah = ab.scrollTop() + X,
                S = U.top + ad,
                af = U.left,
                P = S + Z <= ah,
                W = (U.top - Z) >= this.body().scrollTop(),
                aa = R.outerWidth(false),
                ak = af + aa <= Q,
                aj = R.hasClass("select2-drop-above"),
                V, ag, T, Y, ac;
            if (aj) {
                ag = true;
                if (!W && P) {
                    T = true;
                    ag = false
                }
            } else {
                ag = false;
                if (!P && W) {
                    T = true;
                    ag = true
                }
            } if (T) {
                R.hide();
                U = this.container.offset();
                ad = this.container.outerHeight(false);
                ae = this.container.outerWidth(false);
                Z = R.outerHeight(false);
                Q = ab.scrollLeft() + ai;
                ah = ab.scrollTop() + X;
                S = U.top + ad;
                af = U.left;
                aa = R.outerWidth(false);
                ak = af + aa <= Q;
                R.show()
            }
            if (this.opts.dropdownAutoWidth) {
                ac = jQuery(".select2-results", R)[0];
                R.addClass("select2-drop-auto-width");
                R.css("width", "");
                aa = R.outerWidth(false) + (ac.scrollHeight === ac.clientHeight ? 0 : x.width);
                aa > ae ? ae = aa : aa = ae;
                ak = af + aa <= Q
            } else {
                this.container.removeClass("select2-drop-auto-width")
            } if (this.body().css("position") !== "static") {
                V = this.body().offset();
                S -= V.top;
                af -= V.left
            }
            if (!ak) {
                af = U.left + ae - aa
            }
            Y = {
                left: af,
                width: ae
            };
            if (ag) {
                Y.bottom = X - U.top;
                Y.top = "auto";
                this.container.addClass("select2-drop-above");
                R.addClass("select2-drop-above")
            } else {
                Y.top = S;
                Y.bottom = "auto";
                this.container.removeClass("select2-drop-above");
                R.removeClass("select2-drop-above")
            }
            Y = jQuery.extend(Y, D(this.opts.dropdownCss));
            R.css(Y)
        },
        shouldOpen: function () {
            var P;
            if (this.opened()) {
                return false
            }
            if (this._enabled === false || this._readonly === true) {
                return false
            }
            P = jQuery.Event("select2-opening");
            this.opts.element.trigger(P);
            return !P.isDefaultPrevented()
        },
        clearDropdownAlignmentPreference: function () {
            this.container.removeClass("select2-drop-above");
            this.dropdown.removeClass("select2-drop-above")
        },
        open: function () {
            if (!this.shouldOpen()) {
                return false
            }
            this.opening();
            return true
        },
        opening: function () {
            var U = this.containerId,
                P = "scroll." + U,
                S = "resize." + U,
                R = "orientationchange." + U,
                Q;
            this.container.addClass("select2-dropdown-open").addClass("select2-container-active");
            this.clearDropdownAlignmentPreference();
            if (this.dropdown[0] !== this.body().children().last()[0]) {
                this.dropdown.detach().appendTo(this.body())
            }
            Q = jQuery("#select2-drop-mask");
            if (Q.length == 0) {
                Q = jQuery(document.createElement("div"));
                Q.attr("id", "select2-drop-mask").attr("class", "select2-drop-mask");
                Q.hide();
                Q.appendTo(this.body());
                Q.on("mousedown touchstart click", function (W) {
                    var X = jQuery("#select2-drop"),
                        V;
                    if (X.length > 0) {
                        V = X.data("select2");
                        if (V.opts.selectOnBlur) {
                            V.selectHighlighted({
                                noFocus: true
                            })
                        }
                        V.close({
                            focus: true
                        });
                        W.preventDefault();
                        W.stopPropagation()
                    }
                })
            }
            if (this.dropdown.prev()[0] !== Q[0]) {
                this.dropdown.before(Q)
            }
            jQuery("#select2-drop").removeAttr("id");
            this.dropdown.attr("id", "select2-drop");
            Q.show();
            this.positionDropdown();
            this.dropdown.show();
            this.positionDropdown();
            this.dropdown.addClass("select2-drop-active");
            var T = this;
            this.container.parents().add(window).each(function () {
                jQuery(this).on(S + " " + P + " " + R, function (V) {
                    T.positionDropdown()
                })
            })
        },
        close: function () {
            if (!this.opened()) {
                return
            }
            var S = this.containerId,
                P = "scroll." + S,
                R = "resize." + S,
                Q = "orientationchange." + S;
            this.container.parents().add(window).each(function () {
                jQuery(this).off(P).off(R).off(Q)
            });
            this.clearDropdownAlignmentPreference();
            jQuery("#select2-drop-mask").hide();
            this.dropdown.removeAttr("id");
            this.dropdown.hide();
            this.container.removeClass("select2-dropdown-open").removeClass("select2-container-active");
            this.results.empty();
            this.clearSearch();
            this.search.removeClass("select2-active");
            this.opts.element.trigger(jQuery.Event("select2-close"))
        },
        externalSearch: function (P) {
            this.open();
            this.search.val(P);
            this.updateResults(false)
        },
        clearSearch: function () { },
        getMaximumSelectionSize: function () {
            return D(this.opts.maximumSelectionSize)
        },
        ensureHighlightVisible: function () {
            var S = this.results,
                R, P, W, V, T, U, Q;
            P = this.highlight();
            if (P < 0) {
                return
            }
            if (P == 0) {
                S.scrollTop(0);
                return
            }
            R = this.findHighlightableChoices().find(".select2-result-label");
            W = jQuery(R[P]);
            V = W.offset().top + W.outerHeight(true);
            if (P === R.length - 1) {
                Q = S.find("li.select2-more-results");
                if (Q.length > 0) {
                    V = Q.offset().top + Q.outerHeight(true)
                }
            }
            T = S.offset().top + S.outerHeight(true);
            if (V > T) {
                S.scrollTop(S.scrollTop() + (V - T))
            }
            U = W.offset().top - S.offset().top;
            if (U < 0 && W.css("display") != "none") {
                S.scrollTop(S.scrollTop() + U)
            }
        },
        findHighlightableChoices: function () {
            return this.results.find(".select2-result-selectable:not(.select2-disabled, .select2-selected)")
        },
        moveHighlight: function (S) {
            var R = this.findHighlightableChoices(),
                Q = this.highlight();
            while (Q > -1 && Q < R.length) {
                Q += S;
                var P = jQuery(R[Q]);
                if (P.hasClass("select2-result-selectable") && !P.hasClass("select2-disabled") && !P.hasClass("select2-selected")) {
                    this.highlight(Q);
                    break
                }
            }
        },
        highlight: function (Q) {
            var S = this.findHighlightableChoices(),
                P, R;
            if (arguments.length === 0) {
                return r(S.filter(".select2-highlighted")[0], S.get())
            }
            if (Q >= S.length) {
                Q = S.length - 1
            }
            if (Q < 0) {
                Q = 0
            }
            this.removeHighlight();
            P = jQuery(S[Q]);
            P.addClass("select2-highlighted");
            this.ensureHighlightVisible();
            R = P.data("select2-data");
            if (R) {
                this.opts.element.trigger({
                    type: "select2-highlight",
                    val: this.id(R),
                    choice: R
                })
            }
        },
        removeHighlight: function () {
            this.results.find(".select2-highlighted").removeClass("select2-highlighted")
        },
        countSelectableResults: function () {
            return this.findHighlightableChoices().length
        },
        highlightUnderEvent: function (Q) {
            var P = jQuery(Q.target).closest(".select2-result-selectable");
            if (P.length > 0 && !P.is(".select2-highlighted")) {
                var R = this.findHighlightableChoices();
                this.highlight(R.index(P))
            } else {
                if (P.length == 0) {
                    this.removeHighlight()
                }
            }
        },
        loadMoreIfNeeded: function () {
            var T = this.results,
                S = T.find("li.select2-more-results"),
                V, U = this.resultsPage + 1,
                P = this,
                R = this.search.val(),
                Q = this.context;
            if (S.length === 0) {
                return
            }
            V = S.offset().top - T.offset().top - T.height();
            if (V <= this.opts.loadMorePadding) {
                S.addClass("select2-active");
                this.opts.query({
                    element: this.opts.element,
                    term: R,
                    page: U,
                    context: Q,
                    matcher: this.opts.matcher,
                    callback: this.bind(function (W) {
                        if (!P.opened()) {
                            return
                        }
                        P.opts.populateResults.call(this, T, W.results, {
                            term: R,
                            page: U,
                            context: Q
                        });
                        P.postprocessResults(W, false, false);
                        if (W.more === true) {
                            S.detach().appendTo(T).text(P.opts.formatLoadMore(U + 1));
                            window.setTimeout(function () {
                                P.loadMoreIfNeeded()
                            }, 10)
                        } else {
                            S.remove()
                        }
                        P.positionDropdown();
                        P.resultsPage = U;
                        P.context = W.context;
                        this.opts.element.trigger({
                            type: "select2-loaded",
                            items: W
                        })
                    })
                })
            }
        },
        tokenize: function () { },
        updateResults: function (X) {
            var ab = this.search,
                V = this.results,
                P = this.opts,
                U, aa = this,
                Y, T = ab.val(),
                R = jQuery.data(this.container, "select2-last-term"),
                Z;
            if (X !== true && R && u(T, R)) {
                return
            }
            jQuery.data(this.container, "select2-last-term", T);
            if (X !== true && (this.showSearchInput === false || !this.opened())) {
                return
            }

            function W() {
                ab.removeClass("select2-active");
                aa.positionDropdown()
            }

            function Q(ac) {
                V.html(ac);
                W()
            }
            Z = ++this.queryCount;
            var S = this.getMaximumSelectionSize();
            if (S >= 1) {
                U = this.data();
                if (jQuery.isArray(U) && U.length >= S && z(P.formatSelectionTooBig, "formatSelectionTooBig")) {
                    Q("<li class='select2-selection-limit'>" + P.formatSelectionTooBig(S) + "</li>");
                    return
                }
            }
            if (ab.val().length < P.minimumInputLength) {
                if (z(P.formatInputTooShort, "formatInputTooShort")) {
                    Q("<li class='select2-no-results'>" + P.formatInputTooShort(ab.val(), P.minimumInputLength) + "</li>")
                } else {
                    Q("")
                } if (X && this.showSearch) {
                    this.showSearch(true)
                }
                return
            }
            if (P.maximumInputLength && ab.val().length > P.maximumInputLength) {
                if (z(P.formatInputTooLong, "formatInputTooLong")) {
                    Q("<li class='select2-no-results'>" + P.formatInputTooLong(ab.val(), P.maximumInputLength) + "</li>")
                } else {
                    Q("")
                }
                return
            }
            if (P.formatSearching && this.findHighlightableChoices().length === 0) {
                Q("<li class='select2-searching'>" + P.formatSearching() + "</li>")
            }
            ab.addClass("select2-active");
            this.removeHighlight();
            Y = this.tokenize();
            if (Y != m && Y != null) {
                ab.val(Y)
            }
            this.resultsPage = 1;
            P.query({
                element: P.element,
                term: ab.val(),
                page: this.resultsPage,
                context: null,
                matcher: P.matcher,
                callback: this.bind(function (ad) {
                    var ac;
                    if (Z != this.queryCount) {
                        return
                    }
                    if (!this.opened()) {
                        this.search.removeClass("select2-active");
                        return
                    }
                    this.context = (ad.context === m) ? null : ad.context;
                    if (this.opts.createSearchChoice && ab.val() !== "") {
                        ac = this.opts.createSearchChoice.call(aa, ab.val(), ad.results);
                        if (ac !== m && ac !== null && aa.id(ac) !== m && aa.id(ac) !== null) {
                            if (jQuery(ad.results).filter(function () {
                                return u(aa.id(this), aa.id(ac))
                            }).length === 0) {
                                ad.results.unshift(ac)
                            }
                        }
                    }
                    if (ad.results.length === 0 && z(P.formatNoMatches, "formatNoMatches")) {
                        Q("<li class='select2-no-results'>" + P.formatNoMatches(ab.val()) + "</li>");
                        return
                    }
                    V.empty();
                    aa.opts.populateResults.call(this, V, ad.results, {
                        term: ab.val(),
                        page: this.resultsPage,
                        context: null
                    });
                    if (ad.more === true && z(P.formatLoadMore, "formatLoadMore")) {
                        V.append("<li class='select2-more-results'>" + aa.opts.escapeMarkup(P.formatLoadMore(this.resultsPage)) + "</li>");
                        window.setTimeout(function () {
                            aa.loadMoreIfNeeded()
                        }, 10)
                    }
                    this.postprocessResults(ad, X);
                    W();
                    this.opts.element.trigger({
                        type: "select2-loaded",
                        items: ad
                    })
                })
            })
        },
        cancel: function () {
            this.close()
        },
        blur: function () {
            if (this.opts.selectOnBlur) {
                this.selectHighlighted({
                    noFocus: true
                })
            }
            this.close();
            this.container.removeClass("select2-container-active");
            if (this.search[0] === document.activeElement) {
                this.search.blur()
            }
            this.clearSearch();
            this.selection.find(".select2-search-choice-focus").removeClass("select2-search-choice-focus")
        },
        focusSearch: function () {
            J(this.search)
        },
        selectHighlighted: function (Q) {
            var P = this.highlight(),
                R = this.results.find(".select2-highlighted"),
                S = R.closest(".select2-result").data("select2-data");
            if (S) {
                this.highlight(P);
                this.onSelect(S, Q)
            } else {
                if (Q && Q.noFocus) {
                    this.close()
                }
            }
        },
        getPlaceholder: function () {
            var P;
            return this.opts.element.attr("placeholder") || this.opts.element.attr("data-placeholder") || this.opts.element.data("placeholder") || this.opts.placeholder || ((P = this.getPlaceholderOption()) !== m ? P.text() : m)
        },
        getPlaceholderOption: function () {
            if (this.select) {
                var P = this.select.children("option").first();
                if (this.opts.placeholderOption !== m) {
                    return (this.opts.placeholderOption === "first" && P) || (typeof this.opts.placeholderOption === "function" && this.opts.placeholderOption(this.select))
                } else {
                    if (P.text() === "" && P.val() === "") {
                        return P
                    }
                }
            }
        },
        initContainerWidth: function () {
            function Q() {
                var V, T, W, U, S, R;
                if (this.opts.width === "off") {
                    return null
                } else {
                    if (this.opts.width === "element") {
                        return this.opts.element.outerWidth(false) === 0 ? "auto" : this.opts.element.outerWidth(false) + "px"
                    } else {
                        if (this.opts.width === "copy" || this.opts.width === "resolve") {
                            V = this.opts.element.attr("style");
                            if (V !== m) {
                                T = V.split(";");
                                for (U = 0, S = T.length; U < S; U = U + 1) {
                                    R = T[U].replace(/\s/g, "");
                                    W = R.match(/^width:(([-+]?([0-9]*\.)?[0-9]+)(px|em|ex|%|in|cm|mm|pt|pc))/i);
                                    if (W !== null && W.length >= 1) {
                                        return W[1]
                                    }
                                }
                            }
                            if (this.opts.width === "resolve") {
                                V = this.opts.element.css("width");
                                if (V.indexOf("%") > 0) {
                                    return V
                                }
                                return (this.opts.element.outerWidth(false) === 0 ? "auto" : this.opts.element.outerWidth(false) + "px")
                            }
                            return null
                        } else {
                            if (jQuery.isFunction(this.opts.width)) {
                                return this.opts.width()
                            } else {
                                return this.opts.width
                            }
                        }
                    }
                }
            }
            var P = Q.call(this);
            if (P !== null) {
                this.container.css("width", P)
            }
        }
    });
    y = M(O, {
        createContainer: function () {
            var P = jQuery(document.createElement("div")).attr({
                "class": "select2-container"
            }).html(["<a href='javascript:void(0)' onclick='return false;' class='select2-choice' tabindex='-1'>", "   <span class='select2-chosen'>&nbsp;</span><abbr class='select2-search-choice-close'></abbr>", "   <span class='select2-arrow'><b></b></span>", "</a>", "<input class='select2-focusser select2-offscreen' type='text'/>", "<div class='select2-drop select2-display-none'>", "   <div class='select2-search'>", "       <input type='text' autocomplete='off' autocorrect='off' autocapitalize='off' spellcheck='false' class='select2-input'/>", "   </div>", "   <ul class='select2-results'>", "   </ul>", "</div>"].join(""));
            return P
        },
        enableInterface: function () {
            if (this.parent.enableInterface.apply(this, arguments)) {
                this.focusser.prop("disabled", !this.isInterfaceEnabled())
            }
        },
        opening: function () {
            var R, Q, P;
            if (this.opts.minimumResultsForSearch >= 0) {
                this.showSearch(true)
            }
            this.parent.opening.apply(this, arguments);
            if (this.showSearchInput !== false) {
                this.search.val(this.focusser.val())
            }
            this.search.focus();
            R = this.search.get(0);
            if (R.createTextRange) {
                Q = R.createTextRange();
                Q.collapse(false);
                Q.select()
            } else {
                if (R.setSelectionRange) {
                    P = this.search.val().length;
                    R.setSelectionRange(P, P)
                }
            } if (this.search.val() === "") {
                if (this.nextSearchTerm != m) {
                    this.search.val(this.nextSearchTerm);
                    this.search.select()
                }
            }
            this.focusser.prop("disabled", true).val("");
            this.updateResults(true);
            this.opts.element.trigger(jQuery.Event("select2-open"))
        },
        close: function (P) {
            if (!this.opened()) {
                return
            }
            this.parent.close.apply(this, arguments);
            P = P || {
                focus: true
            };
            this.focusser.removeAttr("disabled");
            if (P.focus) {
                this.focusser.focus()
            }
        },
        focus: function () {
            if (this.opened()) {
                this.close()
            } else {
                this.focusser.removeAttr("disabled");
                this.focusser.focus()
            }
        },
        isFocused: function () {
            return this.container.hasClass("select2-container-active")
        },
        cancel: function () {
            this.parent.cancel.apply(this, arguments);
            this.focusser.removeAttr("disabled");
            this.focusser.focus()
        },
        destroy: function () {
            jQuery("label[for='" + this.focusser.attr("id") + "']").attr("for", this.opts.element.attr("id"));
            this.parent.destroy.apply(this, arguments)
        },
        initContainer: function () {
            var Q, P = this.container,
                R = this.dropdown;
            if (this.opts.minimumResultsForSearch < 0) {
                this.showSearch(false)
            } else {
                this.showSearch(true)
            }
            this.selection = Q = P.find(".select2-choice");
            this.focusser = P.find(".select2-focusser");
            this.focusser.attr("id", "s2id_autogen" + a());
            jQuery("label[for='" + this.opts.element.attr("id") + "']").attr("for", this.focusser.attr("id"));
            this.focusser.attr("tabindex", this.elementTabIndex);
            this.search.on("keydown", this.bind(function (S) {
                if (!this.isInterfaceEnabled()) {
                    return
                }
                if (S.which === L.PAGE_UP || S.which === L.PAGE_DOWN) {
                    B(S);
                    return
                }
                switch (S.which) {
                    case L.UP:
                    case L.DOWN:
                        this.moveHighlight((S.which === L.UP) ? -1 : 1);
                        B(S);
                        return;
                    case L.ENTER:
                        this.selectHighlighted();
                        B(S);
                        return;
                    case L.TAB:
                        this.selectHighlighted({
                            noFocus: true
                        });
                        return;
                    case L.ESC:
                        this.cancel(S);
                        B(S);
                        return
                }
            }));
            this.search.on("blur", this.bind(function (S) {
                if (document.activeElement === this.body().get(0)) {
                    window.setTimeout(this.bind(function () {
                        this.search.focus()
                    }), 0)
                }
            }));
            this.focusser.on("keydown", this.bind(function (S) {
                if (!this.isInterfaceEnabled()) {
                    return
                }
                if (S.which === L.TAB || L.isControl(S) || L.isFunctionKey(S) || S.which === L.ESC) {
                    return
                }
                if (this.opts.openOnEnter === false && S.which === L.ENTER) {
                    B(S);
                    return
                }
                if (S.which == L.DOWN || S.which == L.UP || (S.which == L.ENTER && this.opts.openOnEnter)) {
                    if (S.altKey || S.ctrlKey || S.shiftKey || S.metaKey) {
                        return
                    }
                    this.open();
                    B(S);
                    return
                }
                if (S.which == L.DELETE || S.which == L.BACKSPACE) {
                    if (this.opts.allowClear) {
                        this.clear()
                    }
                    B(S);
                    return
                }
            }));
            G(this.focusser);
            this.focusser.on("keyup-change input", this.bind(function (S) {
                if (this.opts.minimumResultsForSearch >= 0) {
                    S.stopPropagation();
                    if (this.opened()) {
                        return
                    }
                    this.open()
                }
            }));
            Q.on("mousedown", "abbr", this.bind(function (S) {
                if (!this.isInterfaceEnabled()) {
                    return
                }
                this.clear();
                b(S);
                this.close();
                this.selection.focus()
            }));
            Q.on("mousedown", this.bind(function (S) {
                if (!this.container.hasClass("select2-container-active")) {
                    this.opts.element.trigger(jQuery.Event("select2-focus"))
                }
                if (this.opened()) {
                    this.close()
                } else {
                    if (this.isInterfaceEnabled()) {
                        this.open()
                    }
                }
                B(S)
            }));
            R.on("mousedown", this.bind(function () {
                this.search.focus()
            }));
            Q.on("focus", this.bind(function (S) {
                B(S)
            }));
            this.focusser.on("focus", this.bind(function () {
                if (!this.container.hasClass("select2-container-active")) {
                    this.opts.element.trigger(jQuery.Event("select2-focus"))
                }
                this.container.addClass("select2-container-active")
            })).on("blur", this.bind(function () {
                if (!this.opened()) {
                    this.container.removeClass("select2-container-active");
                    this.opts.element.trigger(jQuery.Event("select2-blur"))
                }
            }));
            this.search.on("focus", this.bind(function () {
                if (!this.container.hasClass("select2-container-active")) {
                    this.opts.element.trigger(jQuery.Event("select2-focus"))
                }
                this.container.addClass("select2-container-active")
            }));
            this.initContainerWidth();
            this.opts.element.addClass("select2-offscreen");
            this.setPlaceholder()
        },
        clear: function (R) {
            var S = this.selection.data("select2-data");
            if (S) {
                var Q = jQuery.Event("select2-clearing");
                this.opts.element.trigger(Q);
                if (Q.isDefaultPrevented()) {
                    return
                }
                var P = this.getPlaceholderOption();
                this.opts.element.val(P ? P.val() : "");
                this.selection.find(".select2-chosen").empty();
                this.selection.removeData("select2-data");
                this.setPlaceholder();
                if (R !== false) {
                    this.opts.element.trigger({
                        type: "select2-removed",
                        val: this.id(S),
                        choice: S
                    });
                    this.triggerChange({
                        removed: S
                    })
                }
            }
        },
        initSelection: function () {
            var Q;
            if (this.isPlaceholderOptionSelected()) {
                this.updateSelection(null);
                this.close();
                this.setPlaceholder()
            } else {
                var P = this;
                this.opts.initSelection.call(null, this.opts.element, function (R) {
                    if (R !== m && R !== null) {
                        P.updateSelection(R);
                        P.close();
                        P.setPlaceholder()
                    }
                })
            }
        },
        isPlaceholderOptionSelected: function () {
            var P;
            if (!this.getPlaceholder()) {
                return false
            }
            return ((P = this.getPlaceholderOption()) !== m && P.prop("selected")) || (this.opts.element.val() === "") || (this.opts.element.val() === m) || (this.opts.element.val() === null)
        },
        prepareOpts: function () {
            var Q = this.parent.prepareOpts.apply(this, arguments),
                P = this;
            if (Q.element.get(0).tagName.toLowerCase() === "select") {
                Q.initSelection = function (R, T) {
                    var S = R.find("option").filter(function () {
                        return this.selected
                    });
                    T(P.optionToData(S))
                }
            } else {
                if ("data" in Q) {
                    Q.initSelection = Q.initSelection || function (S, U) {
                        var T = S.val();
                        var R = null;
                        Q.query({
                            matcher: function (V, Y, W) {
                                var X = u(T, Q.id(W));
                                if (X) {
                                    R = W
                                }
                                return X
                            },
                            callback: !jQuery.isFunction(U) ? jQuery.noop : function () {
                                U(R)
                            }
                        })
                    }
                }
            }
            return Q
        },
        getPlaceholder: function () {
            if (this.select) {
                if (this.getPlaceholderOption() === m) {
                    return m
                }
            }
            return this.parent.getPlaceholder.apply(this, arguments)
        },
        setPlaceholder: function () {
            var P = this.getPlaceholder();
            if (this.isPlaceholderOptionSelected() && P !== m) {
                if (this.select && this.getPlaceholderOption() === m) {
                    return
                }
                this.selection.find(".select2-chosen").html(this.opts.escapeMarkup(P));
                this.selection.addClass("select2-default");
                this.container.removeClass("select2-allowclear")
            }
        },
        postprocessResults: function (U, Q, T) {
            var S = 0,
                P = this,
                V = true;
            this.findHighlightableChoices().each2(function (W, X) {
                if (u(P.id(X.data("select2-data")), P.opts.element.val())) {
                    S = W;
                    return false
                }
            });
            if (T !== false) {
                if (Q === true && S >= 0) {
                    this.highlight(S)
                } else {
                    this.highlight(0)
                }
            }
            if (Q === true) {
                var R = this.opts.minimumResultsForSearch;
                if (R >= 0) {
                    this.showSearch(s(U.results) >= R)
                }
            }
        },
        showSearch: function (P) {
            if (this.showSearchInput === P) {
                return
            }
            this.showSearchInput = P;
            this.dropdown.find(".select2-search").toggleClass("select2-search-hidden", !P);
            this.dropdown.find(".select2-search").toggleClass("select2-offscreen", !P);
            jQuery(this.dropdown, this.container).toggleClass("select2-with-searchbox", P)
        },
        onSelect: function (R, Q) {
            if (!this.triggerSelect(R)) {
                return
            }
            var P = this.opts.element.val(),
                S = this.data();
            this.opts.element.val(this.id(R));
            this.updateSelection(R);
            this.opts.element.trigger({
                type: "select2-selected",
                val: this.id(R),
                choice: R
            });
            this.nextSearchTerm = this.opts.nextSearchTerm(R, this.search.val());
            this.close();
            if (!Q || !Q.noFocus) {
                this.focusser.focus()
            }
            if (!u(P, this.id(R))) {
                this.triggerChange({
                    added: R,
                    removed: S
                })
            }
        },
        updateSelection: function (S) {
            var Q = this.selection.find(".select2-chosen"),
                R, P;
            this.selection.data("select2-data", S);
            Q.empty();
            if (S !== null) {
                R = this.opts.formatSelection(S, Q, this.opts.escapeMarkup)
            }
            if (R !== m) {
                Q.append(R)
            }
            P = this.opts.formatSelectionCssClass(S, Q);
            if (P !== m) {
                Q.addClass(P)
            }
            this.selection.removeClass("select2-default");
            if (this.opts.allowClear && this.getPlaceholder() !== m) {
                this.container.addClass("select2-allowclear")
            }
        },
        val: function () {
            var T, Q = false,
                R = null,
                P = this,
                S = this.data();
            if (arguments.length === 0) {
                return this.opts.element.val()
            }
            T = arguments[0];
            if (arguments.length > 1) {
                Q = arguments[1]
            }
            if (this.select) {
                this.select.val(T).find("option").filter(function () {
                    return this.selected
                }).each2(function (U, V) {
                    R = P.optionToData(V);
                    return false
                });
                this.updateSelection(R);
                this.setPlaceholder();
                if (Q) {
                    this.triggerChange({
                        added: R,
                        removed: S
                    })
                }
            } else {
                if (!T && T !== 0) {
                    this.clear(Q);
                    return
                }
                if (this.opts.initSelection === m) {
                    throw new Error("cannot call val() if initSelection() is not defined")
                }
                this.opts.element.val(T);
                this.opts.initSelection(this.opts.element, function (U) {
                    P.opts.element.val(!U ? "" : P.id(U));
                    P.updateSelection(U);
                    P.setPlaceholder();
                    if (Q) {
                        P.triggerChange({
                            added: U,
                            removed: S
                        })
                    }
                })
            }
        },
        clearSearch: function () {
            this.search.val("");
            this.focusser.val("")
        },
        data: function (R) {
            var Q, P = false;
            if (arguments.length === 0) {
                Q = this.selection.data("select2-data");
                if (Q == m) {
                    Q = null
                }
                return Q
            } else {
                if (arguments.length > 1) {
                    P = arguments[1]
                }
                if (!R) {
                    this.clear(P)
                } else {
                    Q = this.data();
                    this.opts.element.val(!R ? "" : this.id(R));
                    this.updateSelection(R);
                    if (P) {
                        this.triggerChange({
                            added: R,
                            removed: Q
                        })
                    }
                }
            }
        }
    });
    c = M(O, {
        createContainer: function () {
            var P = jQuery(document.createElement("div")).attr({
                "class": "select2-container select2-container-multi"
            }).html(["<ul class='select2-choices'>", "  <li class='select2-search-field'>", "    <input type='text' autocomplete='off' autocorrect='off' autocapitalize='off' spellcheck='false' class='select2-input'>", "  </li>", "</ul>", "<div class='select2-drop select2-drop-multi select2-display-none'>", "   <ul class='select2-results'>", "   </ul>", "</div>"].join(""));
            return P
        },
        prepareOpts: function () {
            var Q = this.parent.prepareOpts.apply(this, arguments),
                P = this;
            if (Q.element.get(0).tagName.toLowerCase() === "select") {
                Q.initSelection = function (R, T) {
                    var S = [];
                    R.find("option").filter(function () {
                        return this.selected
                    }).each2(function (U, V) {
                        S.push(P.optionToData(V))
                    });
                    T(S)
                }
            } else {
                if ("data" in Q) {
                    Q.initSelection = Q.initSelection || function (R, U) {
                        var S = i(R.val(), Q.separator);
                        var T = [];
                        Q.query({
                            matcher: function (V, Y, W) {
                                var X = jQuery.grep(S, function (Z) {
                                    return u(Z, Q.id(W))
                                }).length;
                                if (X) {
                                    T.push(W)
                                }
                                return X
                            },
                            callback: !jQuery.isFunction(U) ? jQuery.noop : function () {
                                var V = [];
                                for (var Y = 0; Y < S.length; Y++) {
                                    var Z = S[Y];
                                    for (var X = 0; X < T.length; X++) {
                                        var W = T[X];
                                        if (u(Z, Q.id(W))) {
                                            V.push(W);
                                            T.splice(X, 1);
                                            break
                                        }
                                    }
                                }
                                U(V)
                            }
                        })
                    }
                }
            }
            return Q
        },
        selectChoice: function (P) {
            var Q = this.container.find(".select2-search-choice-focus");
            if (Q.length && P && P[0] == Q[0]) { } else {
                if (Q.length) {
                    this.opts.element.trigger("choice-deselected", Q)
                }
                Q.removeClass("select2-search-choice-focus");
                if (P && P.length) {
                    this.close();
                    P.addClass("select2-search-choice-focus");
                    this.opts.element.trigger("choice-selected", P)
                }
            }
        },
        destroy: function () {
            jQuery("label[for='" + this.search.attr("id") + "']").attr("for", this.opts.element.attr("id"));
            this.parent.destroy.apply(this, arguments)
        },
        initContainer: function () {
            var P = ".select2-choices",
                Q;
            this.searchContainer = this.container.find(".select2-search-field");
            this.selection = Q = this.container.find(P);
            var R = this;
            this.selection.on("click", ".select2-search-choice:not(.select2-locked)", function (S) {
                R.search[0].focus();
                R.selectChoice(jQuery(this))
            });
            this.search.attr("id", "s2id_autogen" + a());
            jQuery("label[for='" + this.opts.element.attr("id") + "']").attr("for", this.search.attr("id"));
            this.search.on("input paste", this.bind(function () {
                if (!this.isInterfaceEnabled()) {
                    return
                }
                if (!this.opened()) {
                    this.open()
                }
            }));
            this.search.attr("tabindex", this.elementTabIndex);
            this.keydowns = 0;
            this.search.on("keydown", this.bind(function (W) {
                if (!this.isInterfaceEnabled()) {
                    return
                } ++this.keydowns;
                var U = Q.find(".select2-search-choice-focus");
                var V = U.prev(".select2-search-choice:not(.select2-locked)");
                var T = U.next(".select2-search-choice:not(.select2-locked)");
                var X = f(this.search);
                if (U.length && (W.which == L.LEFT || W.which == L.RIGHT || W.which == L.BACKSPACE || W.which == L.DELETE || W.which == L.ENTER)) {
                    var S = U;
                    if (W.which == L.LEFT && V.length) {
                        S = V
                    } else {
                        if (W.which == L.RIGHT) {
                            S = T.length ? T : null
                        } else {
                            if (W.which === L.BACKSPACE) {
                                this.unselect(U.first());
                                this.search.width(10);
                                S = V.length ? V : T
                            } else {
                                if (W.which == L.DELETE) {
                                    this.unselect(U.first());
                                    this.search.width(10);
                                    S = T.length ? T : null
                                } else {
                                    if (W.which == L.ENTER) {
                                        S = null
                                    }
                                }
                            }
                        }
                    }
                    this.selectChoice(S);
                    B(W);
                    if (!S || !S.length) {
                        this.open()
                    }
                    return
                } else {
                    if (((W.which === L.BACKSPACE && this.keydowns == 1) || W.which == L.LEFT) && (X.offset == 0 && !X.length)) {
                        this.selectChoice(Q.find(".select2-search-choice:not(.select2-locked)").last());
                        B(W);
                        return
                    } else {
                        this.selectChoice(null)
                    }
                } if (this.opened()) {
                    switch (W.which) {
                        case L.UP:
                        case L.DOWN:
                            this.moveHighlight((W.which === L.UP) ? -1 : 1);
                            B(W);
                            return;
                        case L.ENTER:
                            this.selectHighlighted();
                            B(W);
                            return;
                        case L.TAB:
                            this.selectHighlighted({
                                noFocus: true
                            });
                            this.close();
                            return;
                        case L.ESC:
                            this.cancel(W);
                            B(W);
                            return
                    }
                }
                if (W.which === L.TAB || L.isControl(W) || L.isFunctionKey(W) || W.which === L.BACKSPACE || W.which === L.ESC) {
                    return
                }
                if (W.which === L.ENTER) {
                    if (this.opts.openOnEnter === false) {
                        return
                    } else {
                        if (W.altKey || W.ctrlKey || W.shiftKey || W.metaKey) {
                            return
                        }
                    }
                }
                this.open();
                if (W.which === L.PAGE_UP || W.which === L.PAGE_DOWN) {
                    B(W)
                }
                if (W.which === L.ENTER) {
                    B(W)
                }
            }));
            this.search.on("keyup", this.bind(function (S) {
                this.keydowns = 0;
                this.resizeSearch()
            }));
            this.search.on("blur", this.bind(function (S) {
                this.container.removeClass("select2-container-active");
                this.search.removeClass("select2-focused");
                this.selectChoice(null);
                if (!this.opened()) {
                    this.clearSearch()
                }
                S.stopImmediatePropagation();
                this.opts.element.trigger(jQuery.Event("select2-blur"))
            }));
            this.container.on("click", P, this.bind(function (S) {
                if (!this.isInterfaceEnabled()) {
                    return
                }
                if (jQuery(S.target).closest(".select2-search-choice").length > 0) {
                    return
                }
                this.selectChoice(null);
                this.clearPlaceholder();
                if (!this.container.hasClass("select2-container-active")) {
                    this.opts.element.trigger(jQuery.Event("select2-focus"))
                }
                this.open();
                this.focusSearch();
                S.preventDefault()
            }));
            this.container.on("focus", P, this.bind(function () {
                if (!this.isInterfaceEnabled()) {
                    return
                }
                if (!this.container.hasClass("select2-container-active")) {
                    this.opts.element.trigger(jQuery.Event("select2-focus"))
                }
                this.container.addClass("select2-container-active");
                this.dropdown.addClass("select2-drop-active");
                this.clearPlaceholder()
            }));
            this.initContainerWidth();
            this.opts.element.addClass("select2-offscreen");
            this.clearSearch()
        },
        enableInterface: function () {
            if (this.parent.enableInterface.apply(this, arguments)) {
                this.search.prop("disabled", !this.isInterfaceEnabled())
            }
        },
        initSelection: function () {
            var Q;
            if (this.opts.element.val() === "" && this.opts.element.text() === "") {
                this.updateSelection([]);
                this.close();
                this.clearSearch()
            }
            if (this.select || this.opts.element.val() !== "") {
                var P = this;
                this.opts.initSelection.call(null, this.opts.element, function (R) {
                    if (R !== m && R !== null) {
                        P.updateSelection(R);
                        P.close();
                        P.clearSearch()
                    }
                })
            }
        },
        clearSearch: function () {
            var Q = this.getPlaceholder(),
                P = this.getMaxSearchWidth();
            if (Q !== m && this.getVal().length === 0 && this.search.hasClass("select2-focused") === false) {
                this.search.val(Q).addClass("select2-default");
                this.search.width(P > 0 ? P : this.container.css("width"))
            } else {
                this.search.val("").width(10)
            }
        },
        clearPlaceholder: function () {
            if (this.search.hasClass("select2-default")) {
                this.search.val("").removeClass("select2-default")
            }
        },
        opening: function () {
            this.clearPlaceholder();
            this.resizeSearch();
            this.parent.opening.apply(this, arguments);
            this.focusSearch();
            this.updateResults(true);
            this.search.focus();
            this.opts.element.trigger(jQuery.Event("select2-open"))
        },
        close: function () {
            if (!this.opened()) {
                return
            }
            this.parent.close.apply(this, arguments)
        },
        focus: function () {
            this.close();
            this.search.focus()
        },
        isFocused: function () {
            return this.search.hasClass("select2-focused")
        },
        updateSelection: function (S) {
            var R = [],
                Q = [],
                P = this;
            jQuery(S).each(function () {
                if (r(P.id(this), R) < 0) {
                    R.push(P.id(this));
                    Q.push(this)
                }
            });
            S = Q;
            this.selection.find(".select2-search-choice").remove();
            jQuery(S).each(function () {
                P.addSelectedChoice(this)
            });
            P.postprocessResults()
        },
        tokenize: function () {
            var P = this.search.val();
            P = this.opts.tokenizer.call(this, P, this.data(), this.bind(this.onSelect), this.opts);
            if (P != null && P != m) {
                this.search.val(P);
                if (P.length > 0) {
                    this.open()
                }
            }
        },
        onSelect: function (Q, P) {
            if (!this.triggerSelect(Q)) {
                return
            }
            this.addSelectedChoice(Q);
            this.opts.element.trigger({
                type: "selected",
                val: this.id(Q),
                choice: Q
            });
            if (this.select || !this.opts.closeOnSelect) {
                this.postprocessResults(Q, false, this.opts.closeOnSelect === true)
            }
            if (this.opts.closeOnSelect) {
                this.close();
                this.search.width(10)
            } else {
                if (this.countSelectableResults() > 0) {
                    this.search.width(10);
                    this.resizeSearch();
                    if (this.getMaximumSelectionSize() > 0 && this.val().length >= this.getMaximumSelectionSize()) {
                        this.updateResults(true)
                    }
                    this.positionDropdown()
                } else {
                    this.close();
                    this.search.width(10)
                }
            }
            this.triggerChange({
                added: Q
            });
            if (!P || !P.noFocus) {
                this.focusSearch()
            }
        },
        cancel: function () {
            this.close();
            this.focusSearch()
        },
        addSelectedChoice: function (T) {
            var V = !T.locked,
                R = jQuery("<li class='select2-search-choice'>    <div></div>    <a href='#' onclick='return false;' class='select2-search-choice-close' tabindex='-1'></a></li>"),
                W = jQuery("<li class='select2-search-choice select2-locked'><div></div></li>");
            var S = V ? R : W,
                P = this.id(T),
                Q = this.getVal(),
                U, X;
            U = this.opts.formatSelection(T, S.find("div"), this.opts.escapeMarkup);
            if (U != m) {
                S.find("div").replaceWith("<div>" + U + "</div>")
            }
            X = this.opts.formatSelectionCssClass(T, S.find("div"));
            if (X != m) {
                S.addClass(X)
            }
            if (V) {
                S.find(".select2-search-choice-close").on("mousedown", B).on("click dblclick", this.bind(function (Y) {
                    if (!this.isInterfaceEnabled()) {
                        return
                    }
                    jQuery(Y.target).closest(".select2-search-choice").fadeOut("fast", this.bind(function () {
                        this.unselect(jQuery(Y.target));
                        this.selection.find(".select2-search-choice-focus").removeClass("select2-search-choice-focus");
                        this.close();
                        this.focusSearch()
                    })).dequeue();
                    B(Y)
                })).on("focus", this.bind(function () {
                    if (!this.isInterfaceEnabled()) {
                        return
                    }
                    this.container.addClass("select2-container-active");
                    this.dropdown.addClass("select2-drop-active")
                }))
            }
            S.data("select2-data", T);
            S.insertBefore(this.searchContainer);
            Q.push(P);
            this.setVal(Q)
        },
        unselect: function (R) {
            var T = this.getVal(),
                S, Q;
            R = R.closest(".select2-search-choice");
            if (R.length === 0) {
                throw "Invalid argument: " + R + ". Must be .select2-search-choice"
            }
            S = R.data("select2-data");
            if (!S) {
                return
            }
            while ((Q = r(this.id(S), T)) >= 0) {
                T.splice(Q, 1);
                this.setVal(T);
                if (this.select) {
                    this.postprocessResults()
                }
            }
            var P = jQuery.Event("select2-removing");
            P.val = this.id(S);
            P.choice = S;
            this.opts.element.trigger(P);
            if (P.isDefaultPrevented()) {
                return
            }
            R.remove();
            this.opts.element.trigger({
                type: "select2-removed",
                val: this.id(S),
                choice: S
            });
            this.triggerChange({
                removed: S
            })
        },
        postprocessResults: function (T, Q, S) {
            var U = this.getVal(),
                V = this.results.find(".select2-result"),
                R = this.results.find(".select2-result-with-children"),
                P = this;
            V.each2(function (X, W) {
                var Y = P.id(W.data("select2-data"));
                if (r(Y, U) >= 0) {
                    W.addClass("select2-selected");
                    W.find(".select2-result-selectable").addClass("select2-selected")
                }
            });
            R.each2(function (X, W) {
                if (!W.is(".select2-result-selectable") && W.find(".select2-result-selectable:not(.select2-selected)").length === 0) {
                    W.addClass("select2-selected")
                }
            });
            if (this.highlight() == -1 && S !== false) {
                P.highlight(0)
            }
            if (!this.opts.createSearchChoice && !V.filter(".select2-result:not(.select2-selected)").length > 0) {
                if (!T || T && !T.more && this.results.find(".select2-no-results").length === 0) {
                    if (z(P.opts.formatNoMatches, "formatNoMatches")) {
                        this.results.append("<li class='select2-no-results'>" + P.opts.formatNoMatches(P.search.val()) + "</li>")
                    }
                }
            }
        },
        getMaxSearchWidth: function () {
            return this.selection.width() - h(this.search)
        },
        resizeSearch: function () {
            var U, S, R, P, Q, T = h(this.search);
            U = o(this.search) + 10;
            S = this.search.offset().left;
            R = this.selection.width();
            P = this.selection.offset().left;
            Q = R - (S - P) - T;
            if (Q < U) {
                Q = R - T
            }
            if (Q < 40) {
                Q = R - T
            }
            if (Q <= 0) {
                Q = U
            }
            this.search.width(Math.floor(Q))
        },
        getVal: function () {
            var P;
            if (this.select) {
                P = this.select.val();
                return P === null ? [] : P
            } else {
                P = this.opts.element.val();
                return i(P, this.opts.separator)
            }
        },
        setVal: function (Q) {
            var P;
            if (this.select) {
                this.select.val(Q)
            } else {
                P = [];
                jQuery(Q).each(function () {
                    if (r(this, P) < 0) {
                        P.push(this)
                    }
                });
                this.opts.element.val(P.length === 0 ? "" : P.join(this.opts.separator))
            }
        },
        buildChangeDetails: function (P, S) {
            var S = S.slice(0),
                P = P.slice(0);
            for (var R = 0; R < S.length; R++) {
                for (var Q = 0; Q < P.length; Q++) {
                    if (u(this.opts.id(S[R]), this.opts.id(P[Q]))) {
                        S.splice(R, 1);
                        if (R > 0) {
                            R--
                        }
                        P.splice(Q, 1);
                        Q--
                    }
                }
            }
            return {
                added: S,
                removed: P
            }
        },
        val: function (S, Q) {
            var R, P = this;
            if (arguments.length === 0) {
                return this.getVal()
            }
            R = this.data();
            if (!R.length) {
                R = []
            }
            if (!S && S !== 0) {
                this.opts.element.val("");
                this.updateSelection([]);
                this.clearSearch();
                if (Q) {
                    this.triggerChange({
                        added: this.data(),
                        removed: R
                    })
                }
                return
            }
            this.setVal(S);
            if (this.select) {
                this.opts.initSelection(this.select, this.bind(this.updateSelection));
                if (Q) {
                    this.triggerChange(this.buildChangeDetails(R, this.data()))
                }
            } else {
                if (this.opts.initSelection === m) {
                    throw new Error("val() cannot be called if initSelection() is not defined")
                }
                this.opts.initSelection(this.opts.element, function (U) {
                    var T = jQuery.map(U, P.id);
                    P.setVal(T);
                    P.updateSelection(U);
                    P.clearSearch();
                    if (Q) {
                        P.triggerChange(P.buildChangeDetails(R, P.data()))
                    }
                })
            }
            this.clearSearch()
        },
        onSortStart: function () {
            if (this.select) {
                throw new Error("Sorting of elements is not supported when attached to <select>. Attach to <input type='hidden'/> instead.")
            }
            this.search.width(0);
            this.searchContainer.hide()
        },
        onSortEnd: function () {
            var Q = [],
                P = this;
            this.searchContainer.show();
            this.searchContainer.appendTo(this.searchContainer.parent());
            this.resizeSearch();
            this.selection.find(".select2-search-choice").each(function () {
                Q.push(P.opts.id(jQuery(this).data("select2-data")))
            });
            this.setVal(Q);
            this.triggerChange()
        },
        data: function (R, S) {
            var Q = this,
                T, P;
            if (arguments.length === 0) {
                return this.selection.find(".select2-search-choice").map(function () {
                    return jQuery(this).data("select2-data")
                }).get()
            } else {
                P = this.data();
                if (!R) {
                    R = []
                }
                T = jQuery.map(R, function (U) {
                    return Q.opts.id(U)
                });
                this.setVal(T);
                this.updateSelection(R);
                this.clearSearch();
                if (S) {
                    this.triggerChange(this.buildChangeDetails(P, this.data()))
                }
            }
        }
    });
    jQuery.fn.select2 = function () {
        var U = Array.prototype.slice.call(arguments, 0),
            Q, T, P, W, Y, X = ["val", "destroy", "opened", "open", "close", "focus", "isFocused", "container", "dropdown", "onSortStart", "onSortEnd", "enable", "disable", "readonly", "positionDropdown", "data", "search"],
            V = ["opened", "isFocused", "container", "dropdown"],
            R = ["val", "data"],
            S = {
                search: "externalSearch"
            };
        this.each(function () {
            if (U.length === 0 || typeof (U[0]) === "object") {
                Q = U.length === 0 ? {} : jQuery.extend({}, U[0]);
                Q.element = jQuery(this);
                if (Q.element.get(0).tagName.toLowerCase() === "select") {
                    Y = Q.element.prop("multiple")
                } else {
                    Y = Q.multiple || false;
                    if ("tags" in Q) {
                        Q.multiple = Y = true
                    }
                }
                T = Y ? new c() : new y();
                T.init(Q)
            } else {
                if (typeof (U[0]) === "string") {
                    if (r(U[0], X) < 0) {
                        throw "Unknown method: " + U[0]
                    }
                    W = m;
                    T = jQuery(this).data("select2");
                    if (T === m) {
                        return
                    }
                    P = U[0];
                    if (P === "container") {
                        W = T.container
                    } else {
                        if (P === "dropdown") {
                            W = T.dropdown
                        } else {
                            if (S[P]) {
                                P = S[P]
                            }
                            W = T[P].apply(T, U.slice(1))
                        }
                    } if (r(U[0], V) >= 0 || (r(U[0], R) && U.length == 1)) {
                        return false
                    }
                } else {
                    throw "Invalid arguments to select2 plugin: " + U
                }
            }
        });
        return (W === m) ? this : W
    };
    jQuery.fn.select2.defaults = {
        width: "copy",
        loadMorePadding: 0,
        closeOnSelect: true,
        openOnEnter: true,
        containerCss: {},
        dropdownCss: {},
        containerCssClass: "",
        dropdownCssClass: "",
        formatResult: function (Q, R, T, P) {
            var S = [];
            v(Q.text, T.term, S, P);
            return S.join("")
        },
        formatSelection: function (R, Q, P) {
            return R ? P(R.text) : m
        },
        sortResults: function (Q, P, R) {
            return Q
        },
        formatResultCssClass: function (P) {
            return m
        },
        formatSelectionCssClass: function (Q, P) {
            return m
        },
        formatNoMatches: function () {
            return "No matches found"
        },
        formatInputTooShort: function (P, Q) {
            var R = Q - P.length;
            return "Please enter " + R + " more character" + (R == 1 ? "" : "s")
        },
        formatInputTooLong: function (Q, P) {
            var R = Q.length - P;
            return "Please delete " + R + " character" + (R == 1 ? "" : "s")
        },
        formatSelectionTooBig: function (P) {
            return "You can only select " + P + " item" + (P == 1 ? "" : "s")
        },
        formatLoadMore: function (P) {
            return "Loading more results..."
        },
        formatSearching: function () {
            return "Searching..."
        },
        minimumResultsForSearch: 0,
        minimumInputLength: 0,
        maximumInputLength: null,
        maximumSelectionSize: 0,
        id: function (P) {
            return P.id
        },
        matcher: function (P, Q) {
            return e("" + Q).toUpperCase().indexOf(e("" + P).toUpperCase()) >= 0
        },
        separator: ",",
        tokenSeparators: [],
        tokenizer: g,
        escapeMarkup: H,
        blurOnChange: false,
        selectOnBlur: false,
        adaptContainerCssClass: function (P) {
            return P
        },
        adaptDropdownCssClass: function (P) {
            return null
        },
        nextSearchTerm: function (P, Q) {
            return m
        }
    };
    jQuery.fn.select2.ajaxDefaults = {
        transport: jQuery.ajax,
        params: {
            type: "GET",
            cache: false,
            dataType: "json"
        }
    };
    window.Select2 = {
        query: {
            ajax: F,
            local: I,
            tags: A
        },
        util: {
            debounce: k,
            markMatch: v,
            escapeMarkup: H,
            stripDiacritics: e
        },
        "class": {
            "abstract": O,
            single: y,
            multi: c
        }
    }
}(jQuery));